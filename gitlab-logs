Thank you for using GitLab Docker Image!
Current version: gitlab-ce=13.4.1-ce.0

Configure GitLab for your system by editing /etc/gitlab/gitlab.rb file
And restart this container to reload settings.
To do it use docker exec:

  docker exec -it gitlab vim /etc/gitlab/gitlab.rb
  docker restart gitlab

For a comprehensive list of configuration options please see the Omnibus GitLab readme
https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md

If this container fails to start due to permission problems try to fix it by executing:

  docker exec -it gitlab update-permissions
  docker restart gitlab

Cleaning stale PIDs & sockets
Installing gitlab.rb config...
Generating ssh_host_rsa_key...
Generating public/private rsa key pair.
Your identification has been saved in /etc/gitlab/ssh_host_rsa_key.
Your public key has been saved in /etc/gitlab/ssh_host_rsa_key.pub.
The key fingerprint is:
SHA256:Ib6RRbfLb9hcvVdWWSla5RdYdA0NlOe3JQ5Q/7rNGAw root@jenkins.local
The key's randomart image is:
+---[RSA 2048]----+
|        . ....OX=|
|       . ... =o.O|
|      . o ..o o=o|
|     . + o o. .o*|
|      + S o Eo..O|
|       o   = +.+o|
|      .   . = +..|
|           .   *.|
|              o o|
+----[SHA256]-----+
Generating ssh_host_ecdsa_key...
Generating public/private ecdsa key pair.
Your identification has been saved in /etc/gitlab/ssh_host_ecdsa_key.
Your public key has been saved in /etc/gitlab/ssh_host_ecdsa_key.pub.
The key fingerprint is:
SHA256:DaKKPO5bW02m8rGclvi809CTgBMIhDiGxaT44qxm4H8 root@jenkins.local
The key's randomart image is:
+---[ECDSA 256]---+
|B=+              |
|*+..             |
|+.  o . .        |
| . o o . o       |
|. . o ooS .      |
|=o . .=+         |
|+=.o.++..        |
|o+o.BE+.         |
|=+oo+Oo          |
+----[SHA256]-----+
Generating ssh_host_ed25519_key...
Generating public/private ed25519 key pair.
Your identification has been saved in /etc/gitlab/ssh_host_ed25519_key.
Your public key has been saved in /etc/gitlab/ssh_host_ed25519_key.pub.
The key fingerprint is:
SHA256:usk7LO04tcZZaCF2QV5kQ8G0VnVItEbKJOHha53fqzg root@jenkins.local
The key's randomart image is:
+--[ED25519 256]--+
|     ..=%oo+=..  |
|     ..=.O o.o   |
|      ..= o o    |
|    o o. o o     |
|   . o oS o      |
|      +o.  . .   |
|     *.+    . .  |
|    ooOo  E.   . |
|    .=*o  .....  |
+----[SHA256]-----+
Preparing services...
Starting services...
Configuring GitLab...
Starting Chef Infra Client, version 15.12.22[0m
resolving cookbooks for run list: ["gitlab"][0m
Synchronizing Cookbooks:[0m
  - gitlab (0.0.1)[0m
  - package (0.1.0)[0m
  - postgresql (0.1.0)[0m
  - redis (0.1.0)[0m
  - monitoring (0.1.0)[0m
  - registry (0.1.0)[0m
  - mattermost (0.1.0)[0m
  - consul (0.1.0)[0m
  - gitaly (0.1.0)[0m
  - letsencrypt (0.1.0)[0m
  - nginx (0.1.0)[0m
  - runit (5.1.3)[0m
  - praefect (0.1.0)[0m
  - acme (4.1.1)[0m
  - crond (0.1.0)[0m
Installing Cookbook Gems:[0m
Compiling Cookbooks...[0m
Recipe: gitlab::default[0m
  * directory[/etc/gitlab] action create
    [32m- change mode from '0755' to '0775'[0m
[0m  Converging 286 resources[0m
  * directory[/etc/gitlab] action create (up to date)
  * directory[Create /var/opt/gitlab] action create
    [32m- change owner from 'git' to 'root'[0m
    [32m- change group from 'git' to 'root'[0m
[0m  * directory[Create /var/log/gitlab] action create (up to date)
  * directory[/opt/gitlab/embedded/etc] action create
    [32m- create new directory /opt/gitlab/embedded/etc[0m
    [32m- change mode from '' to '0755'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0m  * template[/opt/gitlab/embedded/etc/gitconfig] action create
    [32m- create new file /opt/gitlab/embedded/etc/gitconfig[0m
    [32m- update content in file /opt/gitlab/embedded/etc/gitconfig from none to 147a3a[0m
    [37m--- /opt/gitlab/embedded/etc/gitconfig	2022-05-01 19:51:29.481333466 +0000[0m
    [37m+++ /opt/gitlab/embedded/etc/.chef-gitconfig20220501-32-5si41x	2022-05-01 19:51:29.481333466 +0000[0m
    [37m@@ -1,17 +1,34 @@[0m
    [37m+[pack][0m
    [37m+  threads = 1[0m
    [37m+useSparse = true[0m
    [37m+[receive][0m
    [37m+  fsckObjects = true[0m
    [37m+advertisePushOptions = true[0m
    [37m+[repack][0m
    [37m+  writeBitmaps = true[0m
    [37m+[transfer][0m
    [37m+  hideRefs=^refs/tmp/[0m
    [37m+hideRefs=^refs/keep-around/[0m
    [37m+hideRefs=^refs/remotes/[0m
    [37m+[core][0m
    [37m+  alternateRefsCommand="exit 0 #"[0m
    [37m+fsyncObjectFiles = true[0m
    [37m+[fetch][0m
    [37m+  writeCommitGraph = true[0m
    [32m- change mode from '' to '0755'[0m
[0mRecipe: gitlab::web-server[0m
  * account[Webserver user and group] action create (up to date)
Recipe: gitlab::users[0m
  * directory[/var/opt/gitlab] action create (up to date)
  * account[GitLab user and group] action create (up to date)
  * template[/var/opt/gitlab/.gitconfig] action create
    [32m- create new file /var/opt/gitlab/.gitconfig[0m
    [32m- update content in file /var/opt/gitlab/.gitconfig from none to 3deb1c[0m
    [37m--- /var/opt/gitlab/.gitconfig	2022-05-01 19:51:29.492333581 +0000[0m
    [37m+++ /var/opt/gitlab/.chef-.gitconfig20220501-32-1m3sgnx.gitconfig	2022-05-01 19:51:29.492333581 +0000[0m
    [37m@@ -1,13 +1,26 @@[0m
    [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
    [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
    [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
    [37m+[0m
    [37m+[user][0m
    [37m+        name = GitLab[0m
    [37m+        email = gitlab@jenkins.local[0m
    [37m+[core][0m
    [37m+        autocrlf = input[0m
    [37m+        alternateRefsCommand="exit 0 #"[0m
    [37m+        fsyncObjectFiles = true[0m
    [37m+[gc][0m
    [37m+        auto = 0[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'git'[0m
    [32m- change group from '' to 'git'[0m
[0m  * directory[/var/opt/gitlab/.bundle] action create
    [32m- create new directory /var/opt/gitlab/.bundle[0m
    [32m- change owner from '' to 'git'[0m
    [32m- change group from '' to 'git'[0m
[0mRecipe: gitlab::gitlab-shell[0m
  * storage_directory[/var/opt/gitlab/.ssh] action create
    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/.ssh[0m
[0m  
[0m  * directory[/var/log/gitlab/gitlab-shell/] action create
    [32m- create new directory /var/log/gitlab/gitlab-shell/[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[/var/opt/gitlab/gitlab-shell] action create
    [32m- create new directory /var/opt/gitlab/gitlab-shell[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create
      [32m- create new file /var/opt/gitlab/gitlab-shell/config.yml[0m
      [32m- update content in file /var/opt/gitlab/gitlab-shell/config.yml from none to 31e576[0m
      [37m--- /var/opt/gitlab/gitlab-shell/config.yml	2022-05-01 19:51:29.649335218 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-shell/.chef-config20220501-32-1yva1r1.yml	2022-05-01 19:51:29.649335218 +0000[0m
      [37m@@ -1,41 +1,82 @@[0m
      [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
      [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
      [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
      [37m+[0m
      [37m+# GitLab user. git by default[0m
      [37m+user: git[0m
      [37m+[0m
      [37m+# Url to gitlab instance. Used for api calls. May but need not end with a slash.[0m
      [37m+gitlab_url: "http+unix://%2Fvar%2Fopt%2Fgitlab%2Fgitlab-workhorse%2Fsocket"[0m
      [37m+[0m
      [37m+gitlab_relative_url_root: [0m
      [37m+[0m
      [37m+http_settings:[0m
      [37m+  [0m
      [37m+#  user: someone[0m
      [37m+#  password: somepass[0m
      [37m+#  ca_file: /etc/ssl/cert.pem[0m
      [37m+#  ca_path: /etc/pki/tls/certs[0m
      [37m+#  self_signed_cert: false[0m
      [37m+[0m
      [37m+# File used as authorized_keys for gitlab user[0m
      [37m+auth_file: "/var/opt/gitlab/.ssh/authorized_keys"[0m
      [37m+[0m
      [37m+# Log file.[0m
      [37m+# Default is gitlab-shell.log in the root directory.[0m
      [37m+log_file: "/var/log/gitlab/gitlab-shell/gitlab-shell.log"[0m
      [37m+[0m
      [37m+# Log level. INFO by default[0m
      [37m+log_level: [0m
      [37m+[0m
      [37m+log_format: json[0m
      [37m+[0m
      [37m+# Audit usernames.[0m
      [37m+# Set to true to see real usernames in the logs instead of key ids, which is easier to follow, but[0m
      [37m+# incurs an extra API call on every gitlab-shell command.[0m
      [37m+audit_usernames: [0m
      [37m+[0m
      [37m+migration:[0m
      [37m+  {"enabled":true,"features":[]}[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0640'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'git'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml[0m
[0m  
[0m  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create
    [32m- create symlink at /opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret to /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret[0m
[0m  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing
    [32m- create new file /var/opt/gitlab/.ssh/authorized_keys[0m
    [32m- change mode from '' to '0600'[0m
    [32m- change owner from '' to 'git'[0m
    [32m- change group from '' to 'git'[0m
[0mRecipe: gitlab::gitlab-rails[0m
  * storage_directory[/var/opt/gitlab/git-data] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/git-data[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/git-data/repositories] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/git-data/repositories[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/packages[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/uploads[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-ci/builds[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/cache[0m
[0m  
[0m  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp[0m
[0m  
[0m  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/pages[0m
[0m  
[0m  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create
    [32m- create new directory /var/opt/gitlab/gitlab-rails/etc[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[create /opt/gitlab/etc/gitlab-rails] action create
    [32m- create new directory /opt/gitlab/etc/gitlab-rails[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[create /var/opt/gitlab/gitlab-rails/working] action create
    [32m- create new directory /var/opt/gitlab/gitlab-rails/working[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create
    [32m- create new directory /var/opt/gitlab/gitlab-rails/tmp[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create
    [32m- create new directory /var/opt/gitlab/gitlab-rails/upgrade-status[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[create /var/log/gitlab/gitlab-rails] action create
    [32m- create new directory /var/log/gitlab/gitlab-rails[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * storage_directory[/var/opt/gitlab/backups] action create
    * ruby_block[directory resource: /var/opt/gitlab/backups] action run
      [32m- execute the ruby block directory resource: /var/opt/gitlab/backups[0m
[0m  
[0m  * directory[/var/opt/gitlab/gitlab-rails] action create
    [32m- change owner from 'root' to 'git'[0m
[0m  * directory[/var/opt/gitlab/gitlab-ci] action create
    [32m- change owner from 'root' to 'git'[0m
[0m  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create
    [32m- create new file /var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key[0m
    [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key from none to 6edc9c[0m
    [32m- suppressed sensitive resource[0m
    [32m- change owner from '' to 'git'[0m
    [32m- change group from '' to 'git'[0m
[0m  * template[/opt/gitlab/etc/gitlab-rails/gitlab-rails-rc] action create
    [32m- create new file /opt/gitlab/etc/gitlab-rails/gitlab-rails-rc[0m
    [32m- update content in file /opt/gitlab/etc/gitlab-rails/gitlab-rails-rc from none to 000a09[0m
    [37m--- /opt/gitlab/etc/gitlab-rails/gitlab-rails-rc	2022-05-01 19:51:31.539354924 +0000[0m
    [37m+++ /opt/gitlab/etc/gitlab-rails/.chef-gitlab-rails-rc20220501-32-1s2p9sg	2022-05-01 19:51:31.539354924 +0000[0m
    [37m@@ -1,5 +1,10 @@[0m
    [37m+gitlab_user='git'[0m
    [37m+gitlab_group='git'[0m
    [37m+registry_dir='/var/opt/gitlab/gitlab-rails/shared/registry'[0m
    [37m+registry_user='registry'[0m
    [37m+registry_group='registry'[0m
[0m  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)
  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/database.yml[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/database.yml from none to ddd0bc[0m
      [37m--- /var/opt/gitlab/gitlab-rails/etc/database.yml	2022-05-01 19:51:31.569355237 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-rails/etc/.chef-database20220501-32-nn99ri.yml	2022-05-01 19:51:31.569355237 +0000[0m
      [37m@@ -1,24 +1,48 @@[0m
      [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
      [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
      [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
      [37m+[0m
      [37m+production:[0m
      [37m+  adapter: postgresql[0m
      [37m+  encoding: unicode[0m
      [37m+  collation: [0m
      [37m+  database: gitlabhq_production[0m
      [37m+  username: "gitlab"[0m
      [37m+  password: [0m
      [37m+  host: "/var/opt/gitlab/postgresql"[0m
      [37m+  port: 5432[0m
      [37m+  socket: [0m
      [37m+  sslmode: [0m
      [37m+  sslcompression: 0[0m
      [37m+  sslrootcert: [0m
      [37m+  sslca: [0m
      [37m+  load_balancing: {"hosts":[]}[0m
      [37m+  prepared_statements: false[0m
      [37m+  statement_limit: 1000[0m
      [37m+  connect_timeout: [0m
      [37m+  variables:[0m
      [37m+    statement_timeout: [0m
      [32m- change mode from '' to '0640'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'git'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml[0m
[0m  
[0m  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/secrets.yml[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/secrets.yml from none to 6b2141[0m
      [32m- suppressed sensitive resource[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml[0m
[0m  
[0m  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/resque.yml[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/resque.yml from none to ec4232[0m
      [37m--- /var/opt/gitlab/gitlab-rails/etc/resque.yml	2022-05-01 19:51:31.591355466 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-rails/etc/.chef-resque20220501-32-1mainxe.yml	2022-05-01 19:51:31.591355466 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+production:[0m
      [37m+  url: unix:/var/opt/gitlab/redis/redis.socket[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml[0m
[0m  
[0m  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/cable.yml[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/cable.yml from none to 551667[0m
      [37m--- /var/opt/gitlab/gitlab-rails/etc/cable.yml	2022-05-01 19:51:31.606355623 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-rails/etc/.chef-cable20220501-32-j7yp9p.yml	2022-05-01 19:51:31.606355623 +0000[0m
      [37m@@ -1,3 +1,6 @@[0m
      [37m+production:[0m
      [37m+  adapter: redis[0m
      [37m+  url: unix:/var/opt/gitlab/redis/redis.socket[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml[0m
[0m  
[0m  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)
  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)
  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)
  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)
     (up to date)
  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/gitlab.yml[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab.yml from none to 600f9e[0m
      [37m--- /var/opt/gitlab/gitlab-rails/etc/gitlab.yml	2022-05-01 19:51:31.670356290 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-rails/etc/.chef-gitlab20220501-32-1yf5g5.yml	2022-05-01 19:51:31.670356290 +0000[0m
      [37m@@ -1,766 +1,1532 @@[0m
      [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
      [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
      [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
      [37m+[0m
      [37m+production: &base[0m
      [37m+  #[0m
      [37m+  # 1. GitLab app settings[0m
      [37m+  # ==========================[0m
      [37m+[0m
      [37m+  ## GitLab settings[0m
      [37m+  gitlab:[0m
      [37m+    ## Web server settings (note: host is the FQDN, do not include http://)[0m
      [37m+    host: jenkins.local[0m
      [37m+    port: 8090[0m
      [37m+    https: true[0m
      [37m+[0m
      [37m+    # The maximum time unicorn/puma can spend on the request. This needs to be smaller than the worker timeout.[0m
      [37m+    # Default is 95% of the worker timeout[0m
      [37m+    max_request_duration_seconds: 57[0m
      [37m+[0m
      [37m+    # Uncommment this line below if your ssh host is different from HTTP/HTTPS one[0m
      [37m+    # (you'd obviously need to replace ssh.host_example.com with your own host).[0m
      [37m+    # Otherwise, ssh host will be set to the `host:` value above[0m
      [37m+    ssh_host: [0m
      [37m+[0m
      [37m+    # If your ssh user differs from the system user, you need to specify it here[0m
      [37m+    # Set it to an empty string to omit the username from any ssh url altogether[0m
      [37m+    ssh_user: [0m
      [37m+[0m
      [37m+    # WARNING: See config/application.rb under "Relative url support" for the list of[0m
      [37m+    # other files that need to be changed for relative url support[0m
      [37m+    relative_url_root: [0m
      [37m+[0m
      [37m+    # Trusted Proxies[0m
      [37m+    # Customize if you have GitLab behind a reverse proxy which is running on a different machine.[0m
      [37m+    # Add the IP address for your reverse proxy to the list, otherwise users will appear signed in from that address.[0m
      [37m+    trusted_proxies:[0m
      [37m+[0m
      [37m+[0m
      [37m+    # Uncomment and customize if you can't use the default user to run GitLab (default: 'git')[0m
      [37m+    user: git[0m
      [37m+[0m
      [37m+    ## Date & Time settings[0m
      [37m+    time_zone: [0m
      [37m+[0m
      [37m+    ## Email settings[0m
      [37m+    # Uncomment and set to false if you need to disable email sending from GitLab (default: true)[0m
      [37m+    email_enabled: [0m
      [37m+    # Email address used in the "From" field in mails sent by GitLab[0m
      [37m+    email_from: gitlab@jenkins.local[0m
      [37m+    email_display_name: [0m
      [37m+    email_reply_to: [0m
      [37m+    email_subject_suffix: [0m
      [37m+    # Email SMIME signing settings[0m
      [37m+    email_smime:[0m
      [37m+      enabled: false[0m
      [37m+      key_file: /etc/gitlab/ssl/gitlab_smime.key[0m
      [37m+      cert_file: /etc/gitlab/ssl/gitlab_smime.crt[0m
      [37m+      ca_certs_file: [0m
      [37m+[0m
      [37m+    # Email server smtp settings are in [a separate file](initializers/smtp_settings.rb.sample).[0m
      [37m+[0m
      [37m+    ## User settings[0m
      [37m+    default_can_create_group:   # default: true[0m
      [37m+    username_changing_enabled:  # default: true - User can change her username/namespace[0m
      [37m+    ## Default theme[0m
      [37m+    ##   1 - Graphite[0m
      [37m+    ##   2 - Charcoal[0m
      [37m+    ##   3 - Green[0m
      [37m+    ##   4 - Gray[0m
      [37m+    ##   5 - Violet[0m
      [37m+    ##   6 - Blue[0m
      [37m+    default_theme:  # default: 2[0m
      [37m+[0m
      [37m+    ## Automatic issue closing[0m
      [37m+    # If a commit message matches this regular expression, all issues referenced from the matched text will be closed.[0m
      [37m+    # This happens when the commit is pushed or merged into the default branch of a project.[0m
      [37m+    # When not specified the default issue_closing_pattern as specified below will be used.[0m
      [37m+    # Tip: you can test your closing pattern at http://rubular.com[0m
      [37m+    issue_closing_pattern: [0m
      [37m+[0m
      [37m+    ## Default project features settings[0m
      [37m+    default_projects_features:[0m
      [37m+      issues: [0m
      [37m+      merge_requests: [0m
      [37m+      wiki: [0m
      [37m+      snippets: [0m
      [37m+      builds: [0m
      [37m+      container_registry: [0m
      [37m+[0m
      [37m+    ## Webhook settings[0m
      [37m+    # Number of seconds to wait for HTTP response after sending webhook HTTP POST request (default: 10)[0m
      [37m+    webhook_timeout: [0m
      [37m+[0m
      [37m+    ### GraphQL Settings[0m
      [37m+    # Tells the rails application how long it has to complete a GraphQL request.[0m
      [37m+    # We suggest this value to be higher than the database timeout value[0m
      [37m+    # and lower than the worker timeout set in unicorn/puma. (default: 30)[0m
      [37m+    graphql_timeout: [0m
      [37m+[0m
      [37m+    ## Repository downloads directory[0m
      [37m+    # When a user clicks e.g. 'Download zip' on a project, a temporary zip file is created in the following directory.[0m
      [37m+    # The default is 'tmp/repositories' relative to the root of the Rails app.[0m
      [37m+    repository_downloads_path: [0m
      [37m+[0m
      [37m+    ## Impersonation settings[0m
      [37m+    impersonation_enabled: [0m
      [37m+[0m
      [37m+    usage_ping_enabled: [0m
      [37m+[0m
      [37m+    # Seat link setting[0m
      [37m+    # When disabled the customer instances would not send seat link information via cron service everyday. (default: true)[0m
      [37m+    seat_link_enabled: true[0m
      [37m+[0m
      [37m+  ## Reply by email[0m
      [37m+  # Allow users to comment on issues and merge requests by replying to notification emails.[0m
      [37m+  # For documentation on how to set this up, see https://docs.gitlab.com/ee/administration/reply_by_email.html[0m
      [37m+  incoming_email:[0m
      [37m+    enabled: false[0m
      [37m+[0m
      [37m+    # The email address including the `%{key}` placeholder that will be replaced to reference the item being replied to.[0m
      [37m+    # The placeholder can be omitted but if present, it must appear in the "user" part of the address (before the `@`).[0m
      [37m+    address: [0m
      [37m+[0m
      [37m+    # Email account username[0m
      [37m+    # With third party providers, this is usually the full email address.[0m
      [37m+    # With self-hosted email servers, this is usually the user part of the email address.[0m
      [37m+    user: [0m
      [37m+    # Email account password[0m
      [37m+    password: [0m
      [37m+[0m
      [37m+    # IMAP server host[0m
      [37m+    host: [0m
      [37m+    # IMAP server port[0m
      [37m+    port: [0m
      [37m+    # Whether the IMAP server uses SSL[0m
      [37m+    ssl: [0m
      [37m+    # Whether the IMAP server uses StartTLS[0m
      [37m+    start_tls: [0m
      [37m+[0m
      [37m+    # The mailbox where incoming mail will end up. Usually "inbox".[0m
      [37m+    mailbox: "inbox"[0m
      [37m+    # The IDLE command timeout.[0m
      [37m+    idle_timeout: [0m
      [37m+    # file path of internal `mail_room` JSON logs[0m
      [37m+    log_path: /var/log/gitlab/mailroom/mail_room_json.log[0m
      [37m+[0m
      [37m+    # Whether to expunge (permanently remove) messages from the mailbox when they are deleted after delivery[0m
      [37m+    expunge_deleted: [0m
      [37m+[0m
      [37m+[0m
      [37m+  ## Service desk email[0m
      [37m+  # Allow users to use a separate service desk address[0m
      [37m+  # For documentation on how to set this up, see http://doc.gitlab.com/ce/administration/reply_by_email.html[0m
      [37m+  service_desk_email:[0m
      [37m+    enabled: false[0m
      [37m+[0m
      [37m+    # The email address including the `%{key}` placeholder that will be replaced to reference the item being replied to.[0m
      [37m+    # The placeholder can be omitted but if present, it must appear in the "user" part of the address (before the `@`).[0m
      [37m+    address: [0m
      [37m+[0m
      [37m+    # Email account username[0m
      [37m+    # With third party providers, this is usually the full email address.[0m
      [37m+    # With self-hosted email servers, this is usually the user part of the email address.[0m
      [37m+    user: [0m
      [37m+    # Email account password[0m
      [37m+    password: [0m
      [37m+[0m
      [37m+    # IMAP server host[0m
      [37m+    host: [0m
      [37m+    # IMAP server port[0m
      [37m+    port: [0m
      [37m+    # Whether the IMAP server uses SSL[0m
      [37m+    ssl: [0m
      [37m+    # Whether the IMAP server uses StartTLS[0m
      [37m+    start_tls: [0m
      [37m+[0m
      [37m+    # The mailbox where incoming mail will end up. Usually "inbox".[0m
      [37m+    mailbox: "inbox"[0m
      [37m+    # The IDLE command timeout.[0m
      [37m+    idle_timeout: [0m
      [37m+    # file path of internal `mail_room` JSON logs[0m
      [37m+    log_path: /var/log/gitlab/mailroom/mail_room_json.log[0m
      [37m+[0m
      [37m+  ## Build Artifacts[0m
      [37m+  artifacts:[0m
      [37m+    enabled: true[0m
      [37m+    # The location where Build Artifacts are stored (default: shared/artifacts).[0m
      [37m+    path: /var/opt/gitlab/gitlab-rails/shared/artifacts[0m
      [37m+    object_store:[0m
      [37m+      enabled: false[0m
      [37m+      direct_upload: false[0m
      [37m+      background_upload: true[0m
      [37m+      proxy_download: false[0m
      [37m+      remote_directory: "artifacts"[0m
      [37m+      connection: {}[0m
      [37m+[0m
      [37m+  ## External merge request diffs[0m
      [37m+  external_diffs:[0m
      [37m+    enabled: [0m
      [37m+    # The location where merge request diffs are stored (default: shared/external-diffs).[0m
      [37m+    storage_path: /var/opt/gitlab/gitlab-rails/shared/external-diffs[0m
      [37m+    object_store:[0m
      [37m+      enabled: false[0m
      [37m+      direct_upload: false[0m
      [37m+      background_upload: true[0m
      [37m+      proxy_download: false[0m
      [37m+      remote_directory: "external-diffs"[0m
      [37m+      connection: {}[0m
      [37m+[0m
      [37m+  ## Git LFS[0m
      [37m+  lfs:[0m
      [37m+    enabled: [0m
      [37m+    # The location where LFS objects are stored (default: shared/lfs-objects).[0m
      [37m+    storage_path: /var/opt/gitlab/gitlab-rails/shared/lfs-objects[0m
      [37m+    object_store:[0m
      [37m+      enabled: false[0m
      [37m+      direct_upload: false[0m
      [37m+      background_upload: true[0m
      [37m+      proxy_download: false[0m
      [37m+      remote_directory: "lfs-objects"[0m
      [37m+      connection: {}[0m
      [37m+[0m
      [37m+  ## Uploads[0m
      [37m+  uploads:[0m
      [37m+    # The location where uploads objects are stored (default: public/).[0m
      [37m+    storage_path: /opt/gitlab/embedded/service/gitlab-rails/public[0m
      [37m+    object_store:[0m
      [37m+      enabled: false[0m
      [37m+      direct_upload: false[0m
      [37m+      background_upload: true[0m
      [37m+      proxy_download: false[0m
      [37m+      remote_directory: "uploads"[0m
      [37m+      connection: {}[0m
      [37m+[0m
      [37m+  ## Packages (EE only)[0m
      [37m+  packages:[0m
      [37m+    enabled: [0m
      [37m+    # The location where build packages are stored (default: shared/packages).[0m
      [37m+    storage_path: /var/opt/gitlab/gitlab-rails/shared/packages[0m
      [37m+    object_store:[0m
      [37m+      enabled: false[0m
      [37m+      direct_upload: false[0m
      [37m+      background_upload: true[0m
      [37m+      proxy_download: false[0m
      [37m+      remote_directory: "packages"[0m
      [37m+      connection: {}[0m
      [37m+[0m
      [37m+  ## Dependency proxy (EE only)[0m
      [37m+  dependency_proxy:[0m
      [37m+    enabled: [0m
      [37m+    # The location where dependency_proxy blobs are stored (default: shared/dependency_proxy).[0m
      [37m+    storage_path: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy[0m
      [37m+    object_store:[0m
      [37m+      enabled: false[0m
      [37m+      direct_upload: false[0m
      [37m+      background_upload: true[0m
      [37m+      proxy_download: false[0m
      [37m+      remote_directory: "dependency_proxy"[0m
      [37m+      connection: {}[0m
      [37m+[0m
      [37m+  ## Terraform state[0m
      [37m+  terraform_state:[0m
      [37m+    enabled: [0m
      [37m+    # The location where terraform state files are stored (default: shared/terraform_state).[0m
      [37m+    storage_path: /var/opt/gitlab/gitlab-rails/shared/terraform_state[0m
      [37m+    object_store:[0m
      [37m+      enabled: false[0m
      [37m+      remote_directory: "terraform"[0m
      [37m+      connection: {}[0m
      [37m+[0m
      [37m+  ## Container Registry[0m
      [37m+  registry:[0m
      [37m+    enabled: true[0m
      [37m+    host: jenkins.local[0m
      [37m+    port: 8090[0m
      [37m+    api_url: http://localhost:5000 # internal address to the registry, will be used by GitLab to directly communicate with API[0m
      [37m+    path: /var/opt/gitlab/gitlab-rails/shared/registry[0m
      [37m+    key: /var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key[0m
      [37m+    issuer: omnibus-gitlab-issuer[0m
      [37m+    notification_secret: [0m
      [37m+[0m
      [37m+  ## Error Reporting and Logging with Sentry[0m
      [37m+  sentry:[0m
      [37m+    enabled: false[0m
      [37m+    dsn: [0m
      [37m+    clientside_dsn: [0m
      [37m+    environment:  # e.g. development, staging, production[0m
      [37m+[0m
      [37m+  mattermost:[0m
      [37m+    enabled: false[0m
      [37m+    host: [0m
      [37m+[0m
      [37m+  ## GitLab Pages[0m
      [37m+  pages:[0m
      [37m+    enabled: false[0m
      [37m+    access_control: false[0m
      [37m+    path: /var/opt/gitlab/gitlab-rails/shared/pages[0m
      [37m+    host: [0m
      [37m+    port: [0m
      [37m+    https: false[0m
      [37m+    external_http: null[0m
      [37m+    external_https: null[0m
      [37m+    artifacts_server: true[0m
      [37m+[0m
      [37m+  ## Gravatar[0m
      [37m+  ## For Libravatar see: https://docs.gitlab.com/ee/customization/libravatar.html[0m
      [37m+  gravatar:[0m
      [37m+    # gravatar urls: possible placeholders: %{hash} %{size} %{email}[0m
      [37m+    plain_url:      # default: http://www.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon[0m
      [37m+    ssl_url:       # default: https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon[0m
      [37m+[0m
      [37m+  ## Sidekiq[0m
      [37m+  sidekiq:[0m
      [37m+    log_format: json[0m
      [37m+[0m
      [37m+  ## Auxiliary jobs[0m
      [37m+  # Periodically executed jobs, to self-heal GitLab, do external synchronizations, etc.[0m
      [37m+  # Please read here for more information: https://github.com/ondrejbartas/sidekiq-cron#adding-cron-job[0m
      [37m+  cron_jobs:[0m
      [37m+    # Flag stuck CI builds as failed[0m
      [37m+    stuck_ci_jobs_worker:[0m
      [37m+      cron:[0m
      [37m+    # Remove expired build artifacts[0m
      [37m+    expire_build_artifacts_worker:[0m
      [37m+      cron:[0m
      [37m+    # Stop expired environments[0m
      [37m+    environments_auto_stop_cron_worker:[0m
      [37m+      cron:[0m
      [37m+    # Schedule pipelines in the near future[0m
      [37m+    pipeline_schedule_worker:[0m
      [37m+      cron:[0m
      [37m+    # Periodically run 'git fsck' on all repositories. If started more than[0m
      [37m+    # once per hour you will have concurrent 'git fsck' jobs.[0m
      [37m+    repository_check_worker:[0m
      [37m+      cron:[0m
      [37m+    # Send admin emails once a week[0m
      [37m+    admin_email_worker:[0m
      [37m+      cron:[0m
      [37m+    # Send emails about personal tokens about to expired[0m
      [37m+    personal_access_tokens_expiring_worker:[0m
      [37m+      cron:[0m
      [37m+    # Send emails about personal tokens that have expired[0m
      [37m+    personal_access_tokens_expired_notification_worker:[0m
      [37m+      cron:[0m
      [37m+    # Remove outdated repository archives[0m
      [37m+    repository_archive_cache_worker:[0m
      [37m+      cron:[0m
      [37m+[0m
      [37m+    # Archive live traces which have not been archived yet[0m
      [37m+    ci_archive_traces_cron_worker:[0m
      [37m+      cron:[0m
      [37m+[0m
      [37m+    # Verify custom GitLab Pages domains[0m
      [37m+    pages_domain_verification_cron_worker:[0m
      [37m+      cron:[0m
      [37m+[0m
      [37m+    # Obtain and renew SSL certificates for pages domain through Let's Encrypt[0m
      [37m+    pages_domain_ssl_renewal_cron_worker:[0m
      [37m+      cron:[0m
      [37m+[0m
      [37m+    # Removes unverified pages domains[0m
      [37m+    pages_domain_removal_cron_worker:[0m
      [37m+      cron:[0m
      [37m+[0m
      [37m+    # Periodically migrate diffs from the database to external storage[0m
      [37m+    schedule_migrate_external_diffs_worker:[0m
      [37m+      cron:[0m
      [37m+[0m
      [37m+    # Update CI Platform Metrics daily[0m
      [37m+    ci_platform_metrics_update_cron_worker:[0m
      [37m+      cron: [0m
      [37m+[0m
      [37m+    ##[0m
      [37m+    # GitLab EE only jobs:[0m
      [37m+[0m
      [37m+    # Snapshot active users statistics[0m
      [37m+[0m
      [37m+    # In addition to refreshing users when they log in,[0m
      [37m+    # periodically refresh LDAP users membership.[0m
      [37m+    # NOTE: This will only take effect if LDAP is enabled[0m
      [37m+[0m
      [37m+    # GitLab LDAP group sync worker[0m
      [37m+    # NOTE: This will only take effect if LDAP is enabled[0m
      [37m+[0m
      [37m+    # GitLab Geo prune event log worker[0m
      [37m+    # NOTE: This will only take effect if Geo is enabled (primary node only)[0m
      [37m+[0m
      [37m+    # GitLab Geo repository sync worker[0m
      [37m+    # NOTE: This will only take effect if Geo is enabled[0m
      [37m+[0m
      [37m+    # GitLab Geo registry backfill worker[0m
      [37m+    # NOTE: This will only take effect if Geo is enabled (secondary nodes only)[0m
      [37m+[0m
      [37m+    # GitLab Geo file download dispatch worker[0m
      [37m+    # NOTE: This will only take effect if Geo is enabled[0m
      [37m+[0m
      [37m+    # GitLab Geo repository verification primary batch worker[0m
      [37m+    # NOTE: This will only take effect if Geo is enabled[0m
      [37m+[0m
      [37m+    # GitLab Geo repository verification secondary scheduler worker[0m
      [37m+    # NOTE: This will only take effect if Geo is enabled[0m
      [37m+[0m
      [37m+    # GitLab Geo migrated local files clean up worker[0m
      [37m+    # NOTE: This will only take effect if Geo is enabled (secondary nodes only)[0m
      [37m+[0m
      [37m+    # Export pseudonymized data in CSV format for analysis[0m
      [37m+[0m
      [37m+[0m
      [37m+    # Worker for triggering counter jobs for instance statistics[0m
      [37m+[0m
      [37m+  ## Geo[0m
      [37m+  # NOTE: These settings will only take effect if Geo is enabled[0m
      [37m+  geo:[0m
      [37m+    # This is an optional identifier which Geo nodes can use to identify themselves.[0m
      [37m+    # For example, if external_url is the same for two secondaries, you must specify[0m
      [37m+    # a unique Geo node name for those secondaries.[0m
      [37m+    #[0m
      [37m+    # If it is blank, it defaults to external_url.[0m
      [37m+    node_name: [0m
      [37m+[0m
      [37m+    registry_replication:[0m
      [37m+      enabled: [0m
      [37m+      primary_api_url:  # internal address to the primary registry, will be used by GitLab to directly communicate with primary registry API[0m
      [37m+[0m
      [37m+  ## Feature Flag https://docs.gitlab.com/ee/user/project/operations/feature_flags.html[0m
      [37m+  feature_flags:[0m
      [37m+    unleash:[0m
      [37m+      enabled: false[0m
      [37m+      url: [0m
      [37m+      app_name:  # Environment name of your GitLab instance[0m
      [37m+      instance_id: [0m
      [37m+[0m
      [37m+  #[0m
      [37m+  # 2. GitLab CI settings[0m
      [37m+  # ==========================[0m
      [37m+[0m
      [37m+  gitlab_ci:[0m
      [37m+    # Default project notifications settings:[0m
      [37m+    #[0m
      [37m+    # Send emails only on broken builds (default: true)[0m
      [37m+    all_broken_builds: [0m
      [37m+    #[0m
      [37m+    # Add pusher to recipients list (default: false)[0m
      [37m+    add_pusher: [0m
      [37m+[0m
      [37m+    # The location where build traces are stored (default: builds/). Relative paths are relative to Rails.root[0m
      [37m+    builds_path: /var/opt/gitlab/gitlab-ci/builds[0m
      [37m+[0m
      [37m+  #[0m
      [37m+  # 3. Auth settings[0m
      [37m+  # ==========================[0m
      [37m+[0m
      [37m+  ## LDAP settings[0m
      [37m+  # You can inspect a sample of the LDAP users with login access by running:[0m
      [37m+  #   bundle exec rake gitlab:ldap:check RAILS_ENV=production[0m
      [37m+  ldap:[0m
      [37m+    enabled: false[0m
      [37m+    sync_time: [0m
      [37m+    prevent_ldap_sign_in: false[0m
      [37m+    host: [0m
      [37m+    port: [0m
      [37m+    uid: [0m
      [37m+    method:  # "tls" or "ssl" or "plain"[0m
      [37m+    bind_dn: [0m
      [37m+    password: [0m
      [37m+    active_directory: [0m
      [37m+    allow_username_or_email_login: [0m
      [37m+    lowercase_usernames: [0m
      [37m+    base: [0m
      [37m+    user_filter: [0m
      [37m+[0m
      [37m+    ## EE only[0m
      [37m+    group_base: [0m
      [37m+    admin_group: [0m
      [37m+    sync_ssh_keys: [0m
      [37m+    sync_time: [0m
      [37m+[0m
      [37m+  ## Smartcard authentication settings[0m
      [37m+  smartcard:[0m
      [37m+    # Allow smartcard authentication[0m
      [37m+    enabled: false[0m
      [37m+[0m
      [37m+    # Path to a file containing a CA certificate[0m
      [37m+    ca_file: "/etc/gitlab/ssl/CA.pem"[0m
      [37m+[0m
      [37m+    # Host and port where the client side certificate is requested by the[0m
      [37m+    # webserver (NGINX/Apache)[0m
      [37m+    client_certificate_required_host: [0m
      [37m+    client_certificate_required_port: 3444[0m
      [37m+[0m
      [37m+    # Browser session with smartcard sign-in is required for Git access[0m
      [37m+    required_for_git_access: false[0m
      [37m+[0m
      [37m+    # SAN extensions to match users with certificates[0m
      [37m+    san_extensions: false[0m
      [37m+[0m
      [37m+  ## Kerberos settings[0m
      [37m+  kerberos:[0m
      [37m+    # Allow the HTTP Negotiate authentication method for Git clients[0m
      [37m+    enabled: [0m
      [37m+[0m
      [37m+    # Kerberos 5 keytab file. The keytab file must be readable by the GitLab user,[0m
      [37m+    # and should be different from other keytabs in the system.[0m
      [37m+    # (default: use default keytab from Krb5 config)[0m
      [37m+    keytab: [0m
      [37m+[0m
      [37m+    # The Kerberos service name to be used by GitLab.[0m
      [37m+    # (default: accept any service name in keytab file)[0m
      [37m+    service_principal_name: [0m
      [37m+[0m
      [37m+    # Dedicated port: Git before 2.4 does not fall back to Basic authentication if Negotiate fails.[0m
      [37m+    # To support both Basic and Negotiate methods with older versions of Git, configure[0m
      [37m+    # nginx to proxy GitLab on an extra port (e.g. 8443) and uncomment the following lines[0m
      [37m+    # to dedicate this port to Kerberos authentication. (default: false)[0m
      [37m+    use_dedicated_port: [0m
      [37m+    port: [0m
      [37m+    https: [0m
      [37m+[0m
      [37m+[0m
      [37m+  ## OmniAuth settings[0m
      [37m+  omniauth:[0m
      [37m+    # Allow login via Twitter, Google, etc. using OmniAuth providers[0m
      [37m+    enabled: [0m
      [37m+[0m
      [37m+    # Uncomment this to automatically sign in with a specific omniauth provider's without[0m
      [37m+    # showing GitLab's sign-in page (default: show the GitLab sign-in page)[0m
      [37m+    auto_sign_in_with_provider: [0m
      [37m+[0m
      [37m+    # Sync user's email address from the specified Omniauth provider every time the user logs[0m
      [37m+    # in (default: nil). And consequently make this field read-only.[0m
      [37m+[0m
      [37m+    # Sync user's profile from the specified Omniauth providers every time the user logs in (default: empty).[0m
      [37m+    # Define the allowed providers using an array, e.g. ["cas3", "saml", "twitter"],[0m
      [37m+    # or as true/false to allow all providers or none.[0m
      [37m+    # sync_profile_from_provider: [][0m
      [37m+[0m
      [37m+    # Select which info to sync from the providers above. (default: email).[0m
      [37m+    # Define the synced profile info using an array. Available options are "name", "email" and "location"[0m
      [37m+    # e.g. ["name", "email", "location"] or as true to sync all available.[0m
      [37m+    # This consequently will make the selected attributes read-only.[0m
      [37m+    # sync_profile_attributes: true[0m
      [37m+[0m
      [37m+    # CAUTION![0m
      [37m+    # This allows users to login without having a user account first. Define the allowed[0m
      [37m+    # providers using an array, e.g. ["saml", "twitter"][0m
      [37m+    # User accounts will be created automatically when authentication was successful.[0m
      [37m+    allow_single_sign_on: ["saml"][0m
      [37m+[0m
      [37m+    # Locks down those users until they have been cleared by the admin (default: true).[0m
      [37m+    block_auto_created_users: [0m
      [37m+    # Look up new users in LDAP servers. If a match is found (same uid), automatically[0m
      [37m+    # link the omniauth identity with the LDAP account. (default: false)[0m
      [37m+    auto_link_ldap_user: [0m
      [37m+[0m
      [37m+    # Allow users with existing accounts to login and auto link their account via SAML[0m
      [37m+    # login, without having to do a manual login first and manually add SAML[0m
      [37m+    # (default: false)[0m
      [37m+    auto_link_saml_user: null[0m
      [37m+[0m
      [37m+    # Allow users with existing accounts to sign in and auto link their account via OmniAuth[0m
      [37m+    # login, without having to do a manual login first and manually add OmniAuth. Links on email.[0m
      [37m+    # Define the allowed providers using an array, e.g. ["saml", "twitter"], or as true/false to[0m
      [37m+    # allow all providers or none.[0m
      [37m+    # (default: false)[0m
      [37m+    auto_link_user: null[0m
      [37m+[0m
      [37m+    # Set different Omniauth providers as external so that all users creating accounts[0m
      [37m+    # via these providers will not be able to have access to internal projects. You[0m
      [37m+    # will need to use the full name of the provider, like `google_oauth2` for Google.[0m
      [37m+    # Refer to the examples below for the full names of the supported providers.[0m
      [37m+    # (default: [])[0m
      [37m+    external_providers: null[0m
      [37m+[0m
      [37m+    # CAUTION![0m
      [37m+    # This allows users to login with the specified providers without two factor. Define the allowed providers[0m
      [37m+    # using an array, e.g. ["twitter", 'google_oauth2'], or as true/false to allow all providers or none.[0m
      [37m+    # This option should only be configured for providers which already have two factor.[0m
      [37m+    # (default: false)[0m
      [37m+    allow_bypass_two_factor:  null[0m
      [37m+[0m
      [37m+    ## Auth providers[0m
      [37m+    # Uncomment the following lines and fill in the data of the auth provider you want to use[0m
      [37m+    # If your favorite auth provider is not listed you can use others:[0m
      [37m+    # see https://github.com/gitlabhq/gitlab-public-wiki/wiki/Custom-omniauth-provider-configurations[0m
      [37m+    # The 'app_id' and 'app_secret' parameters are always passed as the first two[0m
      [37m+    # arguments, followed by optional 'args' which can be either a hash or an array.[0m
      [37m+    # Documentation for this is available at https://docs.gitlab.com/ee/integration/omniauth.html[0m
      [37m+    providers:[0m
      [37m+      # - { name: 'google_oauth2', app_id: 'YOUR APP ID',[0m
      [37m+      #     app_secret: 'YOUR APP SECRET',[0m
      [37m+      #     args: { access_type: 'offline', approval_prompt: '' } }[0m
      [37m+      # - { name: 'twitter', app_id: 'YOUR APP ID',[0m
      [37m+      #     app_secret: 'YOUR APP SECRET'}[0m
      [37m+      # - { name: 'github', app_id: 'YOUR APP ID',[0m
      [37m+      #     app_secret: 'YOUR APP SECRET',[0m
      [37m+      #     args: { scope: 'user:email' } }[0m
      [37m+[0m
      [37m+  # Shared file storage settings[0m
      [37m+  shared:[0m
      [37m+    path: /var/opt/gitlab/gitlab-rails/shared[0m
      [37m+[0m
      [37m+  # Gitaly settings[0m
      [37m+  # This setting controls whether GitLab uses Gitaly[0m
      [37m+  # Eventually Gitaly use will become mandatory and[0m
      [37m+  # this option will disappear.[0m
      [37m+  gitaly:[0m
      [37m+    client_path: /opt/gitlab/embedded/bin[0m
      [37m+    token: ""[0m
      [37m+[0m
      [37m+[0m
      [37m+  #[0m
      [37m+  # 4. Advanced settings[0m
      [37m+  # ==========================[0m
      [37m+[0m
      [37m+  ## Repositories settings[0m
      [37m+  repositories:[0m
      [37m+    # Paths where repositories can be stored. Give the canonicalized absolute pathname.[0m
      [37m+    # NOTE: REPOS PATHS MUST NOT CONTAIN ANY SYMLINK!!![0m
      [37m+    storages: {"default":{"path":"/var/opt/gitlab/git-data/repositories","gitaly_address":"unix:/var/opt/gitlab/gitaly/gitaly.socket"}}[0m
      [37m+[0m
      [37m+  ## Backup settings[0m
      [37m+  backup:[0m
      [37m+    path: "/var/opt/gitlab/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)[0m
      [37m+    archive_permissions:  # Permissions for the resulting backup.tar file (default: 0600)[0m
      [37m+    keep_time:    # default: 0 (forever) (in seconds)[0m
      [37m+    pg_schema:    # default: nil, it means that all schemas will be backed up[0m
      [37m+    upload:[0m
      [37m+      # Fog storage connection settings, see http://fog.io/storage/ .[0m
      [37m+      connection: [0m
      [37m+      # The remote 'directory' to store your backups. For S3, this would be the bucket name.[0m
      [37m+      remote_directory: [0m
      [37m+      multipart_chunk_size: [0m
      [37m+      encryption: [0m
      [37m+      encryption_key: [0m
      [37m+      storage_class: [0m
      [37m+[0m
      [37m+  ## Pseudonymizer settings[0m
      [37m+  pseudonymizer:[0m
      [37m+    manifest: [0m
      [37m+    upload:[0m
      [37m+      remote_directory: [0m
      [37m+      connection: {}[0m
      [37m+[0m
      [37m+  ## GitLab Shell settings[0m
      [37m+  gitlab_shell:[0m
      [37m+    path: /opt/gitlab/embedded/service/gitlab-shell/[0m
      [37m+    hooks_path: /opt/gitlab/embedded/service/gitlab-shell/hooks/[0m
      [37m+    authorized_keys_file: /var/opt/gitlab/.ssh/authorized_keys[0m
      [37m+[0m
      [37m+    # Git over HTTP[0m
      [37m+    upload_pack: [0m
      [37m+    receive_pack: [0m
      [37m+[0m
      [37m+    # If you use non-standard ssh port you need to specify it[0m
      [37m+    ssh_port: 23[0m
      [37m+[0m
      [37m+    # Git import/fetch timeout[0m
      [37m+    git_timeout: 10800[0m
      [37m+[0m
      [37m+  ## Git settings[0m
      [37m+  # CAUTION![0m
      [37m+  # Use the default values unless you really know what you are doing[0m
      [37m+  git:[0m
      [37m+    bin_path: /opt/gitlab/embedded/bin/git[0m
      [37m+[0m
      [37m+  monitoring:[0m
      [37m+    # Time between sampling of unicorn socket metrics, in seconds[0m
      [37m+    unicorn_sampler_interval: 10[0m
      [37m+    # IP whitelist controlling access to monitoring endpoints[0m
      [37m+    ip_whitelist:[0m
      [37m+      - "127.0.0.0/8"[0m
      [37m+      - "::1/128"[0m
      [37m+    # Sidekiq exporter is webserver built in to Sidekiq to expose Prometheus metrics[0m
      [37m+    sidekiq_exporter:[0m
      [37m+      enabled: true[0m
      [37m+      log_enabled: false[0m
      [37m+      address: 127.0.0.1[0m
      [37m+      port: 8082[0m
      [37m+[0m
      [37m+    # Web exporter is webserver built in to Unicorn/Puma to expose Prometheus metrics[0m
      [37m+    web_exporter:[0m
      [37m+      enabled: false[0m
      [37m+      address: 127.0.0.1[0m
      [37m+      port: 8083[0m
      [37m+[0m
      [37m+  shutdown:[0m
      [37m+    blackout_seconds: 10[0m
      [37m+[0m
      [37m+  ## Prometheus settings[0m
      [37m+  # Do not modify these settings here. They should be modified in /etc/gitlab/gitlab.rb[0m
      [37m+  # if you installed GitLab via Omnibus.[0m
      [37m+  # If you installed from source, you need to install and configure Prometheus[0m
      [37m+  # yourself, and then update the values here.[0m
      [37m+  # https://docs.gitlab.com/ee/administration/monitoring/prometheus/[0m
      [37m+  prometheus:[0m
      [37m+    # Do not use `enable` and `listen_address` in any new code, as they are deprecated. Use `server_address` instead.[0m
      [37m+    # https://gitlab.com/gitlab-org/gitlab/-/issues/227111[0m
      [37m+    enable: true[0m
      [37m+    listen_address: "localhost:9090"[0m
      [37m+    # IP address(including listen port) of Prometheus server[0m
      [37m+    server_address: "localhost:9090"[0m
      [37m+[0m
      [37m+  ## Consul settings[0m
      [37m+  consul:[0m
      [37m+    api_url: ""[0m
      [37m+[0m
      [37m+  #[0m
      [37m+  # 5. Extra customization[0m
      [37m+  # ==========================[0m
      [37m+[0m
      [37m+  extra:[0m
      [37m+[0m
      [37m+[0m
      [37m+  rack_attack:[0m
      [37m+    git_basic_auth: [0m
      [37m+[0m
      [37m+[0m
      [37m+development:[0m
      [37m+  <<: *base[0m
      [37m+[0m
      [37m+test:[0m
      [37m+  <<: *base[0m
      [37m+  gravatar:[0m
      [37m+    enabled: true[0m
      [37m+  gitlab:[0m
      [37m+    host: localhost[0m
      [37m+    port: 80[0m
      [37m+[0m
      [37m+    # When you run tests we clone and setup gitlab-shell[0m
      [37m+    # In order to setup it correctly you need to specify[0m
      [37m+    # your system username you use to run GitLab[0m
      [37m+    # user: YOUR_USERNAME[0m
      [37m+  repositories:[0m
      [37m+    storages:[0m
      [37m+      default: { "path": "tmp/tests/repositories/" }[0m
      [37m+  gitlab_shell:[0m
      [37m+    path: tmp/tests/gitlab-shell/[0m
      [37m+    hooks_path: tmp/tests/gitlab-shell/hooks/[0m
      [37m+  issues_tracker:[0m
      [37m+    redmine:[0m
      [37m+      title: "Redmine"[0m
      [37m+      project_url: "http://redmine/projects/:issues_tracker_id"[0m
      [37m+      issues_url: "http://redmine/:project_id/:issues_tracker_id/:id"[0m
      [37m+      new_issue_url: "http://redmine/projects/:issues_tracker_id/issues/new"[0m
      [37m+    jira:[0m
      [37m+      title: "JIRA"[0m
      [37m+      url: https://samplecompany.example.net[0m
      [37m+      project_key: PROJECT[0m
      [37m+  ldap:[0m
      [37m+    enabled: false[0m
      [37m+    servers:[0m
      [37m+      main:[0m
      [37m+        label: ldap[0m
      [37m+        host: 127.0.0.1[0m
      [37m+        port: 3890[0m
      [37m+        uid: 'uid'[0m
      [37m+        method: 'plain' # "tls" or "ssl" or "plain"[0m
      [37m+        base: 'dc=example,dc=com'[0m
      [37m+        user_filter: ''[0m
      [37m+        group_base: 'ou=groups,dc=example,dc=com'[0m
      [37m+        admin_group: ''[0m
      [37m+        sync_ssh_keys: false[0m
      [37m+[0m
      [37m+staging:[0m
      [37m+  <<: *base[0m
      [32m- change mode from '' to '0640'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'git'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml[0m
[0m  
[0m  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret from none to be9d83[0m
      [32m- suppressed sensitive resource[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret[0m
[0m  
[0m  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret from none to 4fc686[0m
      [32m- suppressed sensitive resource[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret[0m
[0m  
[0m  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret from none to 142716[0m
      [32m- suppressed sensitive resource[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create
      [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret[0m
[0m  
[0m  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create
    * directory[/opt/gitlab/etc/gitlab-rails/env] action create
      [32m- create new directory /opt/gitlab/etc/gitlab-rails/env[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/HOME[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/HOME from none to 205bb9[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/RAILS_ENV[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/RAILS_ENV from none to ab8e18[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/LD_PRELOAD] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/LD_PRELOAD[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/LD_PRELOAD from none to f79114[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS from none to dd80d7[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE from none to 28d586[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/PATH[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/PATH from none to d5dc07[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/ICU_DATA[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/ICU_DATA from none to a04260[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/PYTHONPATH[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/PYTHONPATH from none to 83b536[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME from none to 75081b[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create
      [32m- create new file /opt/gitlab/etc/gitlab-rails/env/TZ[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-rails/env/TZ from none to 983a95[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create
    [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/tmp to /var/opt/gitlab/gitlab-rails/tmp[0m
[0m  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create
    [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/public/uploads to /var/opt/gitlab/gitlab-rails/uploads[0m
[0m  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create
    [32m- create symlink at /opt/gitlab/embedded/service/gitlab-rails/log to /var/log/gitlab/gitlab-rails[0m
[0m  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete (skipped due to only_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create
    [32m- change owner from 'root' to 'git'[0m
[0m  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create
    [32m- create new file /var/opt/gitlab/gitlab-rails/VERSION[0m
    [32m- update content in file /var/opt/gitlab/gitlab-rails/VERSION from none to dfc71d[0m
    [37m--- /var/opt/gitlab/gitlab-rails/VERSION	2022-05-01 19:51:31.842358083 +0000[0m
    [37m+++ /var/opt/gitlab/gitlab-rails/.chef-VERSION20220501-32-vu4wd8	2022-05-01 19:51:31.841358073 +0000[0m
    [37m@@ -1 +1,2 @@[0m
    [37m+13.4.1[0m
[0m  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create
    [32m- create new file /var/opt/gitlab/gitlab-rails/REVISION[0m
    [32m- update content in file /var/opt/gitlab/gitlab-rails/REVISION from none to c4c334[0m
    [37m--- /var/opt/gitlab/gitlab-rails/REVISION	2022-05-01 19:51:31.849358156 +0000[0m
    [37m+++ /var/opt/gitlab/gitlab-rails/.chef-REVISION20220501-32-cz78k1	2022-05-01 19:51:31.849358156 +0000[0m
    [37m@@ -1 +1,2 @@[0m
    [37m+c90be62bdef[0m
[0m  * version_file[Create version file for Rails] action create
    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/RUBY_VERSION[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/RUBY_VERSION from none to d89bae[0m
      [37m--- /var/opt/gitlab/gitlab-rails/RUBY_VERSION	2022-05-01 19:51:31.876358438 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-rails/.chef-RUBY_VERSION20220501-32-1ytsdd2	2022-05-01 19:51:31.876358438 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+ruby 2.6.6p146 (2020-03-31 revision 67876) [x86_64-linux][0m
[0m  
[0m  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)
  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)
Recipe: gitlab::selinux[0m
  * bash[Set proper security context on ssh files for selinux] action run (skipped due to only_if)
Recipe: gitlab::add_trusted_certs[0m
  * directory[/etc/gitlab/trusted-certs] action create
    [32m- create new directory /etc/gitlab/trusted-certs[0m
    [32m- change mode from '' to '0755'[0m
[0m  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)
  * file[/opt/gitlab/embedded/ssl/certs/README] action create
    [32m- create new file /opt/gitlab/embedded/ssl/certs/README[0m
    [32m- update content in file /opt/gitlab/embedded/ssl/certs/README from none to 623059[0m
    [37m--- /opt/gitlab/embedded/ssl/certs/README	2022-05-01 19:51:31.918358876 +0000[0m
    [37m+++ /opt/gitlab/embedded/ssl/certs/.chef-README20220501-32-1uv4zf7	2022-05-01 19:51:31.918358876 +0000[0m
    [37m@@ -1,3 +1,6 @@[0m
    [37m+This directory is managed by omnibus-gitlab.[0m
    [37m+ Any file placed in this directory will be ignored[0m
    [37m+. Place certificates in /etc/gitlab/trusted-certs.[0m
    [32m- change mode from '' to '0644'[0m
[0m  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run

  * Moving existing certificates found in /opt/gitlab/embedded/ssl/certs

  * Symlinking existing certificates found in /etc/gitlab/trusted-certs

    [32m- execute the ruby block Move existing certs and link to /opt/gitlab/embedded/ssl/certs[0m
[0mRecipe: gitlab::default[0m
  * service[create a temporary unicorn service] action nothing (skipped due to action :nothing)
  * service[create a temporary puma service] action nothing (skipped due to action :nothing)
  * service[create a temporary actioncable service] action nothing (skipped due to action :nothing)
  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)
  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)
Recipe: package::sysctl[0m
  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)
Recipe: postgresql::bin[0m
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run
    [32m- execute the ruby block Link postgresql bin files to the correct version[0m
[0mRecipe: redis::enable[0m
  * redis_service[redis] action create
    * account[user and group for redis] action create (up to date)
    * group[Socket group] action create (up to date)
    * directory[/var/opt/gitlab/redis] action create
      [32m- change mode from '0755' to '0750'[0m
      [32m- change group from 'gitlab-redis' to 'git'[0m
[0m    * directory[/var/log/gitlab/redis] action create
      [32m- create new directory /var/log/gitlab/redis[0m
      [32m- change mode from '' to '0700'[0m
      [32m- change owner from '' to 'gitlab-redis'[0m
[0m    * template[/var/opt/gitlab/redis/redis.conf] action create
      [32m- create new file /var/opt/gitlab/redis/redis.conf[0m
      [32m- update content in file /var/opt/gitlab/redis/redis.conf from none to bce53e[0m
      [37m--- /var/opt/gitlab/redis/redis.conf	2022-05-01 19:51:31.979359512 +0000[0m
      [37m+++ /var/opt/gitlab/redis/.chef-redis20220501-32-1bjywsl.conf	2022-05-01 19:51:31.979359512 +0000[0m
      [37m@@ -1,1110 +1,2220 @@[0m
      [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
      [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
      [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
      [37m+[0m
      [37m+# Redis configuration file example.[0m
      [37m+#[0m
      [37m+# Note that in order to read the configuration file, Redis must be[0m
      [37m+# started with the file path as first argument:[0m
      [37m+#[0m
      [37m+# ./redis-server /path/to/redis.conf[0m
      [37m+[0m
      [37m+# Note on units: when memory size is needed, it is possible to specify[0m
      [37m+# it in the usual form of 1k 5GB 4M and so forth:[0m
      [37m+#[0m
      [37m+# 1k => 1000 bytes[0m
      [37m+# 1kb => 1024 bytes[0m
      [37m+# 1m => 1000000 bytes[0m
      [37m+# 1mb => 1024*1024 bytes[0m
      [37m+# 1g => 1000000000 bytes[0m
      [37m+# 1gb => 1024*1024*1024 bytes[0m
      [37m+#[0m
      [37m+# units are case insensitive so 1GB 1Gb 1gB are all the same.[0m
      [37m+[0m
      [37m+################################## INCLUDES ###################################[0m
      [37m+[0m
      [37m+# Include one or more other config files here.  This is useful if you[0m
      [37m+# have a standard template that goes to all Redis servers but also need[0m
      [37m+# to customize a few per-server settings.  Include files can include[0m
      [37m+# other files, so use this wisely.[0m
      [37m+#[0m
      [37m+# Notice option "include" won't be rewritten by command "CONFIG REWRITE"[0m
      [37m+# from admin or Redis Sentinel. Since Redis always uses the last processed[0m
      [37m+# line as value of a configuration directive, you'd better put includes[0m
      [37m+# at the beginning of this file to avoid overwriting config change at runtime.[0m
      [37m+#[0m
      [37m+# If instead you are interested in using includes to override configuration[0m
      [37m+# options, it is better to use include as the last line.[0m
      [37m+#[0m
      [37m+# include /path/to/local.conf[0m
      [37m+# include /path/to/other.conf[0m
      [37m+[0m
      [37m+################################## NETWORK #####################################[0m
      [37m+[0m
      [37m+# By default, if no "bind" configuration directive is specified, Redis listens[0m
      [37m+# for connections from all the network interfaces available on the server.[0m
      [37m+# It is possible to listen to just one or multiple selected interfaces using[0m
      [37m+# the "bind" configuration directive, followed by one or more IP addresses.[0m
      [37m+#[0m
      [37m+# Examples:[0m
      [37m+#[0m
      [37m+# bind 192.168.1.100 10.0.0.1[0m
      [37m+# bind 127.0.0.1 ::1[0m
      [37m+#[0m
      [37m+# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the[0m
      [37m+# internet, binding to all the interfaces is dangerous and will expose the[0m
      [37m+# instance to everybody on the internet. So by default we uncomment the[0m
      [37m+# following bind directive, that will force Redis to listen only into[0m
      [37m+# the IPv4 lookback interface address (this means Redis will be able to[0m
      [37m+# accept connections only from clients running into the same computer it[0m
      [37m+# is running).[0m
      [37m+#[0m
      [37m+# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES[0m
      [37m+# JUST COMMENT THE FOLLOWING LINE.[0m
      [37m+# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
      [37m+bind 127.0.0.1[0m
      [37m+[0m
      [37m+# Protected mode is a layer of security protection, in order to avoid that[0m
      [37m+# Redis instances left open on the internet are accessed and exploited.[0m
      [37m+#[0m
      [37m+# When protected mode is on and if:[0m
      [37m+#[0m
      [37m+# 1) The server is not binding explicitly to a set of addresses using the[0m
      [37m+#    "bind" directive.[0m
      [37m+# 2) No password is configured.[0m
      [37m+#[0m
      [37m+# The server only accepts connections from clients connecting from the[0m
      [37m+# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain[0m
      [37m+# sockets.[0m
      [37m+#[0m
      [37m+# By default protected mode is enabled. You should disable it only if[0m
      [37m+# you are sure you want clients from other hosts to connect to Redis[0m
      [37m+# even if no authentication is configured, nor a specific set of interfaces[0m
      [37m+# are explicitly listed using the "bind" directive.[0m
      [37m+# protected-mode yes[0m
      [37m+[0m
      [37m+# Accept connections on the specified port, default is 6379 (IANA #815344).[0m
      [37m+# If port 0 is specified Redis will not listen on a TCP socket.[0m
      [37m+port 0[0m
      [37m+[0m
      [37m+# TCP listen() backlog.[0m
      [37m+#[0m
      [37m+# In high requests-per-second environments you need an high backlog in order[0m
      [37m+# to avoid slow clients connections issues. Note that the Linux kernel[0m
      [37m+# will silently truncate it to the value of /proc/sys/net/core/somaxconn so[0m
      [37m+# make sure to raise both the value of somaxconn and tcp_max_syn_backlog[0m
      [37m+# in order to get the desired effect.[0m
      [37m+tcp-backlog 511[0m
      [37m+[0m
      [37m+# Unix socket.[0m
      [37m+#[0m
      [37m+# Specify the path for the Unix socket that will be used to listen for[0m
      [37m+# incoming connections. There is no default, so Redis will not listen[0m
      [37m+# on a unix socket when not specified.[0m
      [37m+#[0m
      [37m+unixsocket /var/opt/gitlab/redis/redis.socket[0m
      [37m+unixsocketperm 777[0m
      [37m+[0m
      [37m+# Close the connection after a client is idle for N seconds (0 to disable)[0m
      [37m+timeout 60[0m
      [37m+[0m
      [37m+# TCP keepalive.[0m
      [37m+#[0m
      [37m+# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence[0m
      [37m+# of communication. This is useful for two reasons:[0m
      [37m+#[0m
      [37m+# 1) Detect dead peers.[0m
      [37m+# 2) Take the connection alive from the point of view of network[0m
      [37m+#    equipment in the middle.[0m
      [37m+#[0m
      [37m+# On Linux, the specified value (in seconds) is the period used to send ACKs.[0m
      [37m+# Note that to close the connection the double of the time is needed.[0m
      [37m+# On other kernels the period depends on the kernel configuration.[0m
      [37m+#[0m
      [37m+# A reasonable value for this option is 300 seconds, which is the new[0m
      [37m+# Redis default starting with Redis 3.2.1.[0m
      [37m+tcp-keepalive 300[0m
      [37m+[0m
      [37m+################################# GENERAL #####################################[0m
      [37m+[0m
      [37m+# By default Redis does not run as a daemon. Use 'yes' if you need it.[0m
      [37m+# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.[0m
      [37m+daemonize no[0m
      [37m+[0m
      [37m+# If you run Redis from upstart or systemd, Redis can interact with your[0m
      [37m+# supervision tree. Options:[0m
      [37m+#   supervised no      - no supervision interaction[0m
      [37m+#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode[0m
      [37m+#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET[0m
      [37m+#   supervised auto    - detect upstart or systemd method based on[0m
      [37m+#                        UPSTART_JOB or NOTIFY_SOCKET environment variables[0m
      [37m+# Note: these supervision methods only signal "process is ready."[0m
      [37m+#       They do not enable continuous liveness pings back to your supervisor.[0m
      [37m+# supervised no[0m
      [37m+[0m
      [37m+# If a pid file is specified, Redis writes it where specified at startup[0m
      [37m+# and removes it at exit.[0m
      [37m+#[0m
      [37m+# When the server runs non daemonized, no pid file is created if none is[0m
      [37m+# specified in the configuration. When the server is daemonized, the pid file[0m
      [37m+# is used even if not specified, defaulting to "/var/run/redis.pid".[0m
      [37m+#[0m
      [37m+# Creating a pid file is best effort: if Redis is not able to create it[0m
      [37m+# nothing bad happens, the server will start and run normally.[0m
      [37m+pidfile "/var/run/redis_0.pid"[0m
      [37m+[0m
      [37m+# Specify the server verbosity level.[0m
      [37m+# This can be one of:[0m
      [37m+# debug (a lot of information, useful for development/testing)[0m
      [37m+# verbose (many rarely useful info, but not a mess like the debug level)[0m
      [37m+# notice (moderately verbose, what you want in production probably)[0m
      [37m+# warning (only very important / critical messages are logged)[0m
      [37m+loglevel notice[0m
      [37m+[0m
      [37m+# Specify the log file name. Also the empty string can be used to force[0m
      [37m+# Redis to log on the standard output. Note that if you use standard[0m
      [37m+# output for logging but daemonize, logs will be sent to /dev/null[0m
      [37m+logfile ""[0m
      [37m+[0m
      [37m+# To enable logging to the system logger, just set 'syslog-enabled' to yes,[0m
      [37m+# and optionally update the other syslog parameters to suit your needs.[0m
      [37m+# syslog-enabled no[0m
      [37m+[0m
      [37m+# Specify the syslog identity.[0m
      [37m+# syslog-ident redis[0m
      [37m+[0m
      [37m+# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.[0m
      [37m+# syslog-facility local0[0m
      [37m+[0m
      [37m+# Set the number of databases. The default database is DB 0, you can select[0m
      [37m+# a different one on a per-connection basis using SELECT <dbid> where[0m
      [37m+# dbid is a number between 0 and 'databases'-1[0m
      [37m+databases 16[0m
      [37m+[0m
      [37m+################################ SNAPSHOTTING  ################################[0m
      [37m+#[0m
      [37m+# Save the DB on disk:[0m
      [37m+#[0m
      [37m+#   save <seconds> <changes>[0m
      [37m+#[0m
      [37m+#   Will save the DB if both the given number of seconds and the given[0m
      [37m+#   number of write operations against the DB occurred.[0m
      [37m+#[0m
      [37m+#   In the example below the behaviour will be to save:[0m
      [37m+#   after 900 sec (15 min) if at least 1 key changed[0m
      [37m+#   after 300 sec (5 min) if at least 10 keys changed[0m
      [37m+#   after 60 sec if at least 10000 keys changed[0m
      [37m+#[0m
      [37m+#   Note: you can disable saving completely by commenting out all "save" lines.[0m
      [37m+#[0m
      [37m+#   It is also possible to remove all the previously configured save[0m
      [37m+#   points by adding a save directive with a single empty string argument[0m
      [37m+#   like in the following example:[0m
      [37m+#[0m
      [37m+#   save ""[0m
      [37m+[0m
      [37m+save 900 1[0m
      [37m+save 300 10[0m
      [37m+save 60 10000[0m
      [37m+[0m
      [37m+# By default Redis will stop accepting writes if RDB snapshots are enabled[0m
      [37m+# (at least one save point) and the latest background save failed.[0m
      [37m+# This will make the user aware (in a hard way) that data is not persisting[0m
      [37m+# on disk properly, otherwise chances are that no one will notice and some[0m
      [37m+# disaster will happen.[0m
      [37m+#[0m
      [37m+# If the background saving process will start working again Redis will[0m
      [37m+# automatically allow writes again.[0m
      [37m+#[0m
      [37m+# However if you have setup your proper monitoring of the Redis server[0m
      [37m+# and persistence, you may want to disable this feature so that Redis will[0m
      [37m+# continue to work as usual even if there are problems with disk,[0m
      [37m+# permissions, and so forth.[0m
      [37m+stop-writes-on-bgsave-error yes[0m
      [37m+[0m
      [37m+# Compress string objects using LZF when dump .rdb databases?[0m
      [37m+# For default that's set to 'yes' as it's almost always a win.[0m
      [37m+# If you want to save some CPU in the saving child set it to 'no' but[0m
      [37m+# the dataset will likely be bigger if you have compressible values or keys.[0m
      [37m+rdbcompression yes[0m
      [37m+[0m
      [37m+# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.[0m
      [37m+# This makes the format more resistant to corruption but there is a performance[0m
      [37m+# hit to pay (around 10%) when saving and loading RDB files, so you can disable it[0m
      [37m+# for maximum performances.[0m
      [37m+#[0m
      [37m+# RDB files created with checksum disabled have a checksum of zero that will[0m
      [37m+# tell the loading code to skip the check.[0m
      [37m+rdbchecksum yes[0m
      [37m+[0m
      [37m+# The filename where to dump the DB[0m
      [37m+dbfilename "dump.rdb"[0m
      [37m+[0m
      [37m+# The working directory.[0m
      [37m+#[0m
      [37m+# The DB will be written inside this directory, with the filename specified[0m
      [37m+# above using the 'dbfilename' configuration directive.[0m
      [37m+#[0m
      [37m+# The Append Only File will also be created inside this directory.[0m
      [37m+#[0m
      [37m+# Note that you must specify a directory here, not a file name.[0m
      [37m+dir "/var/opt/gitlab/redis"[0m
      [37m+[0m
      [37m+################################# REPLICATION #################################[0m
      [37m+[0m
      [37m+# Master-Replica replication. Use replicaof to make a Redis instance a copy of[0m
      [37m+# another Redis server. A few things to understand ASAP about Redis replication.[0m
      [37m+#[0m
      [37m+# 1) Redis replication is asynchronous, but you can configure a master to[0m
      [37m+#    stop accepting writes if it appears to be not connected with at least[0m
      [37m+#    a given number of replicas.[0m
      [37m+# 2) Redis replicas are able to perform a partial resynchronization with the[0m
      [37m+#    master if the replication link is lost for a relatively small amount of[0m
      [37m+#    time. You may want to configure the replication backlog size (see the next[0m
      [37m+#    sections of this file) with a sensible value depending on your needs.[0m
      [37m+# 3) Replication is automatic and does not need user intervention. After a[0m
      [37m+#    network partition replicas automatically try to reconnect to masters[0m
      [37m+#    and resynchronize with them.[0m
      [37m+#[0m
      [37m+# replicaof <masterip> <masterport>[0m
      [37m+[0m
      [37m+[0m
      [37m+# If the master is password protected (using the "requirepass" configuration[0m
      [37m+# directive below) it is possible to tell the replica to authenticate before[0m
      [37m+# starting the replication synchronization process, otherwise the master will[0m
      [37m+# refuse the replica request.[0m
      [37m+#[0m
      [37m+# masterauth <master-password>[0m
      [37m+[0m
      [37m+[0m
      [37m+# When a replica loses its connection with the master, or when the replication[0m
      [37m+# is still in progress, the replica can act in two different ways:[0m
      [37m+#[0m
      [37m+# 1) if replica-serve-stale-data is set to 'yes' (the default) the replica will[0m
      [37m+#    still reply to client requests, possibly with out of date data, or the[0m
      [37m+#    data set may just be empty if this is the first synchronization.[0m
      [37m+#[0m
      [37m+# 2) if replica-serve-stale-data is set to 'no' the replica will reply with[0m
      [37m+#    an error "SYNC with master in progress" to all the kind of commands[0m
      [37m+#    but to INFO and REPLICAOF.[0m
      [37m+#[0m
      [37m+replica-serve-stale-data yes[0m
      [37m+[0m
      [37m+# You can configure a replica instance to accept writes or not. Writing against[0m
      [37m+# a replica instance may be useful to store some ephemeral data (because data[0m
      [37m+# written on a replica will be easily deleted after resync with the master) but[0m
      [37m+# may also cause problems if clients are writing to it because of a[0m
      [37m+# misconfiguration.[0m
      [37m+#[0m
      [37m+# Since Redis 2.6 by default replicas are read-only.[0m
      [37m+#[0m
      [37m+# Note: read only replicas are not designed to be exposed to untrusted clients[0m
      [37m+# on the internet. It's just a protection layer against misuse of the instance.[0m
      [37m+# Still a read only replica exports by default all the administrative commands[0m
      [37m+# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve[0m
      [37m+# security of read only replicas using 'rename-command' to shadow all the[0m
      [37m+# administrative / dangerous commands.[0m
      [37m+replica-read-only yes[0m
      [37m+[0m
      [37m+# Replication SYNC strategy: disk or socket.[0m
      [37m+#[0m
      [37m+# -------------------------------------------------------[0m
      [37m+# WARNING: DISKLESS REPLICATION IS EXPERIMENTAL CURRENTLY[0m
      [37m+# -------------------------------------------------------[0m
      [37m+#[0m
      [37m+# New replicas and reconnecting replicas that are not able to continue the replication[0m
      [37m+# process just receiving differences, need to do what is called a "full[0m
      [37m+# synchronization". An RDB file is transmitted from the master to the replicas.[0m
      [37m+# The transmission can happen in two different ways:[0m
      [37m+#[0m
      [37m+# 1) Disk-backed: The Redis master creates a new process that writes the RDB[0m
      [37m+#                 file on disk. Later the file is transferred by the parent[0m
      [37m+#                 process to the replicas incrementally.[0m
      [37m+# 2) Diskless: The Redis master creates a new process that directly writes the[0m
      [37m+#              RDB file to replica sockets, without touching the disk at all.[0m
      [37m+#[0m
      [37m+# With disk-backed replication, while the RDB file is generated, more replicas[0m
      [37m+# can be queued and served with the RDB file as soon as the current child producing[0m
      [37m+# the RDB file finishes its work. With diskless replication instead once[0m
      [37m+# the transfer starts, new replicas arriving will be queued and a new transfer[0m
      [37m+# will start when the current one terminates.[0m
      [37m+#[0m
      [37m+# When diskless replication is used, the master waits a configurable amount of[0m
      [37m+# time (in seconds) before starting the transfer in the hope that multiple replicas[0m
      [37m+# will arrive and the transfer can be parallelized.[0m
      [37m+#[0m
      [37m+# With slow disks and fast (large bandwidth) networks, diskless replication[0m
      [37m+# works better.[0m
      [37m+# repl-diskless-sync no[0m
      [37m+[0m
      [37m+# When diskless replication is enabled, it is possible to configure the delay[0m
      [37m+# the server waits in order to spawn the child that transfers the RDB via socket[0m
      [37m+# to the replicas.[0m
      [37m+#[0m
      [37m+# This is important since once the transfer starts, it is not possible to serve[0m
      [37m+# new replicas arriving, that will be queued for the next RDB transfer, so the server[0m
      [37m+# waits a delay in order to let more replicas arrive.[0m
      [37m+#[0m
      [37m+# The delay is specified in seconds, and by default is 5 seconds. To disable[0m
      [37m+# it entirely just set it to 0 seconds and the transfer will start ASAP.[0m
      [37m+# repl-diskless-sync-delay 5[0m
      [37m+[0m
      [37m+# replicas send PINGs to server in a predefined interval. It's possible to change[0m
      [37m+# this interval with the repl_ping_replica_period option. The default value is 10[0m
      [37m+# seconds.[0m
      [37m+#[0m
      [37m+# repl-ping-replica-period 10[0m
      [37m+[0m
      [37m+# The following option sets the replication timeout for:[0m
      [37m+#[0m
      [37m+# 1) Bulk transfer I/O during SYNC, from the point of view of replica.[0m
      [37m+# 2) Master timeout from the point of view of replicas (data, pings).[0m
      [37m+# 3) replica timeout from the point of view of masters (REPLCONF ACK pings).[0m
      [37m+#[0m
      [37m+# It is important to make sure that this value is greater than the value[0m
      [37m+# specified for repl-ping-replica-period otherwise a timeout will be detected[0m
      [37m+# every time there is low traffic between the master and the replica.[0m
      [37m+#[0m
      [37m+# repl-timeout 60[0m
      [37m+[0m
      [37m+# Disable TCP_NODELAY on the replica socket after SYNC?[0m
      [37m+#[0m
      [37m+# If you select "yes" Redis will use a smaller number of TCP packets and[0m
      [37m+# less bandwidth to send data to replicas. But this can add a delay for[0m
      [37m+# the data to appear on the replica side, up to 40 milliseconds with[0m
      [37m+# Linux kernels using a default configuration.[0m
      [37m+#[0m
      [37m+# If you select "no" the delay for data to appear on the replica side will[0m
      [37m+# be reduced but more bandwidth will be used for replication.[0m
      [37m+#[0m
      [37m+# By default we optimize for low latency, but in very high traffic conditions[0m
      [37m+# or when the master and replicas are many hops away, turning this to "yes" may[0m
      [37m+# be a good idea.[0m
      [37m+repl-disable-tcp-nodelay no[0m
      [37m+[0m
      [37m+# Set the replication backlog size. The backlog is a buffer that accumulates[0m
      [37m+# replica data when replicas are disconnected for some time, so that when a replica[0m
      [37m+# wants to reconnect again, often a full resync is not needed, but a partial[0m
      [37m+# resync is enough, just passing the portion of data the replica missed while[0m
      [37m+# disconnected.[0m
      [37m+#[0m
      [37m+# The bigger the replication backlog, the longer the time the replica can be[0m
      [37m+# disconnected and later be able to perform a partial resynchronization.[0m
      [37m+#[0m
      [37m+# The backlog is only allocated once there is at least a replica connected.[0m
      [37m+#[0m
      [37m+# repl-backlog-size 1mb[0m
      [37m+[0m
      [37m+# After a master has no longer connected replicas for some time, the backlog[0m
      [37m+# will be freed. The following option configures the amount of seconds that[0m
      [37m+# need to elapse, starting from the time the last replica disconnected, for[0m
      [37m+# the backlog buffer to be freed.[0m
      [37m+#[0m
      [37m+# A value of 0 means to never release the backlog.[0m
      [37m+#[0m
      [37m+# repl-backlog-ttl 3600[0m
      [37m+[0m
      [37m+# The replica priority is an integer number published by Redis in the INFO output.[0m
      [37m+# It is used by Redis Sentinel in order to select a replica to promote into a[0m
      [37m+# master if the master is no longer working correctly.[0m
      [37m+#[0m
      [37m+# A replica with a low priority number is considered better for promotion, so[0m
      [37m+# for instance if there are three replicas with priority 10, 100, 25 Sentinel will[0m
      [37m+# pick the one with priority 10, that is the lowest.[0m
      [37m+#[0m
      [37m+# However a special priority of 0 marks the replica as not able to perform the[0m
      [37m+# role of master, so a replica with priority of 0 will never be selected by[0m
      [37m+# Redis Sentinel for promotion.[0m
      [37m+#[0m
      [37m+# By default the priority is 100.[0m
      [37m+replica-priority 100[0m
      [37m+[0m
      [37m+# It is possible for a master to stop accepting writes if there are less than[0m
      [37m+# N replicas connected, having a lag less or equal than M seconds.[0m
      [37m+#[0m
      [37m+# The N replicas need to be in "online" state.[0m
      [37m+#[0m
      [37m+# The lag in seconds, that must be <= the specified value, is calculated from[0m
      [37m+# the last ping received from the replica, that is usually sent every second.[0m
      [37m+#[0m
      [37m+# This option does not GUARANTEE that N replicas will accept the write, but[0m
      [37m+# will limit the window of exposure for lost writes in case not enough replicas[0m
      [37m+# are available, to the specified number of seconds.[0m
      [37m+#[0m
      [37m+# For example to require at least 3 replicas with a lag <= 10 seconds use:[0m
      [37m+#[0m
      [37m+# min-replicas-to-write 3[0m
      [37m+# min-replicas-max-lag 10[0m
      [37m+#[0m
      [37m+# Setting one or the other to 0 disables the feature.[0m
      [37m+#[0m
      [37m+# By default min-replicas-to-write is set to 0 (feature disabled) and[0m
      [37m+# min-replicas-max-lag is set to 10.[0m
      [37m+[0m
      [37m+# A Redis master is able to list the address and port of the attached[0m
      [37m+# replicas in different ways. For example the "INFO replication" section[0m
      [37m+# offers this information, which is used, among other tools, by[0m
      [37m+# Redis Sentinel in order to discover replica instances.[0m
      [37m+# Another place where this info is available is in the output of the[0m
      [37m+# "ROLE" command of a masteer.[0m
      [37m+#[0m
      [37m+# The listed IP and address normally reported by a replica is obtained[0m
      [37m+# in the following way:[0m
      [37m+#[0m
      [37m+#   IP: The address is auto detected by checking the peer address[0m
      [37m+#   of the socket used by the replica to connect with the master.[0m
      [37m+#[0m
      [37m+#   Port: The port is communicated by the replica during the replication[0m
      [37m+#   handshake, and is normally the port that the replica is using to[0m
      [37m+#   list for connections.[0m
      [37m+#[0m
      [37m+# However when port forwarding or Network Address Translation (NAT) is[0m
      [37m+# used, the replica may be actually reachable via different IP and port[0m
      [37m+# pairs. The following two options can be used by a replica in order to[0m
      [37m+# report to its master a specific set of IP and port, so that both INFO[0m
      [37m+# and ROLE will report those values.[0m
      [37m+#[0m
      [37m+# There is no need to use both the options if you need to override just[0m
      [37m+# the port or the IP address.[0m
      [37m+#[0m
      [37m+[0m
      [37m+[0m
      [37m+[0m
      [37m+################################## SECURITY ###################################[0m
      [37m+[0m
      [37m+# Require clients to issue AUTH <PASSWORD> before processing any other[0m
      [37m+# commands.  This might be useful in environments in which you do not trust[0m
      [37m+# others with access to the host running redis-server.[0m
      [37m+#[0m
      [37m+# This should stay commented out for backward compatibility and because most[0m
      [37m+# people do not need auth (e.g. they run their own servers).[0m
      [37m+#[0m
      [37m+# Warning: since Redis is pretty fast an outside user can try up to[0m
      [37m+# 150k passwords per second against a good box. This means that you should[0m
      [37m+# use a very strong password otherwise it will be very easy to break.[0m
      [37m+#[0m
      [37m+[0m
      [37m+[0m
      [37m+# Command renaming.[0m
      [37m+#[0m
      [37m+# It is possible to change the name of dangerous commands in a shared[0m
      [37m+# environment. For instance the CONFIG command may be renamed into something[0m
      [37m+# hard to guess so that it will still be available for internal-use tools[0m
      [37m+# but not available for general clients.[0m
      [37m+#[0m
      [37m+# Example:[0m
      [37m+#[0m
      [37m+# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52[0m
      [37m+#[0m
      [37m+# It is also possible to completely kill a command by renaming it into[0m
      [37m+# an empty string:[0m
      [37m+#[0m
      [37m+# rename-command CONFIG ""[0m
      [37m+#[0m
      [37m+# Please note that changing the name of commands that are logged into the[0m
      [37m+# AOF file or transmitted to replicas may cause problems.[0m
      [37m+rename-command KEYS ""[0m
      [37m+################################### LIMITS ####################################[0m
      [37m+[0m
      [37m+# Set the max number of connected clients at the same time. By default[0m
      [37m+# this limit is set to 10000 clients, however if the Redis server is not[0m
      [37m+# able to configure the process file limit to allow for the specified limit[0m
      [37m+# the max number of allowed clients is set to the current file limit[0m
      [37m+# minus 32 (as Redis reserves a few file descriptors for internal uses).[0m
      [37m+#[0m
      [37m+# Once the limit is reached Redis will close all the new connections sending[0m
      [37m+# an error 'max number of clients reached'.[0m
      [37m+#[0m
      [37m+maxclients 10000[0m
      [37m+[0m
      [37m+# Don't use more memory than the specified amount of bytes.[0m
      [37m+# When the memory limit is reached Redis will try to remove keys[0m
      [37m+# according to the eviction policy selected (see maxmemory-policy).[0m
      [37m+#[0m
      [37m+# If Redis can't remove keys according to the policy, or if the policy is[0m
      [37m+# set to 'noeviction', Redis will start to reply with errors to commands[0m
      [37m+# that would use more memory, like SET, LPUSH, and so on, and will continue[0m
      [37m+# to reply to read-only commands like GET.[0m
      [37m+#[0m
      [37m+# This option is usually useful when using Redis as an LRU cache, or to set[0m
      [37m+# a hard memory limit for an instance (using the 'noeviction' policy).[0m
      [37m+#[0m
      [37m+# WARNING: If you have replicas attached to an instance with maxmemory on,[0m
      [37m+# the size of the output buffers needed to feed the replicas are subtracted[0m
      [37m+# from the used memory count, so that network problems / resyncs will[0m
      [37m+# not trigger a loop where keys are evicted, and in turn the output[0m
      [37m+# buffer of replicas is full with DELs of keys evicted triggering the deletion[0m
      [37m+# of more keys, and so forth until the database is completely emptied.[0m
      [37m+#[0m
      [37m+# In short... if you have replicas attached it is suggested that you set a lower[0m
      [37m+# limit for maxmemory so that there is some free RAM on the system for replica[0m
      [37m+# output buffers (but this is not needed if the policy is 'noeviction').[0m
      [37m+#[0m
      [37m+# maxmemory <bytes>[0m
      [37m+maxmemory 0[0m
      [37m+[0m
      [37m+# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory[0m
      [37m+# is reached. You can select among five behaviors:[0m
      [37m+#[0m
      [37m+# volatile-lru -> remove the key with an expire set using an LRU algorithm[0m
      [37m+# allkeys-lru -> remove any key according to the LRU algorithm[0m
      [37m+# volatile-random -> remove a random key with an expire set[0m
      [37m+# allkeys-random -> remove a random key, any key[0m
      [37m+# volatile-ttl -> remove the key with the nearest expire time (minor TTL)[0m
      [37m+# noeviction -> don't expire at all, just return an error on write operations[0m
      [37m+#[0m
      [37m+# Note: with any of the above policies, Redis will return an error on write[0m
      [37m+#       operations, when there are no suitable keys for eviction.[0m
      [37m+#[0m
      [37m+#       At the date of writing these commands are: set setnx setex append[0m
      [37m+#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd[0m
      [37m+#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby[0m
      [37m+#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby[0m
      [37m+#       getset mset msetnx exec sort[0m
      [37m+#[0m
      [37m+# The default is:[0m
      [37m+#[0m
      [37m+# maxmemory-policy noeviction[0m
      [37m+maxmemory-policy noeviction[0m
      [37m+[0m
      [37m+# LRU and minimal TTL algorithms are not precise algorithms but approximated[0m
      [37m+# algorithms (in order to save memory), so you can tune it for speed or[0m
      [37m+# accuracy. For default Redis will check five keys and pick the one that was[0m
      [37m+# used less recently, you can change the sample size using the following[0m
      [37m+# configuration directive.[0m
      [37m+#[0m
      [37m+# The default of 5 produces good enough results. 10 Approximates very closely[0m
      [37m+# true LRU but costs a bit more CPU. 3 is very fast but not very accurate.[0m
      [37m+#[0m
      [37m+# maxmemory-samples 5[0m
      [37m+maxmemory-samples 5[0m
      [37m+[0m
      [37m+############################# LAZY FREEING ####################################[0m
      [37m+[0m
      [37m+# Redis has two primitives to delete keys. One is called DEL and is a blocking[0m
      [37m+# deletion of the object. It means that the server stops processing new commands[0m
      [37m+# in order to reclaim all the memory associated with an object in a synchronous[0m
      [37m+# way. If the key deleted is associated with a small object, the time needed[0m
      [37m+# in order to execute the DEL command is very small and comparable to most other[0m
      [37m+# O(1) or O(log_N) commands in Redis. However if the key is associated with an[0m
      [37m+# aggregated value containing millions of elements, the server can block for[0m
      [37m+# a long time (even seconds) in order to complete the operation.[0m
      [37m+#[0m
      [37m+# For the above reasons Redis also offers non blocking deletion primitives[0m
      [37m+# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and[0m
      [37m+# FLUSHDB commands, in order to reclaim memory in background. Those commands[0m
      [37m+# are executed in constant time. Another thread will incrementally free the[0m
      [37m+# object in the background as fast as possible.[0m
      [37m+#[0m
      [37m+# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.[0m
      [37m+# It's up to the design of the application to understand when it is a good[0m
      [37m+# idea to use one or the other. However the Redis server sometimes has to[0m
      [37m+# delete keys or flush the whole database as a side effect of other operations.[0m
      [37m+# Specifically Redis deletes objects independently of a user call in the[0m
      [37m+# following scenarios:[0m
      [37m+#[0m
      [37m+# 1) On eviction, because of the maxmemory and maxmemory policy configurations,[0m
      [37m+#    in order to make room for new data, without going over the specified[0m
      [37m+#    memory limit.[0m
      [37m+# 2) Because of expire: when a key with an associated time to live (see the[0m
      [37m+#    EXPIRE command) must be deleted from memory.[0m
      [37m+# 3) Because of a side effect of a command that stores data on a key that may[0m
      [37m+#    already exist. For example the RENAME command may delete the old key[0m
      [37m+#    content when it is replaced with another one. Similarly SUNIONSTORE[0m
      [37m+#    or SORT with STORE option may delete existing keys. The SET command[0m
      [37m+#    itself removes any old content of the specified key in order to replace[0m
      [37m+#    it with the specified string.[0m
      [37m+# 4) During replication, when a replica performs a full resynchronization with[0m
      [37m+#    its master, the content of the whole database is removed in order to[0m
      [37m+#    load the RDB file just transferred.[0m
      [37m+#[0m
      [37m+# In all the above cases the default is to delete objects in a blocking way,[0m
      [37m+# like if DEL was called. However you can configure each case specifically[0m
      [37m+# in order to instead release memory in a non-blocking way like if UNLINK[0m
      [37m+# was called, using the following configuration directives:[0m
      [37m+[0m
      [37m+lazyfree-lazy-eviction no[0m
      [37m+lazyfree-lazy-expire no[0m
      [37m+lazyfree-lazy-server-del no[0m
      [37m+replica-lazy-flush no[0m
      [37m+[0m
      [37m+############################## APPEND ONLY MODE ###############################[0m
      [37m+[0m
      [37m+# By default Redis asynchronously dumps the dataset on disk. This mode is[0m
      [37m+# good enough in many applications, but an issue with the Redis process or[0m
      [37m+# a power outage may result into a few minutes of writes lost (depending on[0m
      [37m+# the configured save points).[0m
      [37m+#[0m
      [37m+# The Append Only File is an alternative persistence mode that provides[0m
      [37m+# much better durability. For instance using the default data fsync policy[0m
      [37m+# (see later in the config file) Redis can lose just one second of writes in a[0m
      [37m+# dramatic event like a server power outage, or a single write if something[0m
      [37m+# wrong with the Redis process itself happens, but the operating system is[0m
      [37m+# still running correctly.[0m
      [37m+#[0m
      [37m+# AOF and RDB persistence can be enabled at the same time without problems.[0m
      [37m+# If the AOF is enabled on startup Redis will load the AOF, that is the file[0m
      [37m+# with the better durability guarantees.[0m
      [37m+#[0m
      [37m+# Please check http://redis.io/topics/persistence for more information.[0m
      [37m+[0m
      [37m+appendonly no[0m
      [37m+[0m
      [37m+# The name of the append only file (default: "appendonly.aof")[0m
      [37m+[0m
      [37m+# appendfilename "appendonly.aof"[0m
      [37m+[0m
      [37m+# The fsync() call tells the Operating System to actually write data on disk[0m
      [37m+# instead of waiting for more data in the output buffer. Some OS will really flush[0m
      [37m+# data on disk, some other OS will just try to do it ASAP.[0m
      [37m+#[0m
      [37m+# Redis supports three different modes:[0m
      [37m+#[0m
      [37m+# no: don't fsync, just let the OS flush the data when it wants. Faster.[0m
      [37m+# always: fsync after every write to the append only log. Slow, Safest.[0m
      [37m+# everysec: fsync only one time every second. Compromise.[0m
      [37m+#[0m
      [37m+# The default is "everysec", as that's usually the right compromise between[0m
      [37m+# speed and data safety. It's up to you to understand if you can relax this to[0m
      [37m+# "no" that will let the operating system flush the output buffer when[0m
      [37m+# it wants, for better performances (but if you can live with the idea of[0m
      [37m+# some data loss consider the default persistence mode that's snapshotting),[0m
      [37m+# or on the contrary, use "always" that's very slow but a bit safer than[0m
      [37m+# everysec.[0m
      [37m+#[0m
      [37m+# More details please check the following article:[0m
      [37m+# http://antirez.com/post/redis-persistence-demystified.html[0m
      [37m+#[0m
      [37m+# If unsure, use "everysec".[0m
      [37m+[0m
      [37m+# appendfsync always[0m
      [37m+appendfsync everysec[0m
      [37m+# appendfsync no[0m
      [37m+[0m
      [37m+# When the AOF fsync policy is set to always or everysec, and a background[0m
      [37m+# saving process (a background save or AOF log background rewriting) is[0m
      [37m+# performing a lot of I/O against the disk, in some Linux configurations[0m
      [37m+# Redis may block too long on the fsync() call. Note that there is no fix for[0m
      [37m+# this currently, as even performing fsync in a different thread will block[0m
      [37m+# our synchronous write(2) call.[0m
      [37m+#[0m
      [37m+# In order to mitigate this problem it's possible to use the following option[0m
      [37m+# that will prevent fsync() from being called in the main process while a[0m
      [37m+# BGSAVE or BGREWRITEAOF is in progress.[0m
      [37m+#[0m
      [37m+# This means that while another child is saving, the durability of Redis is[0m
      [37m+# the same as "appendfsync none". In practical terms, this means that it is[0m
      [37m+# possible to lose up to 30 seconds of log in the worst scenario (with the[0m
      [37m+# default Linux settings).[0m
      [37m+#[0m
      [37m+# If you have latency problems turn this to "yes". Otherwise leave it as[0m
      [37m+# "no" that is the safest pick from the point of view of durability.[0m
      [37m+[0m
      [37m+no-appendfsync-on-rewrite no[0m
      [37m+[0m
      [37m+# Automatic rewrite of the append only file.[0m
      [37m+# Redis is able to automatically rewrite the log file implicitly calling[0m
      [37m+# BGREWRITEAOF when the AOF log size grows by the specified percentage.[0m
      [37m+#[0m
      [37m+# This is how it works: Redis remembers the size of the AOF file after the[0m
      [37m+# latest rewrite (if no rewrite has happened since the restart, the size of[0m
      [37m+# the AOF at startup is used).[0m
      [37m+#[0m
      [37m+# This base size is compared to the current size. If the current size is[0m
      [37m+# bigger than the specified percentage, the rewrite is triggered. Also[0m
      [37m+# you need to specify a minimal size for the AOF file to be rewritten, this[0m
      [37m+# is useful to avoid rewriting the AOF file even if the percentage increase[0m
      [37m+# is reached but it is still pretty small.[0m
      [37m+#[0m
      [37m+# Specify a percentage of zero in order to disable the automatic AOF[0m
      [37m+# rewrite feature.[0m
      [37m+[0m
      [37m+auto-aof-rewrite-percentage 100[0m
      [37m+auto-aof-rewrite-min-size 64mb[0m
      [37m+[0m
      [37m+# An AOF file may be found to be truncated at the end during the Redis[0m
      [37m+# startup process, when the AOF data gets loaded back into memory.[0m
      [37m+# This may happen when the system where Redis is running[0m
      [37m+# crashes, especially when an ext4 filesystem is mounted without the[0m
      [37m+# data=ordered option (however this can't happen when Redis itself[0m
      [37m+# crashes or aborts but the operating system still works correctly).[0m
      [37m+#[0m
      [37m+# Redis can either exit with an error when this happens, or load as much[0m
      [37m+# data as possible (the default now) and start if the AOF file is found[0m
      [37m+# to be truncated at the end. The following option controls this behavior.[0m
      [37m+#[0m
      [37m+# If aof-load-truncated is set to yes, a truncated AOF file is loaded and[0m
      [37m+# the Redis server starts emitting a log to inform the user of the event.[0m
      [37m+# Otherwise if the option is set to no, the server aborts with an error[0m
      [37m+# and refuses to start. When the option is set to no, the user requires[0m
      [37m+# to fix the AOF file using the "redis-check-aof" utility before to restart[0m
      [37m+# the server.[0m
      [37m+#[0m
      [37m+# Note that if the AOF file will be found to be corrupted in the middle[0m
      [37m+# the server will still exit with an error. This option only applies when[0m
      [37m+# Redis will try to read more data from the AOF file but not enough bytes[0m
      [37m+# will be found.[0m
      [37m+# aof-load-truncated yes[0m
      [37m+[0m
      [37m+################################ LUA SCRIPTING  ###############################[0m
      [37m+[0m
      [37m+# Max execution time of a Lua script in milliseconds.[0m
      [37m+#[0m
      [37m+# If the maximum execution time is reached Redis will log that a script is[0m
      [37m+# still in execution after the maximum allowed time and will start to[0m
      [37m+# reply to queries with an error.[0m
      [37m+#[0m
      [37m+# When a long running script exceeds the maximum execution time only the[0m
      [37m+# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be[0m
      [37m+# used to stop a script that did not yet called write commands. The second[0m
      [37m+# is the only way to shut down the server in the case a write command was[0m
      [37m+# already issued by the script but the user doesn't want to wait for the natural[0m
      [37m+# termination of the script.[0m
      [37m+#[0m
      [37m+# Set it to 0 or a negative value for unlimited execution without warnings.[0m
      [37m+lua-time-limit 5000[0m
      [37m+[0m
      [37m+################################ REDIS CLUSTER  ###############################[0m
      [37m+#[0m
      [37m+# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[0m
      [37m+# WARNING EXPERIMENTAL: Redis Cluster is considered to be stable code, however[0m
      [37m+# in order to mark it as "mature" we need to wait for a non trivial percentage[0m
      [37m+# of users to deploy it in production.[0m
      [37m+# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[0m
      [37m+#[0m
      [37m+# Normal Redis instances can't be part of a Redis Cluster; only nodes that are[0m
      [37m+# started as cluster nodes can. In order to start a Redis instance as a[0m
      [37m+# cluster node enable the cluster support uncommenting the following:[0m
      [37m+#[0m
      [37m+# cluster-enabled yes[0m
      [37m+[0m
      [37m+# Every cluster node has a cluster configuration file. This file is not[0m
      [37m+# intended to be edited by hand. It is created and updated by Redis nodes.[0m
      [37m+# Every Redis Cluster node requires a different cluster configuration file.[0m
      [37m+# Make sure that instances running in the same system do not have[0m
      [37m+# overlapping cluster configuration file names.[0m
      [37m+#[0m
      [37m+# cluster-config-file nodes-6379.conf[0m
      [37m+[0m
      [37m+# Cluster node timeout is the amount of milliseconds a node must be unreachable[0m
      [37m+# for it to be considered in failure state.[0m
      [37m+# Most other internal time limits are multiple of the node timeout.[0m
      [37m+#[0m
      [37m+# cluster-node-timeout 15000[0m
      [37m+[0m
      [37m+# A replica of a failing master will avoid to start a failover if its data[0m
      [37m+# looks too old.[0m
      [37m+#[0m
      [37m+# There is no simple way for a replica to actually have a exact measure of[0m
      [37m+# its "data age", so the following two checks are performed:[0m
      [37m+#[0m
      [37m+# 1) If there are multiple replicas able to failover, they exchange messages[0m
      [37m+#    in order to try to give an advantage to the replica with the best[0m
      [37m+#    replication offset (more data from the master processed).[0m
      [37m+#    replicas will try to get their rank by offset, and apply to the start[0m
      [37m+#    of the failover a delay proportional to their rank.[0m
      [37m+#[0m
      [37m+# 2) Every single replica computes the time of the last interaction with[0m
      [37m+#    its master. This can be the last ping or command received (if the master[0m
      [37m+#    is still in the "connected" state), or the time that elapsed since the[0m
      [37m+#    disconnection with the master (if the replication link is currently down).[0m
      [37m+#    If the last interaction is too old, the replica will not try to failover[0m
      [37m+#    at all.[0m
      [37m+#[0m
      [37m+# The point "2" can be tuned by user. Specifically a replica will not perform[0m
      [37m+# the failover if, since the last interaction with the master, the time[0m
      [37m+# elapsed is greater than:[0m
      [37m+#[0m
      [37m+#   (node-timeout * replica-validity-factor) + repl-ping-replica-period[0m
      [37m+#[0m
      [37m+# So for example if node-timeout is 30 seconds, and the replica-validity-factor[0m
      [37m+# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the[0m
      [37m+# replica will not try to failover if it was not able to talk with the master[0m
      [37m+# for longer than 310 seconds.[0m
      [37m+#[0m
      [37m+# A large replica-validity-factor may allow replicas with too old data to failover[0m
      [37m+# a master, while a too small value may prevent the cluster from being able to[0m
      [37m+# elect a replica at all.[0m
      [37m+#[0m
      [37m+# For maximum availability, it is possible to set the replica-validity-factor[0m
      [37m+# to a value of 0, which means, that replicas will always try to failover the[0m
      [37m+# master regardless of the last time they interacted with the master.[0m
      [37m+# (However they'll always try to apply a delay proportional to their[0m
      [37m+# offset rank).[0m
      [37m+#[0m
      [37m+# Zero is the only value able to guarantee that when all the partitions heal[0m
      [37m+# the cluster will always be able to continue.[0m
      [37m+#[0m
      [37m+# cluster-replica-validity-factor 10[0m
      [37m+[0m
      [37m+# Cluster replicas are able to migrate to orphaned masters, that are masters[0m
      [37m+# that are left without working replicas. This improves the cluster ability[0m
      [37m+# to resist to failures as otherwise an orphaned master can't be failed over[0m
      [37m+# in case of failure if it has no working replicas.[0m
      [37m+#[0m
      [37m+# replicas migrate to orphaned masters only if there are still at least a[0m
      [37m+# given number of other working replicas for their old master. This number[0m
      [37m+# is the "migration barrier". A migration barrier of 1 means that a replica[0m
      [37m+# will migrate only if there is at least 1 other working replica for its master[0m
      [37m+# and so forth. It usually reflects the number of replicas you want for every[0m
      [37m+# master in your cluster.[0m
      [37m+#[0m
      [37m+# Default is 1 (replicas migrate only if their masters remain with at least[0m
      [37m+# one replica). To disable migration just set it to a very large value.[0m
      [37m+# A value of 0 can be set but is useful only for debugging and dangerous[0m
      [37m+# in production.[0m
      [37m+#[0m
      [37m+# cluster-migration-barrier 1[0m
      [37m+[0m
      [37m+# By default Redis Cluster nodes stop accepting queries if they detect there[0m
      [37m+# is at least an hash slot uncovered (no available node is serving it).[0m
      [37m+# This way if the cluster is partially down (for example a range of hash slots[0m
      [37m+# are no longer covered) all the cluster becomes, eventually, unavailable.[0m
      [37m+# It automatically returns available as soon as all the slots are covered again.[0m
      [37m+#[0m
      [37m+# However sometimes you want the subset of the cluster which is working,[0m
      [37m+# to continue to accept queries for the part of the key space that is still[0m
      [37m+# covered. In order to do so, just set the cluster-require-full-coverage[0m
      [37m+# option to no.[0m
      [37m+#[0m
      [37m+# cluster-require-full-coverage yes[0m
      [37m+[0m
      [37m+# In order to setup your cluster make sure to read the documentation[0m
      [37m+# available at http://redis.io web site.[0m
      [37m+[0m
      [37m+################################## SLOW LOG ###################################[0m
      [37m+[0m
      [37m+# The Redis Slow Log is a system to log queries that exceeded a specified[0m
      [37m+# execution time. The execution time does not include the I/O operations[0m
      [37m+# like talking with the client, sending the reply and so forth,[0m
      [37m+# but just the time needed to actually execute the command (this is the only[0m
      [37m+# stage of command execution where the thread is blocked and can not serve[0m
      [37m+# other requests in the meantime).[0m
      [37m+#[0m
      [37m+# You can configure the slow log with two parameters: one tells Redis[0m
      [37m+# what is the execution time, in microseconds, to exceed in order for the[0m
      [37m+# command to get logged, and the other parameter is the length of the[0m
      [37m+# slow log. When a new command is logged the oldest one is removed from the[0m
      [37m+# queue of logged commands.[0m
      [37m+[0m
      [37m+# The following time is expressed in microseconds, so 1000000 is equivalent[0m
      [37m+# to one second. Note that a negative number disables the slow log, while[0m
      [37m+# a value of zero forces the logging of every command.[0m
      [37m+slowlog-log-slower-than 10000[0m
      [37m+[0m
      [37m+# There is no limit to this length. Just be aware that it will consume memory.[0m
      [37m+# You can reclaim memory used by the slow log with SLOWLOG RESET.[0m
      [37m+slowlog-max-len 128[0m
      [37m+[0m
      [37m+################################ LATENCY MONITOR ##############################[0m
      [37m+[0m
      [37m+# The Redis latency monitoring subsystem samples different operations[0m
      [37m+# at runtime in order to collect data related to possible sources of[0m
      [37m+# latency of a Redis instance.[0m
      [37m+#[0m
      [37m+# Via the LATENCY command this information is available to the user that can[0m
      [37m+# print graphs and obtain reports.[0m
      [37m+#[0m
      [37m+# The system only logs operations that were performed in a time equal or[0m
      [37m+# greater than the amount of milliseconds specified via the[0m
      [37m+# latency-monitor-threshold configuration directive. When its value is set[0m
      [37m+# to zero, the latency monitor is turned off.[0m
      [37m+#[0m
      [37m+# By default latency monitoring is disabled since it is mostly not needed[0m
      [37m+# if you don't have latency issues, and collecting data has a performance[0m
      [37m+# impact, that while very small, can be measured under big load. Latency[0m
      [37m+# monitoring can easily be enabled at runtime using the command[0m
      [37m+# "CONFIG SET latency-monitor-threshold <milliseconds>" if needed.[0m
      [37m+# latency-monitor-threshold 0[0m
      [37m+[0m
      [37m+############################# EVENT NOTIFICATION ##############################[0m
      [37m+[0m
      [37m+# Redis can notify Pub/Sub clients about events happening in the key space.[0m
      [37m+# This feature is documented at http://redis.io/topics/notifications[0m
      [37m+#[0m
      [37m+# For instance if keyspace events notification is enabled, and a client[0m
      [37m+# performs a DEL operation on key "foo" stored in the Database 0, two[0m
      [37m+# messages will be published via Pub/Sub:[0m
      [37m+#[0m
      [37m+# PUBLISH __keyspace@0__:foo del[0m
      [37m+# PUBLISH __keyevent@0__:del foo[0m
      [37m+#[0m
      [37m+# It is possible to select the events that Redis will notify among a set[0m
      [37m+# of classes. Every class is identified by a single character:[0m
      [37m+#[0m
      [37m+#  K     Keyspace events, published with __keyspace@<db>__ prefix.[0m
      [37m+#  E     Keyevent events, published with __keyevent@<db>__ prefix.[0m
      [37m+#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...[0m
      [37m+#  $     String commands[0m
      [37m+#  l     List commands[0m
      [37m+#  s     Set commands[0m
      [37m+#  h     Hash commands[0m
      [37m+#  z     Sorted set commands[0m
      [37m+#  x     Expired events (events generated every time a key expires)[0m
      [37m+#  e     Evicted events (events generated when a key is evicted for maxmemory)[0m
      [37m+#  A     Alias for g$lshzxe, so that the "AKE" string means all the events.[0m
      [37m+#[0m
      [37m+#  The "notify-keyspace-events" takes as argument a string that is composed[0m
      [37m+#  of zero or multiple characters. The empty string means that notifications[0m
      [37m+#  are disabled.[0m
      [37m+#[0m
      [37m+#  Example: to enable list and generic events, from the point of view of the[0m
      [37m+#           event name, use:[0m
      [37m+#[0m
      [37m+#  notify-keyspace-events Elg[0m
      [37m+#[0m
      [37m+#  Example 2: to get the stream of the expired keys subscribing to channel[0m
      [37m+#             name __keyevent@0__:expired use:[0m
      [37m+#[0m
      [37m+#  notify-keyspace-events Ex[0m
      [37m+#[0m
      [37m+#  By default all notifications are disabled because most users don't need[0m
      [37m+#  this feature and the feature has some overhead. Note that if you don't[0m
      [37m+#  specify at least one of K or E, no events will be delivered.[0m
      [37m+notify-keyspace-events ""[0m
      [37m+[0m
      [37m+############################### ADVANCED CONFIG ###############################[0m
      [37m+[0m
      [37m+# Hashes are encoded using a memory efficient data structure when they have a[0m
      [37m+# small number of entries, and the biggest entry does not exceed a given[0m
      [37m+# threshold. These thresholds can be configured using the following directives.[0m
      [37m+hash-max-ziplist-entries 512[0m
      [37m+hash-max-ziplist-value 64[0m
      [37m+[0m
      [37m+# Lists are also encoded in a special way to save a lot of space.[0m
      [37m+# The number of entries allowed per internal list node can be specified[0m
      [37m+# as a fixed maximum size or a maximum number of elements.[0m
      [37m+# For a fixed maximum size, use -5 through -1, meaning:[0m
      [37m+# -5: max size: 64 Kb  <-- not recommended for normal workloads[0m
      [37m+# -4: max size: 32 Kb  <-- not recommended[0m
      [37m+# -3: max size: 16 Kb  <-- probably not recommended[0m
      [37m+# -2: max size: 8 Kb   <-- good[0m
      [37m+# -1: max size: 4 Kb   <-- good[0m
      [37m+# Positive numbers mean store up to _exactly_ that number of elements[0m
      [37m+# per list node.[0m
      [37m+# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),[0m
      [37m+# but if your use case is unique, adjust the settings as necessary.[0m
      [37m+# list-max-ziplist-size -2[0m
      [37m+[0m
      [37m+# Lists may also be compressed.[0m
      [37m+# Compress depth is the number of quicklist ziplist nodes from *each* side of[0m
      [37m+# the list to *exclude* from compression.  The head and tail of the list[0m
      [37m+# are always uncompressed for fast push/pop operations.  Settings are:[0m
      [37m+# 0: disable all list compression[0m
      [37m+# 1: depth 1 means "don't start compressing until after 1 node into the list,[0m
      [37m+#    going from either the head or tail"[0m
      [37m+#    So: [head]->node->node->...->node->[tail][0m
      [37m+#    [head], [tail] will always be uncompressed; inner nodes will compress.[0m
      [37m+# 2: [head]->[next]->node->node->...->node->[prev]->[tail][0m
      [37m+#    2 here means: don't compress head or head->next or tail->prev or tail,[0m
      [37m+#    but compress all nodes between them.[0m
      [37m+# 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail][0m
      [37m+# etc.[0m
      [37m+# list-compress-depth 0[0m
      [37m+[0m
      [37m+# Sets have a special encoding in just one case: when a set is composed[0m
      [37m+# of just strings that happen to be integers in radix 10 in the range[0m
      [37m+# of 64 bit signed integers.[0m
      [37m+# The following configuration setting sets the limit in the size of the[0m
      [37m+# set in order to use this special memory saving encoding.[0m
      [37m+set-max-intset-entries 512[0m
      [37m+[0m
      [37m+# Similarly to hashes and lists, sorted sets are also specially encoded in[0m
      [37m+# order to save a lot of space. This encoding is only used when the length and[0m
      [37m+# elements of a sorted set are below the following limits:[0m
      [37m+zset-max-ziplist-entries 128[0m
      [37m+zset-max-ziplist-value 64[0m
      [37m+[0m
      [37m+# HyperLogLog sparse representation bytes limit. The limit includes the[0m
      [37m+# 16 bytes header. When an HyperLogLog using the sparse representation crosses[0m
      [37m+# this limit, it is converted into the dense representation.[0m
      [37m+#[0m
      [37m+# A value greater than 16000 is totally useless, since at that point the[0m
      [37m+# dense representation is more memory efficient.[0m
      [37m+#[0m
      [37m+# The suggested value is ~ 3000 in order to have the benefits of[0m
      [37m+# the space efficient encoding without slowing down too much PFADD,[0m
      [37m+# which is O(N) with the sparse encoding. The value can be raised to[0m
      [37m+# ~ 10000 when CPU is not a concern, but space is, and the data set is[0m
      [37m+# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.[0m
      [37m+# hll-sparse-max-bytes 3000[0m
      [37m+[0m
      [37m+# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in[0m
      [37m+# order to help rehashing the main Redis hash table (the one mapping top-level[0m
      [37m+# keys to values). The hash table implementation Redis uses (see dict.c)[0m
      [37m+# performs a lazy rehashing: the more operation you run into a hash table[0m
      [37m+# that is rehashing, the more rehashing "steps" are performed, so if the[0m
      [37m+# server is idle the rehashing is never complete and some more memory is used[0m
      [37m+# by the hash table.[0m
      [37m+#[0m
      [37m+# The default is to use this millisecond 10 times every second in order to[0m
      [37m+# actively rehash the main dictionaries, freeing memory when possible.[0m
      [37m+#[0m
      [37m+# If unsure:[0m
      [37m+# use "activerehashing no" if you have hard latency requirements and it is[0m
      [37m+# not a good thing in your environment that Redis can reply from time to time[0m
      [37m+# to queries with 2 milliseconds delay.[0m
      [37m+#[0m
      [37m+# use "activerehashing yes" if you don't have such hard requirements but[0m
      [37m+# want to free memory asap when possible.[0m
      [37m+activerehashing yes[0m
      [37m+[0m
      [37m+# The client output buffer limits can be used to force disconnection of clients[0m
      [37m+# that are not reading data from the server fast enough for some reason (a[0m
      [37m+# common reason is that a Pub/Sub client can't consume messages as fast as the[0m
      [37m+# publisher can produce them).[0m
      [37m+#[0m
      [37m+# The limit can be set differently for the three different classes of clients:[0m
      [37m+#[0m
      [37m+# normal -> normal clients including MONITOR clients[0m
      [37m+# replica  -> replica clients[0m
      [37m+# pubsub -> clients subscribed to at least one pubsub channel or pattern[0m
      [37m+#[0m
      [37m+# The syntax of every client-output-buffer-limit directive is the following:[0m
      [37m+#[0m
      [37m+# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>[0m
      [37m+#[0m
      [37m+# A client is immediately disconnected once the hard limit is reached, or if[0m
      [37m+# the soft limit is reached and remains reached for the specified number of[0m
      [37m+# seconds (continuously).[0m
      [37m+# So for instance if the hard limit is 32 megabytes and the soft limit is[0m
      [37m+# 16 megabytes / 10 seconds, the client will get disconnected immediately[0m
      [37m+# if the size of the output buffers reach 32 megabytes, but will also get[0m
      [37m+# disconnected if the client reaches 16 megabytes and continuously overcomes[0m
      [37m+# the limit for 10 seconds.[0m
      [37m+#[0m
      [37m+# By default normal clients are not limited because they don't receive data[0m
      [37m+# without asking (in a push way), but just after a request, so only[0m
      [37m+# asynchronous clients may create a scenario where data is requested faster[0m
      [37m+# than it can read.[0m
      [37m+#[0m
      [37m+# Instead there is a default limit for pubsub and replica clients, since[0m
      [37m+# subscribers and replicas receive data in a push fashion.[0m
      [37m+#[0m
      [37m+# Both the hard or the soft limit can be disabled by setting them to zero.[0m
      [37m+client-output-buffer-limit normal 0 0 0[0m
      [37m+client-output-buffer-limit replica 256mb 64mb 60[0m
      [37m+client-output-buffer-limit pubsub 32mb 8mb 60[0m
      [37m+[0m
      [37m+# Redis calls an internal function to perform many background tasks, like[0m
      [37m+# closing connections of clients in timeout, purging expired keys that are[0m
      [37m+# never requested, and so forth.[0m
      [37m+#[0m
      [37m+# Not all tasks are performed with the same frequency, but Redis checks for[0m
      [37m+# tasks to perform according to the specified "hz" value.[0m
      [37m+#[0m
      [37m+# By default "hz" is set to 10. Raising the value will use more CPU when[0m
      [37m+# Redis is idle, but at the same time will make Redis more responsive when[0m
      [37m+# there are many keys expiring at the same time, and timeouts may be[0m
      [37m+# handled with more precision.[0m
      [37m+#[0m
      [37m+# The range is between 1 and 500, however a value over 100 is usually not[0m
      [37m+# a good idea. Most users should use the default of 10 and raise this up to[0m
      [37m+# 100 only in environments where very low latency is required.[0m
      [37m+hz 10[0m
      [37m+[0m
      [37m+# When a child rewrites the AOF file, if the following option is enabled[0m
      [37m+# the file will be fsync-ed every 32 MB of data generated. This is useful[0m
      [37m+# in order to commit the file to the disk more incrementally and avoid[0m
      [37m+# big latency spikes.[0m
      [37m+aof-rewrite-incremental-fsync yes[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'gitlab-redis'[0m
[0m  Recipe: <Dynamically Defined Resource>[0m
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis] action create
        [32m- create new directory /opt/gitlab/sv/redis[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * template[/opt/gitlab/sv/redis/run] action create
        [32m- create new file /opt/gitlab/sv/redis/run[0m
        [32m- update content in file /opt/gitlab/sv/redis/run from none to da365d[0m
        [37m--- /opt/gitlab/sv/redis/run	2022-05-01 19:51:32.014359876 +0000[0m
        [37m+++ /opt/gitlab/sv/redis/.chef-run20220501-32-9hc9rh	2022-05-01 19:51:32.014359876 +0000[0m
        [37m@@ -1,5 +1,10 @@[0m
        [37m+#!/bin/sh[0m
        [37m+exec 2>&1[0m
        [37m+[0m
        [37m+umask 077[0m
        [37m+exec chpst -P -U gitlab-redis:gitlab-redis -u gitlab-redis:gitlab-redis /opt/gitlab/embedded/bin/redis-server /var/opt/gitlab/redis/redis.conf[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * directory[/opt/gitlab/sv/redis/log] action create
        [32m- create new directory /opt/gitlab/sv/redis/log[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * directory[/opt/gitlab/sv/redis/log/main] action create
        [32m- create new directory /opt/gitlab/sv/redis/log/main[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * template[/opt/gitlab/sv/redis/log/config] action create
        [32m- create new file /opt/gitlab/sv/redis/log/config[0m
        [32m- update content in file /opt/gitlab/sv/redis/log/config from none to 623c00[0m
        [37m--- /opt/gitlab/sv/redis/log/config	2022-05-01 19:51:32.026360002 +0000[0m
        [37m+++ /opt/gitlab/sv/redis/log/.chef-config20220501-32-1tc0iua	2022-05-01 19:51:32.025359991 +0000[0m
        [37m@@ -1,6 +1,12 @@[0m
        [37m+s209715200[0m
        [37m+n30[0m
        [37m+t86400[0m
        [37m+!gzip[0m
        [37m+[0m
        [37m+[0m
        [32m- change mode from '' to '0644'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * ruby_block[verify_chown_persisted_on_redis] action create
        [32m- execute the ruby block verify_chown_persisted_on_redis[0m
[0m      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis/config] action create
        [32m- create symlink at /var/log/gitlab/redis/config to /opt/gitlab/sv/redis/log/config[0m
[0m      * template[/opt/gitlab/sv/redis/log/run] action create
        [32m- create new file /opt/gitlab/sv/redis/log/run[0m
        [32m- update content in file /opt/gitlab/sv/redis/log/run from none to af1017[0m
        [37m--- /opt/gitlab/sv/redis/log/run	2022-05-01 19:51:32.035360095 +0000[0m
        [37m+++ /opt/gitlab/sv/redis/log/.chef-run20220501-32-1qo6lk5	2022-05-01 19:51:32.035360095 +0000[0m
        [37m@@ -1,2 +1,4 @@[0m
        [37m+#!/bin/sh[0m
        [37m+exec svlogd -tt /var/log/gitlab/redis[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * directory[/opt/gitlab/sv/redis/env] action create
        [32m- create new directory /opt/gitlab/sv/redis/env[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis/control] action create
        [32m- create new directory /opt/gitlab/sv/redis/control[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * link[/opt/gitlab/init/redis] action create
        [32m- create symlink at /opt/gitlab/init/redis to /opt/gitlab/embedded/bin/sv[0m
[0m      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run (skipped due to only_if)
      * ruby_block[reload_log_service] action create
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/sv/redis] action create (up to date)
        * template[/opt/gitlab/sv/redis/run] action create (up to date)
        * directory[/opt/gitlab/sv/redis/log] action create (up to date)
        * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
        * template[/opt/gitlab/sv/redis/log/config] action create (up to date)
        * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
        * link[/var/log/gitlab/redis/config] action create (up to date)
        * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
        * directory[/opt/gitlab/sv/redis/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
        * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
        * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
        * directory[/opt/gitlab/sv/redis/control] action create (up to date)
        * link[/opt/gitlab/init/redis] action create (up to date)
        * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/service] action create (up to date)
        * link[/opt/gitlab/service/redis] action create
          [32m- create symlink at /opt/gitlab/service/redis to /opt/gitlab/sv/redis[0m
[0m        * ruby_block[wait for redis service socket] action run
          [32m- execute the ruby block wait for redis service socket[0m
[0m        [32m- execute the ruby block reload_log_service[0m
[0m      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/sv/redis] action create (up to date)
        * template[/opt/gitlab/sv/redis/run] action create (up to date)
        * directory[/opt/gitlab/sv/redis/log] action create (up to date)
        * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
        * template[/opt/gitlab/sv/redis/log/config] action create (up to date)
        * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
        * link[/var/log/gitlab/redis/config] action create (up to date)
        * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
        * directory[/opt/gitlab/sv/redis/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
        * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
        * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
        * directory[/opt/gitlab/sv/redis/control] action create (up to date)
        * link[/opt/gitlab/init/redis] action create (up to date)
        * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/service] action create (up to date)
        * link[/opt/gitlab/service/redis] action create (up to date)
        * ruby_block[wait for redis service socket] action run (skipped due to not_if)
        [32m- execute the ruby block restart_log_service[0m
[0m      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis] action create (up to date)
      * ruby_block[wait for redis service socket] action run (skipped due to not_if)
    
[0m    * execute[/opt/gitlab/bin/gitlab-ctl start redis] action run
      [execute] ok: run: redis: (pid 413) 2s
      [32m- execute /opt/gitlab/bin/gitlab-ctl start redis[0m
[0m    * ruby_block[warn pending redis restart] action run (skipped due to only_if)
  
[0mRecipe: redis::enable[0m
  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create
    [32m- create new file /opt/gitlab/etc/gitlab-redis-cli-rc[0m
    [32m- update content in file /opt/gitlab/etc/gitlab-redis-cli-rc from none to 44cac1[0m
    [37m--- /opt/gitlab/etc/gitlab-redis-cli-rc	2022-05-01 19:51:37.881421049 +0000[0m
    [37m+++ /opt/gitlab/etc/.chef-gitlab-redis-cli-rc20220501-32-17z6vxo	2022-05-01 19:51:37.881421049 +0000[0m
    [37m@@ -1,4 +1,8 @@[0m
    [37m+redis_dir='/var/opt/gitlab/redis'[0m
    [37m+redis_host='127.0.0.1'[0m
    [37m+redis_port='0'[0m
    [37m+redis_socket='/var/opt/gitlab/redis/redis.socket'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0mRecipe: gitaly::enable[0m
  * directory[/var/opt/gitlab/gitaly] action create
    [32m- create new directory /var/opt/gitlab/gitaly[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[/var/log/gitlab/gitaly] action create
    [32m- create new directory /var/log/gitlab/gitaly[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[/var/opt/gitlab/gitaly/internal_sockets] action create
    [32m- create new directory /var/opt/gitlab/gitaly/internal_sockets[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * env_dir[/opt/gitlab/etc/gitaly/env] action create
    * directory[/opt/gitlab/etc/gitaly/env] action create
      [32m- create new directory /opt/gitlab/etc/gitaly/env[0m
[0m    * file[/opt/gitlab/etc/gitaly/env/HOME] action create
      [32m- create new file /opt/gitlab/etc/gitaly/env/HOME[0m
      [32m- update content in file /opt/gitlab/etc/gitaly/env/HOME from none to 205bb9[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitaly/env/PATH] action create
      [32m- create new file /opt/gitlab/etc/gitaly/env/PATH[0m
      [32m- update content in file /opt/gitlab/etc/gitaly/env/PATH from none to d5dc07[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitaly/env/TZ] action create
      [32m- create new file /opt/gitlab/etc/gitaly/env/TZ[0m
      [32m- update content in file /opt/gitlab/etc/gitaly/env/TZ from none to 983a95[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create
      [32m- create new file /opt/gitlab/etc/gitaly/env/PYTHONPATH[0m
      [32m- update content in file /opt/gitlab/etc/gitaly/env/PYTHONPATH from none to 83b536[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create
      [32m- create new file /opt/gitlab/etc/gitaly/env/ICU_DATA[0m
      [32m- update content in file /opt/gitlab/etc/gitaly/env/ICU_DATA from none to a04260[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create
      [32m- create new file /opt/gitlab/etc/gitaly/env/SSL_CERT_DIR[0m
      [32m- update content in file /opt/gitlab/etc/gitaly/env/SSL_CERT_DIR from none to 4f45cf[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create
      [32m- create new file /opt/gitlab/etc/gitaly/env/GITALY_PID_FILE[0m
      [32m- update content in file /opt/gitlab/etc/gitaly/env/GITALY_PID_FILE from none to e82748[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create
      [32m- create new file /opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING[0m
      [32m- update content in file /opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING from none to b5bea4[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * template[Create Gitaly config.toml] action create
    [32m- create new file /var/opt/gitlab/gitaly/config.toml[0m
    [32m- update content in file /var/opt/gitlab/gitaly/config.toml from none to 9f6716[0m
    [37m--- /var/opt/gitlab/gitaly/config.toml	2022-05-01 19:51:37.997422258 +0000[0m
    [37m+++ /var/opt/gitlab/gitaly/.chef-config20220501-32-ip9eem.toml	2022-05-01 19:51:37.997422258 +0000[0m
    [37m@@ -1,43 +1,86 @@[0m
    [37m+# Gitaly configuration file[0m
    [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
    [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
    [37m+# and run:[0m
    [37m+# sudo gitlab-ctl reconfigure[0m
    [37m+[0m
    [37m+socket_path = '/var/opt/gitlab/gitaly/gitaly.socket'[0m
    [37m+[0m
    [37m+internal_socket_dir = '/var/opt/gitlab/gitaly/internal_sockets'[0m
    [37m+bin_dir = '/opt/gitlab/embedded/bin'[0m
    [37m+[0m
    [37m+[0m
    [37m+# Optional: export metrics via Prometheus[0m
    [37m+prometheus_listen_addr = 'localhost:9236'[0m
    [37m+[0m
    [37m+[0m
    [37m+[[storage]][0m
    [37m+name = 'default'[0m
    [37m+path = '/var/opt/gitlab/git-data/repositories'[0m
    [37m+[0m
    [37m+[logging][0m
    [37m+format = 'json'[0m
    [37m+dir = '/var/log/gitlab/gitaly'[0m
    [37m+[0m
    [37m+[0m
    [37m+[auth][0m
    [37m+[0m
    [37m+[git][0m
    [37m+[0m
    [37m+[0m
    [37m+[gitaly-ruby][0m
    [37m+dir = "/opt/gitlab/embedded/service/gitaly-ruby"[0m
    [37m+rugged_git_config_search_path = "/opt/gitlab/embedded/etc"[0m
    [37m+[0m
    [37m+[gitlab-shell][0m
    [37m+dir = "/opt/gitlab/embedded/service/gitlab-shell"[0m
    [37m+[0m
    [37m+[gitlab][0m
    [37m+url = 'http://127.0.0.1:8080'[0m
    [37m+[0m
    [37m+[hooks][0m
    [37m+[0m
    [37m+[0m
    [32m- change mode from '' to '0640'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'git'[0m
[0m  * service[gitaly] action nothing (skipped due to action :nothing)
  * runit_service[gitaly] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitaly] action create
      [32m- create new directory /opt/gitlab/sv/gitaly[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/gitaly/run] action create
      [32m- create new file /opt/gitlab/sv/gitaly/run[0m
      [32m- update content in file /opt/gitlab/sv/gitaly/run from none to 1a05c2[0m
      [37m--- /opt/gitlab/sv/gitaly/run	2022-05-01 19:51:38.017422467 +0000[0m
      [37m+++ /opt/gitlab/sv/gitaly/.chef-run20220501-32-40zwpb	2022-05-01 19:51:38.017422467 +0000[0m
      [37m@@ -1,18 +1,36 @@[0m
      [37m+#!/bin/sh[0m
      [37m+[0m
      [37m+# Attempt to change ulimit before the set -e flag, ignore failures[0m
      [37m+ulimit -n 15000[0m
      [37m+[0m
      [37m+set -e # fail on errors[0m
      [37m+[0m
      [37m+# Redirect stderr -> stdout[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+[0m
      [37m+[0m
      [37m+cd /var/opt/gitlab/gitaly[0m
      [37m+[0m
      [37m+exec chpst -e /opt/gitlab/etc/gitaly/env -P \[0m
      [37m+  -U git:git \[0m
      [37m+  -u git:git \[0m
      [37m+  /opt/gitlab/embedded/bin/gitaly-wrapper /opt/gitlab/embedded/bin/gitaly /var/opt/gitlab/gitaly/config.toml[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitaly/log] action create
      [32m- create new directory /opt/gitlab/sv/gitaly/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitaly/log/main] action create
      [32m- create new directory /opt/gitlab/sv/gitaly/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/gitaly/log/config] action create
      [32m- create new file /opt/gitlab/sv/gitaly/log/config[0m
      [32m- update content in file /opt/gitlab/sv/gitaly/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/gitaly/log/config	2022-05-01 19:51:38.030422602 +0000[0m
      [37m+++ /opt/gitlab/sv/gitaly/log/.chef-config20220501-32-1ken43b	2022-05-01 19:51:38.030422602 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_gitaly] action create
      [32m- execute the ruby block verify_chown_persisted_on_gitaly[0m
[0m    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitaly/config] action create
      [32m- create symlink at /var/log/gitlab/gitaly/config to /opt/gitlab/sv/gitaly/log/config[0m
[0m    * template[/opt/gitlab/sv/gitaly/log/run] action create
      [32m- create new file /opt/gitlab/sv/gitaly/log/run[0m
      [32m- update content in file /opt/gitlab/sv/gitaly/log/run from none to fa6dcc[0m
      [37m--- /opt/gitlab/sv/gitaly/log/run	2022-05-01 19:51:38.041422717 +0000[0m
      [37m+++ /opt/gitlab/sv/gitaly/log/.chef-run20220501-32-z9196	2022-05-01 19:51:38.041422717 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd /var/log/gitlab/gitaly[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitaly/env] action create
      [32m- create new directory /opt/gitlab/sv/gitaly/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitaly/control] action create
      [32m- create new directory /opt/gitlab/sv/gitaly/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/gitaly] action create
      [32m- create symlink at /opt/gitlab/init/gitaly to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitaly] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitaly/config] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
      * link[/opt/gitlab/init/gitaly] action create (up to date)
      * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitaly] action create
        [32m- create symlink at /opt/gitlab/service/gitaly to /opt/gitlab/sv/gitaly[0m
[0m      * ruby_block[wait for gitaly service socket] action run
        [32m- execute the ruby block wait for gitaly service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitaly] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitaly/config] action create (up to date)
      * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
      * link[/opt/gitlab/init/gitaly] action create (up to date)
      * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitaly] action create (up to date)
      * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitaly] action create (up to date)
    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)
  
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start gitaly] action run
    [execute] ok: run: gitaly: (pid 433) 2s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start gitaly[0m
[0m  * version_file[Create version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/VERSION] action create
      [32m- create new file /var/opt/gitlab/gitaly/VERSION[0m
      [32m- update content in file /var/opt/gitlab/gitaly/VERSION from none to 3f1ef1[0m
      [37m--- /var/opt/gitlab/gitaly/VERSION	2022-05-01 19:51:43.967484502 +0000[0m
      [37m+++ /var/opt/gitlab/gitaly/.chef-VERSION20220501-32-1mot36c	2022-05-01 19:51:43.967484502 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+Gitaly, version 13.4.1[0m
[0m  
[0m  * consul_service[gitaly] action delete
    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)
     (up to date)
Recipe: praefect::disable[0m
  * service[praefect] action nothing (skipped due to action :nothing)
  * runit_service[praefect] action disable
    * ruby_block[disable praefect] action run (skipped due to only_if)
     (up to date)
  * consul_service[praefect] action delete
    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)
     (up to date)
Recipe: postgresql::user[0m
  * account[Postgresql user and group] action create (up to date)
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * file[/var/opt/gitlab/postgresql/.profile] action create
    [32m- update content in file /var/opt/gitlab/postgresql/.profile from d8c4ba to 3b0387[0m
    [37m--- /var/opt/gitlab/postgresql/.profile	2019-07-12 19:26:32.000000000 +0000[0m
    [37m+++ /var/opt/gitlab/postgresql/.chef-.profile20220501-32-1fp06vc.profile	2022-05-01 19:51:43.994484784 +0000[0m
    [37m@@ -1,21 +1,2 @@[0m
    [37m-# ~/.profile: executed by the command interpreter for login shells.[0m
    [37m-# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login[0m
    [37m-# exists.[0m
    [37m-# see /usr/share/doc/bash/examples/startup-files for examples.[0m
    [37m-# the files are located in the bash-doc package.[0m
    [37m-[0m
    [37m-# the default umask is set in /etc/profile; for setting the umask[0m
    [37m-# for ssh logins, install and configure the libpam-umask package.[0m
    [37m-#umask 022[0m
    [37m-[0m
    [37m-# if running bash[0m
    [37m-if [ -n "$BASH_VERSION" ]; then[0m
    [37m-    # include .bashrc if it exists[0m
    [37m-    if [ -f "$HOME/.bashrc" ]; then[0m
    [37m-	. "$HOME/.bashrc"[0m
    [37m-    fi[0m
    [37m-fi[0m
    [37m-[0m
    [37m-# set PATH so it includes user's private bin directories[0m
    [37m-PATH="$HOME/bin:$HOME/.local/bin:$PATH"[0m
    [37m+PATH=/opt/gitlab/embedded/bin:/opt/gitlab/bin:$PATH[0m
    [32m- change mode from '0644' to '0600'[0m
[0mRecipe: postgresql::enable[0m
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create
    [32m- create new directory /var/opt/gitlab/postgresql/data[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-psql'[0m
[0m  * directory[/var/log/gitlab/postgresql] action create
    [32m- create new directory /var/log/gitlab/postgresql[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-psql'[0m
[0m  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * link[/var/opt/gitlab/postgresql/data] action create (skipped due to not_if)
  * gitlab_sysctl[kernel.shmmax] action create
    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create
      [32m- create new file /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf[0m
      [32m- update content in file /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf from none to 75a195[0m
      [37m--- /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf	2022-05-01 19:51:44.016485013 +0000[0m
      [37m+++ /opt/gitlab/embedded/etc/.chef-90-omnibus-gitlab-kernel20220501-32-1nebfpu.shmmax.conf	2022-05-01 19:51:44.016485013 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+kernel.shmmax = 17179869184[0m
[0m    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create
      [32m- create symlink at /etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf to /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf[0m
[0m    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)
    * execute[load sysctl conf kernel.shmmax] action run
      [execute] sysctl: setting key "kernel.shmmax": Read-only file system
      [32m- execute sysctl -e -p /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf[0m
[0m  
[0m  * gitlab_sysctl[kernel.shmall] action create
    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create
      [32m- create new file /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf[0m
      [32m- update content in file /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf from none to 6d765d[0m
      [37m--- /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf	2022-05-01 19:51:44.032485180 +0000[0m
      [37m+++ /opt/gitlab/embedded/etc/.chef-90-omnibus-gitlab-kernel20220501-32-1d3rd0w.shmall.conf	2022-05-01 19:51:44.032485180 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+kernel.shmall = 4194304[0m
[0m    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create
      [32m- create symlink at /etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf to /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf[0m
[0m    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)
    * execute[load sysctl conf kernel.shmall] action run
      [execute] sysctl: setting key "kernel.shmall": Read-only file system
      [32m- execute sysctl -e -p /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf[0m
[0m  
[0m  * gitlab_sysctl[kernel.sem] action create
    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create
      [32m- create new file /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf[0m
      [32m- update content in file /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf from none to 09a346[0m
      [37m--- /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf	2022-05-01 19:51:44.048485347 +0000[0m
      [37m+++ /opt/gitlab/embedded/etc/.chef-90-omnibus-gitlab-kernel20220501-32-qpomho.sem.conf	2022-05-01 19:51:44.048485347 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+kernel.sem = 250 32000 32 262[0m
[0m    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create
      [32m- create symlink at /etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf to /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf[0m
[0m    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)
    * execute[load sysctl conf kernel.sem] action run
      [execute] sysctl: setting key "kernel.sem": Read-only file system
      [32m- execute sysctl -e -p /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf[0m
[0m  
[0m  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run
    [execute] The files belonging to this database system will be owned by user "gitlab-psql".
              This user must also own the server process.
              
              The database cluster will be initialized with locale "C.UTF-8".
              The default text search configuration will be set to "english".
              
              Data page checksums are disabled.
              
              fixing permissions on existing directory /var/opt/gitlab/postgresql/data ... ok
              creating subdirectories ... ok
              selecting default max_connections ... 100
              selecting default shared_buffers ... 128MB
              selecting default timezone ... Etc/UTC
              selecting dynamic shared memory implementation ... posix
              creating configuration files ... ok
              running bootstrap script ... ok
              performing post-bootstrap initialization ... ok
              syncing data to disk ... ok
              
              Success. You can now start the database server using:
              
                  /opt/gitlab/embedded/bin/pg_ctl -D /var/opt/gitlab/postgresql/data -l logfile start
              
              
              WARNING: enabling "trust" authentication for local connections
              You can change this by editing pg_hba.conf or using the option -A, or
              --auth-local and --auth-host, the next time you run initdb.
    [32m- execute /opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8[0m
[0m  * template[/opt/gitlab/etc/gitlab-psql-rc] action create
    [32m- create new file /opt/gitlab/etc/gitlab-psql-rc[0m
    [32m- update content in file /opt/gitlab/etc/gitlab-psql-rc from none to b7b8fc[0m
    [37m--- /opt/gitlab/etc/gitlab-psql-rc	2022-05-01 19:51:44.517490237 +0000[0m
    [37m+++ /opt/gitlab/etc/.chef-gitlab-psql-rc20220501-32-ua3n77	2022-05-01 19:51:44.517490237 +0000[0m
    [37m@@ -1,5 +1,10 @@[0m
    [37m+psql_user='gitlab-psql'[0m
    [37m+psql_group='gitlab-psql'[0m
    [37m+psql_host='/var/opt/gitlab/postgresql'[0m
    [37m+psql_port='5432'[0m
    [37m+psql_dbname='gitlabhq_production'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0m  * file[/var/opt/gitlab/postgresql/data/server.crt] action create
    [32m- create new file /var/opt/gitlab/postgresql/data/server.crt[0m
    [32m- update content in file /var/opt/gitlab/postgresql/data/server.crt from none to 84e5b0[0m
    [32m- suppressed sensitive resource[0m
    [32m- change mode from '' to '0400'[0m
    [32m- change owner from '' to 'gitlab-psql'[0m
    [32m- change group from '' to 'gitlab-psql'[0m
[0m  * file[/var/opt/gitlab/postgresql/data/server.key] action create
    [32m- create new file /var/opt/gitlab/postgresql/data/server.key[0m
    [32m- update content in file /var/opt/gitlab/postgresql/data/server.key from none to 3cbee0[0m
    [32m- suppressed sensitive resource[0m
    [32m- change mode from '' to '0400'[0m
    [32m- change owner from '' to 'gitlab-psql'[0m
    [32m- change group from '' to 'gitlab-psql'[0m
[0m  * postgresql_config[gitlab] action create
    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create
      [32m- update content in file /var/opt/gitlab/postgresql/data/postgresql.conf from ffa0a9 to f62f9d[0m
      [37m--- /var/opt/gitlab/postgresql/data/postgresql.conf	2022-05-01 19:51:44.079485670 +0000[0m
      [37m+++ /var/opt/gitlab/postgresql/data/.chef-postgresql20220501-32-1jske7d.conf	2022-05-01 19:51:44.559490675 +0000[0m
      [37m@@ -1,3 +1,7 @@[0m
      [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
      [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
      [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
      [37m+[0m
      [37m # -----------------------------[0m
      [37m # PostgreSQL configuration file[0m
      [37m # -----------------------------[0m
      [37m@@ -16,9 +20,9 @@[0m
      [37m #[0m
      [37m # This file is read on server startup and when the server receives a SIGHUP[0m
      [37m # signal.  If you edit the file on a running system, you have to SIGHUP the[0m
      [37m-# server for the changes to take effect, run "pg_ctl reload", or execute[0m
      [37m-# "SELECT pg_reload_conf()".  Some parameters, which are marked below,[0m
      [37m-# require a server shutdown and restart to take effect.[0m
      [37m+# server for the changes to take effect, or use "pg_ctl reload".  Some[0m
      [37m+# parameters, which are marked below, require a server shutdown and restart to[0m
      [37m+# take effect.[0m
      [37m #[0m
      [37m # Any parameter can also be given as a command-line option to the server, e.g.,[0m
      [37m # "postgres -c log_connections=on".  Some parameters can be changed at run time[0m
      [37m@@ -27,7 +31,7 @@[0m
      [37m # Memory units:  kB = kilobytes        Time units:  ms  = milliseconds[0m
      [37m #                MB = megabytes                     s   = seconds[0m
      [37m #                GB = gigabytes                     min = minutes[0m
      [37m-#                TB = terabytes                     h   = hours[0m
      [37m+#                                                   h   = hours[0m
      [37m #                                                   d   = days[0m
      [37m [0m
      [37m [0m
      [37m@@ -38,16 +42,16 @@[0m
      [37m # The default values of these variables are driven from the -D command-line[0m
      [37m # option or PGDATA environment variable, represented here as ConfigDir.[0m
      [37m [0m
      [37m-#data_directory = 'ConfigDir'		# use data in another directory[0m
      [37m-					# (change requires restart)[0m
      [37m-#hba_file = 'ConfigDir/pg_hba.conf'	# host-based authentication file[0m
      [37m-					# (change requires restart)[0m
      [37m-#ident_file = 'ConfigDir/pg_ident.conf'	# ident configuration file[0m
      [37m-					# (change requires restart)[0m
      [37m+#data_directory = 'ConfigDir'   # use data in another directory[0m
      [37m+          # (change requires restart)[0m
      [37m+#hba_file = 'ConfigDir/pg_hba.conf' # host-based authentication file[0m
      [37m+          # (change requires restart)[0m
      [37m+#ident_file = 'ConfigDir/pg_ident.conf' # ident configuration file[0m
      [37m+          # (change requires restart)[0m
      [37m [0m
      [37m # If external_pid_file is not explicitly set, no extra PID file is written.[0m
      [37m-#external_pid_file = ''			# write an extra PID file[0m
      [37m-					# (change requires restart)[0m
      [37m+#external_pid_file = '(none)'   # write an extra PID file[0m
      [37m+          # (change requires restart)[0m
      [37m [0m
      [37m [0m
      [37m #------------------------------------------------------------------------------[0m
      [37m@@ -56,56 +60,57 @@[0m
      [37m [0m
      [37m # - Connection Settings -[0m
      [37m [0m
      [37m-#listen_addresses = 'localhost'		# what IP address(es) to listen on;[0m
      [37m-					# comma-separated list of addresses;[0m
      [37m-					# defaults to 'localhost'; use '*' for all[0m
      [37m-					# (change requires restart)[0m
      [37m-#port = 5432				# (change requires restart)[0m
      [37m-max_connections = 100			# (change requires restart)[0m
      [37m-#superuser_reserved_connections = 3	# (change requires restart)[0m
      [37m-#unix_socket_directories = '/tmp'	# comma-separated list of directories[0m
      [37m-					# (change requires restart)[0m
      [37m-#unix_socket_group = ''			# (change requires restart)[0m
      [37m-#unix_socket_permissions = 0777		# begin with 0 to use octal notation[0m
      [37m-					# (change requires restart)[0m
      [37m-#bonjour = off				# advertise server via Bonjour[0m
      [37m-					# (change requires restart)[0m
      [37m-#bonjour_name = ''			# defaults to the computer name[0m
      [37m-					# (change requires restart)[0m
      [37m+listen_addresses = ''    # what IP address(es) to listen on;[0m
      [37m+          # comma-separated list of addresses;[0m
      [37m+          # defaults to 'localhost', '*' = all[0m
      [37m+          # (change requires restart)[0m
      [37m+port = 5432        # (change requires restart)[0m
      [37m+max_connections = 200      # (change requires restart)[0m
      [37m+# Note:  Increasing max_connections costs ~400 bytes of shared memory per[0m
      [37m+# connection slot, plus lock space (see max_locks_per_transaction).[0m
      [37m+#superuser_reserved_connections = 3 # (change requires restart)[0m
      [37m+unix_socket_directories = '/var/opt/gitlab/postgresql'   # (change requires restart)[0m
      [37m+#unix_socket_group = ''     # (change requires restart)[0m
      [37m+#unix_socket_permissions = 0777   # begin with 0 to use octal notation[0m
      [37m+          # (change requires restart)[0m
      [37m+#bonjour = off        # advertise server via Bonjour[0m
      [37m+          # (change requires restart)[0m
      [37m+#bonjour_name = ''      # defaults to the computer name[0m
      [37m+          # (change requires restart)[0m
      [37m [0m
      [37m-# - TCP Keepalives -[0m
      [37m-# see "man 7 tcp" for details[0m
      [37m+# - Security and Authentication -[0m
      [37m [0m
      [37m-#tcp_keepalives_idle = 0		# TCP_KEEPIDLE, in seconds;[0m
      [37m-					# 0 selects the system default[0m
      [37m-#tcp_keepalives_interval = 0		# TCP_KEEPINTVL, in seconds;[0m
      [37m-					# 0 selects the system default[0m
      [37m-#tcp_keepalives_count = 0		# TCP_KEEPCNT;[0m
      [37m-					# 0 selects the system default[0m
      [37m+#authentication_timeout = 1min    # 1s-600s[0m
      [37m [0m
      [37m-# - Authentication -[0m
      [37m+# change requires restart[0m
      [37m+ssl = on[0m
      [37m [0m
      [37m-#authentication_timeout = 1min		# 1s-600s[0m
      [37m-#password_encryption = md5		# md5 or scram-sha-256[0m
      [37m+# allowed SSL ciphers[0m
      [37m+ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL:!SSLv3:!TLSv1'[0m
      [37m+[0m
      [37m+ssl_cert_file = 'server.crt'[0m
      [37m+ssl_key_file = 'server.key'[0m
      [37m+ssl_ca_file = '/opt/gitlab/embedded/ssl/certs/cacert.pem'[0m
      [37m+[0m
      [37m+[0m
      [37m+#ssl_renegotiation_limit = 512MB  # amount of data between renegotiations[0m
      [37m+#password_encryption = on[0m
      [37m #db_user_namespace = off[0m
      [37m [0m
      [37m-# GSSAPI using Kerberos[0m
      [37m+# Kerberos and GSSAPI[0m
      [37m #krb_server_keyfile = ''[0m
      [37m+#krb_srvname = 'postgres'   # (Kerberos only)[0m
      [37m #krb_caseins_users = off[0m
      [37m [0m
      [37m-# - SSL -[0m
      [37m+# - TCP Keepalives -[0m
      [37m+# see "man 7 tcp" for details[0m
      [37m [0m
      [37m-#ssl = off[0m
      [37m-#ssl_ca_file = ''[0m
      [37m-#ssl_cert_file = 'server.crt'[0m
      [37m-#ssl_crl_file = ''[0m
      [37m-#ssl_key_file = 'server.key'[0m
      [37m-#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers[0m
      [37m-#ssl_prefer_server_ciphers = on[0m
      [37m-#ssl_ecdh_curve = 'prime256v1'[0m
      [37m-#ssl_dh_params_file = ''[0m
      [37m-#ssl_passphrase_command = ''[0m
      [37m-#ssl_passphrase_command_supports_reload = off[0m
      [37m+#tcp_keepalives_idle = 0    # TCP_KEEPIDLE, in seconds;[0m
      [37m+          # 0 selects the system default[0m
      [37m+#tcp_keepalives_interval = 0    # TCP_KEEPINTVL, in seconds;[0m
      [37m+          # 0 selects the system default[0m
      [37m+#tcp_keepalives_count = 0   # TCP_KEEPCNT;[0m
      [37m+          # 0 selects the system default[0m
      [37m [0m
      [37m [0m
      [37m #------------------------------------------------------------------------------[0m
      [37m@@ -114,179 +119,104 @@[0m
      [37m [0m
      [37m # - Memory -[0m
      [37m [0m
      [37m-shared_buffers = 128MB			# min 128kB[0m
      [37m-					# (change requires restart)[0m
      [37m-#huge_pages = try			# on, off, or try[0m
      [37m-					# (change requires restart)[0m
      [37m-#temp_buffers = 8MB			# min 800kB[0m
      [37m-#max_prepared_transactions = 0		# zero disables the feature[0m
      [37m-					# (change requires restart)[0m
      [37m-# Caution: it is not advisable to set max_prepared_transactions nonzero unless[0m
      [37m-# you actively intend to use prepared transactions.[0m
      [37m-#work_mem = 4MB				# min 64kB[0m
      [37m-#maintenance_work_mem = 64MB		# min 1MB[0m
      [37m-#autovacuum_work_mem = -1		# min 1MB, or -1 to use maintenance_work_mem[0m
      [37m-#max_stack_depth = 2MB			# min 100kB[0m
      [37m-dynamic_shared_memory_type = posix	# the default is the first option[0m
      [37m-					# supported by the operating system:[0m
      [37m-					#   posix[0m
      [37m-					#   sysv[0m
      [37m-					#   windows[0m
      [37m-					#   mmap[0m
      [37m-					# use none to disable dynamic shared memory[0m
      [37m-					# (change requires restart)[0m
      [37m+shared_buffers = 1MB # min 128kB[0m
      [37m+          # (change requires restart)[0m
      [37m+#temp_buffers = 8MB     # min 800kB[0m
      [37m+#max_prepared_transactions = 0    # zero disables the feature[0m
      [37m+          # (change requires restart)[0m
      [37m+# Note:  Increasing max_prepared_transactions costs ~600 bytes of shared memory[0m
      [37m+# per transaction slot, plus lock space (see max_locks_per_transaction).[0m
      [37m+# It is not advisable to set max_prepared_transactions nonzero unless you[0m
      [37m+# actively intend to use prepared transactions.[0m
      [37m+#max_stack_depth = 2MB      # min 100kB[0m
      [37m [0m
      [37m-# - Disk -[0m
      [37m+# - Kernel Resource Usage -[0m
      [37m [0m
      [37m-#temp_file_limit = -1			# limits per-process temp file space[0m
      [37m-					# in kB, or -1 for no limit[0m
      [37m+#max_files_per_process = 1000   # min 25[0m
      [37m+          # (change requires restart)[0m
      [37m+shared_preload_libraries = ''    # (change requires restart)[0m
      [37m [0m
      [37m-# - Kernel Resources -[0m
      [37m-[0m
      [37m-#max_files_per_process = 1000		# min 25[0m
      [37m-					# (change requires restart)[0m
      [37m-[0m
      [37m # - Cost-Based Vacuum Delay -[0m
      [37m [0m
      [37m-#vacuum_cost_delay = 0			# 0-100 milliseconds[0m
      [37m-#vacuum_cost_page_hit = 1		# 0-10000 credits[0m
      [37m-#vacuum_cost_page_miss = 10		# 0-10000 credits[0m
      [37m-#vacuum_cost_page_dirty = 20		# 0-10000 credits[0m
      [37m-#vacuum_cost_limit = 200		# 1-10000 credits[0m
      [37m+#vacuum_cost_delay = 0ms    # 0-100 milliseconds[0m
      [37m+#vacuum_cost_page_hit = 1   # 0-10000 credits[0m
      [37m+#vacuum_cost_page_miss = 10   # 0-10000 credits[0m
      [37m+#vacuum_cost_page_dirty = 20    # 0-10000 credits[0m
      [37m+#vacuum_cost_limit = 200    # 1-10000 credits[0m
      [37m [0m
      [37m # - Background Writer -[0m
      [37m [0m
      [37m-#bgwriter_delay = 200ms			# 10-10000ms between rounds[0m
      [37m-#bgwriter_lru_maxpages = 100		# max buffers written/round, 0 disables[0m
      [37m-#bgwriter_lru_multiplier = 2.0		# 0-10.0 multiplier on buffers scanned/round[0m
      [37m-#bgwriter_flush_after = 512kB		# measured in pages, 0 disables[0m
      [37m+#bgwriter_delay = 200ms     # 10-10000ms between rounds[0m
      [37m+#bgwriter_lru_maxpages = 100    # 0-1000 max buffers written/round[0m
      [37m+#bgwriter_lru_multiplier = 2.0    # 0-10.0 multipler on buffers scanned/round[0m
      [37m [0m
      [37m # - Asynchronous Behavior -[0m
      [37m [0m
      [37m-#effective_io_concurrency = 1		# 1-1000; 0 disables prefetching[0m
      [37m-#max_worker_processes = 8		# (change requires restart)[0m
      [37m-#max_parallel_maintenance_workers = 2	# taken from max_parallel_workers[0m
      [37m-#max_parallel_workers_per_gather = 2	# taken from max_parallel_workers[0m
      [37m-#parallel_leader_participation = on[0m
      [37m-#max_parallel_workers = 8		# maximum number of max_worker_processes that[0m
      [37m-					# can be used in parallel operations[0m
      [37m-#old_snapshot_threshold = -1		# 1min-60d; -1 disables; 0 is immediate[0m
      [37m-					# (change requires restart)[0m
      [37m-#backend_flush_after = 0		# measured in pages, 0 disables[0m
      [37m+#effective_io_concurrency = 1   # 1-1000. 0 disables prefetching[0m
      [37m [0m
      [37m [0m
      [37m #------------------------------------------------------------------------------[0m
      [37m-# WRITE-AHEAD LOG[0m
      [37m+# WRITE AHEAD LOG[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m # - Settings -[0m
      [37m [0m
      [37m-#wal_level = replica			# minimal, replica, or logical[0m
      [37m-					# (change requires restart)[0m
      [37m-#fsync = on				# flush data to disk for crash safety[0m
      [37m-					# (turning this off can cause[0m
      [37m-					# unrecoverable data corruption)[0m
      [37m-#synchronous_commit = on		# synchronization level;[0m
      [37m-					# off, local, remote_write, remote_apply, or on[0m
      [37m-#wal_sync_method = fsync		# the default is the first option[0m
      [37m-					# supported by the operating system:[0m
      [37m-					#   open_datasync[0m
      [37m-					#   fdatasync (default on Linux)[0m
      [37m-					#   fsync[0m
      [37m-					#   fsync_writethrough[0m
      [37m-					#   open_sync[0m
      [37m-#full_page_writes = on			# recover from partial page writes[0m
      [37m-#wal_compression = off			# enable compression of full-page writes[0m
      [37m-#wal_log_hints = off			# also do full page writes of non-critical updates[0m
      [37m-					# (change requires restart)[0m
      [37m-#wal_buffers = -1			# min 32kB, -1 sets based on shared_buffers[0m
      [37m-					# (change requires restart)[0m
      [37m-#wal_writer_delay = 200ms		# 1-10000 milliseconds[0m
      [37m-#wal_writer_flush_after = 1MB		# measured in pages, 0 disables[0m
      [37m+wal_level = minimal[0m
      [37m+          # (change requires restart)[0m
      [37m+#fsync = on       # turns forced synchronization on or off[0m
      [37m+#wal_sync_method = fsync    # the default is the first option[0m
      [37m+          # supported by the operating system:[0m
      [37m+          #   open_datasync[0m
      [37m+          #   fdatasync (default on Linux)[0m
      [37m+          #   fsync[0m
      [37m+          #   fsync_writethrough[0m
      [37m+          #   open_sync[0m
      [37m+#full_page_writes = on      # recover from partial page writes[0m
      [37m+wal_buffers = -1 # -1     # min 32kB, -1 sets based on shared_buffers[0m
      [37m+          # (change requires restart)[0m
      [37m+#wal_writer_delay = 200ms   # 1-10000 milliseconds[0m
      [37m [0m
      [37m-#commit_delay = 0			# range 0-100000, in microseconds[0m
      [37m-#commit_siblings = 5			# range 1-1000[0m
      [37m+#commit_delay = 0     # range 0-100000, in microseconds[0m
      [37m+#commit_siblings = 5      # range 1-1000[0m
      [37m [0m
      [37m-# - Checkpoints -[0m
      [37m-[0m
      [37m-#checkpoint_timeout = 5min		# range 30s-1d[0m
      [37m-max_wal_size = 1GB[0m
      [37m min_wal_size = 80MB[0m
      [37m-#checkpoint_completion_target = 0.5	# checkpoint target duration, 0.0 - 1.0[0m
      [37m-#checkpoint_flush_after = 256kB		# measured in pages, 0 disables[0m
      [37m-#checkpoint_warning = 30s		# 0 disables[0m
      [37m+max_wal_size = 1GB[0m
      [37m [0m
      [37m-# - Archiving -[0m
      [37m+# The number of replication slots to reserve.[0m
      [37m+max_replication_slots = 0[0m
      [37m [0m
      [37m-#archive_mode = off		# enables archiving; off, on, or always[0m
      [37m-				# (change requires restart)[0m
      [37m-#archive_command = ''		# command to use to archive a logfile segment[0m
      [37m-				# placeholders: %p = path of file to archive[0m
      [37m-				#               %f = file name only[0m
      [37m-				# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'[0m
      [37m-#archive_timeout = 0		# force a logfile segment switch after this[0m
      [37m-				# number of seconds; 0 disables[0m
      [37m [0m
      [37m+# - Archiving -[0m
      [37m [0m
      [37m+archive_mode = off   # allows archiving to be done[0m
      [37m+        # (change requires restart, also requires 'wal_level' of 'hot_standby' OR 'replica')[0m
      [37m+[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m # REPLICATION[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m-# - Sending Servers -[0m
      [37m-[0m
      [37m-# Set these on the master and on any standby that will send replication data.[0m
      [37m-[0m
      [37m-#max_wal_senders = 10		# max number of walsender processes[0m
      [37m-				# (change requires restart)[0m
      [37m-#wal_keep_segments = 0		# in logfile segments; 0 disables[0m
      [37m-#wal_sender_timeout = 60s	# in milliseconds; 0 disables[0m
      [37m-[0m
      [37m-#max_replication_slots = 10	# max number of replication slots[0m
      [37m-				# (change requires restart)[0m
      [37m-#track_commit_timestamp = off	# collect timestamp of transaction commit[0m
      [37m-				# (change requires restart)[0m
      [37m-[0m
      [37m # - Master Server -[0m
      [37m [0m
      [37m-# These settings are ignored on a standby server.[0m
      [37m+# These settings are ignored on a standby server[0m
      [37m [0m
      [37m-#synchronous_standby_names = ''	# standby servers that provide sync rep[0m
      [37m-				# method to choose sync standbys, number of sync standbys,[0m
      [37m-				# and comma-separated list of application_name[0m
      [37m-				# from standby(s); '*' = all[0m
      [37m-#vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed[0m
      [37m+max_wal_senders = 0[0m
      [37m+        # (change requires restart)[0m
      [37m+#wal_sender_delay = 1s    # walsender cycle time, 1-10000 milliseconds[0m
      [37m+#vacuum_defer_cleanup_age = 0 # number of xacts by which cleanup is delayed[0m
      [37m+#replication_timeout = 60s  # in milliseconds; 0 disables[0m
      [37m+#synchronous_standby_names = '' # standby servers that provide sync rep[0m
      [37m+        # comma-separated list of application_name[0m
      [37m+        # from standby(s); '*' = all[0m
      [37m [0m
      [37m # - Standby Servers -[0m
      [37m [0m
      [37m-# These settings are ignored on a master server.[0m
      [37m+# These settings are ignored on a master server[0m
      [37m [0m
      [37m-#hot_standby = on			# "off" disallows queries during recovery[0m
      [37m-					# (change requires restart)[0m
      [37m-#max_standby_archive_delay = 30s	# max delay before canceling queries[0m
      [37m-					# when reading WAL from archive;[0m
      [37m-					# -1 allows indefinite delay[0m
      [37m-#max_standby_streaming_delay = 30s	# max delay before canceling queries[0m
      [37m-					# when reading streaming WAL;[0m
      [37m-					# -1 allows indefinite delay[0m
      [37m-#wal_receiver_status_interval = 10s	# send replies at least this often[0m
      [37m-					# 0 disables[0m
      [37m-#hot_standby_feedback = off		# send info from standby to prevent[0m
      [37m-					# query conflicts[0m
      [37m-#wal_receiver_timeout = 60s		# time that receiver waits for[0m
      [37m-					# communication from master[0m
      [37m-					# in milliseconds; 0 disables[0m
      [37m-#wal_retrieve_retry_interval = 5s	# time to wait before retrying to[0m
      [37m-					# retrieve WAL after a failed attempt[0m
      [37m+hot_standby = off[0m
      [37m+          # (change requires restart)[0m
      [37m+#wal_receiver_status_interval = 10s # send replies at least this often[0m
      [37m+          # 0 disables[0m
      [37m [0m
      [37m-# - Subscribers -[0m
      [37m-[0m
      [37m-# These settings are ignored on a publisher.[0m
      [37m-[0m
      [37m-#max_logical_replication_workers = 4	# taken from max_worker_processes[0m
      [37m-					# (change requires restart)[0m
      [37m-#max_sync_workers_per_subscription = 2	# taken from max_logical_replication_workers[0m
      [37m-[0m
      [37m-[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m # QUERY TUNING[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m@@ -297,213 +227,126 @@[0m
      [37m #enable_hashagg = on[0m
      [37m #enable_hashjoin = on[0m
      [37m #enable_indexscan = on[0m
      [37m-#enable_indexonlyscan = on[0m
      [37m #enable_material = on[0m
      [37m #enable_mergejoin = on[0m
      [37m #enable_nestloop = on[0m
      [37m-#enable_parallel_append = on[0m
      [37m #enable_seqscan = on[0m
      [37m #enable_sort = on[0m
      [37m #enable_tidscan = on[0m
      [37m-#enable_partitionwise_join = off[0m
      [37m-#enable_partitionwise_aggregate = off[0m
      [37m-#enable_parallel_hash = on[0m
      [37m-#enable_partition_pruning = on[0m
      [37m [0m
      [37m # - Planner Cost Constants -[0m
      [37m [0m
      [37m-#seq_page_cost = 1.0			# measured on an arbitrary scale[0m
      [37m-#random_page_cost = 4.0			# same scale as above[0m
      [37m-#cpu_tuple_cost = 0.01			# same scale as above[0m
      [37m-#cpu_index_tuple_cost = 0.005		# same scale as above[0m
      [37m-#cpu_operator_cost = 0.0025		# same scale as above[0m
      [37m-#parallel_tuple_cost = 0.1		# same scale as above[0m
      [37m-#parallel_setup_cost = 1000.0	# same scale as above[0m
      [37m+#cpu_tuple_cost = 0.01      # same scale as above[0m
      [37m+#cpu_index_tuple_cost = 0.005   # same scale as above[0m
      [37m+#cpu_operator_cost = 0.0025   # same scale as above[0m
      [37m [0m
      [37m-#jit_above_cost = 100000		# perform JIT compilation if available[0m
      [37m-					# and query more expensive than this;[0m
      [37m-					# -1 disables[0m
      [37m-#jit_inline_above_cost = 500000		# inline small functions if query is[0m
      [37m-					# more expensive than this; -1 disables[0m
      [37m-#jit_optimize_above_cost = 500000	# use expensive JIT optimizations if[0m
      [37m-					# query is more expensive than this;[0m
      [37m-					# -1 disables[0m
      [37m-[0m
      [37m-#min_parallel_table_scan_size = 8MB[0m
      [37m-#min_parallel_index_scan_size = 512kB[0m
      [37m-#effective_cache_size = 4GB[0m
      [37m-[0m
      [37m # - Genetic Query Optimizer -[0m
      [37m [0m
      [37m #geqo = on[0m
      [37m #geqo_threshold = 12[0m
      [37m-#geqo_effort = 5			# range 1-10[0m
      [37m-#geqo_pool_size = 0			# selects default based on effort[0m
      [37m-#geqo_generations = 0			# selects default based on effort[0m
      [37m-#geqo_selection_bias = 2.0		# range 1.5-2.0[0m
      [37m-#geqo_seed = 0.0			# range 0.0-1.0[0m
      [37m+#geqo_effort = 5      # range 1-10[0m
      [37m+#geqo_pool_size = 0     # selects default based on effort[0m
      [37m+#geqo_generations = 0     # selects default based on effort[0m
      [37m+#geqo_selection_bias = 2.0    # range 1.5-2.0[0m
      [37m+#geqo_seed = 0.0      # range 0.0-1.0[0m
      [37m [0m
      [37m # - Other Planner Options -[0m
      [37m [0m
      [37m-#default_statistics_target = 100	# range 1-10000[0m
      [37m-#constraint_exclusion = partition	# on, off, or partition[0m
      [37m-#cursor_tuple_fraction = 0.1		# range 0.0-1.0[0m
      [37m+#default_statistics_target = 100  # range 1-10000[0m
      [37m+#constraint_exclusion = partition # on, off, or partition[0m
      [37m+#cursor_tuple_fraction = 0.1    # range 0.0-1.0[0m
      [37m #from_collapse_limit = 8[0m
      [37m-#join_collapse_limit = 8		# 1 disables collapsing of explicit[0m
      [37m-					# JOIN clauses[0m
      [37m-#force_parallel_mode = off[0m
      [37m-#jit = off				# allow JIT compilation[0m
      [37m+#join_collapse_limit = 8    # 1 disables collapsing of explicit[0m
      [37m+          # JOIN clauses[0m
      [37m [0m
      [37m [0m
      [37m #------------------------------------------------------------------------------[0m
      [37m-# REPORTING AND LOGGING[0m
      [37m+# ERROR REPORTING AND LOGGING[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m-# - Where to Log -[0m
      [37m [0m
      [37m-#log_destination = 'stderr'		# Valid values are combinations of[0m
      [37m-					# stderr, csvlog, syslog, and eventlog,[0m
      [37m-					# depending on platform.  csvlog[0m
      [37m-					# requires logging_collector to be on.[0m
      [37m-[0m
      [37m-# This is used when logging to stderr:[0m
      [37m-#logging_collector = off		# Enable capturing of stderr and csvlog[0m
      [37m-					# into log files. Required to be on for[0m
      [37m-					# csvlogs.[0m
      [37m-					# (change requires restart)[0m
      [37m-[0m
      [37m-# These are only used if logging_collector is on:[0m
      [37m-#log_directory = 'log'			# directory where log files are written,[0m
      [37m-					# can be absolute or relative to PGDATA[0m
      [37m-#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'	# log file name pattern,[0m
      [37m-					# can include strftime() escapes[0m
      [37m-#log_file_mode = 0600			# creation mode for log files,[0m
      [37m-					# begin with 0 to use octal notation[0m
      [37m-#log_truncate_on_rotation = off		# If on, an existing log file with the[0m
      [37m-					# same name as the new log file will be[0m
      [37m-					# truncated rather than appended to.[0m
      [37m-					# But such truncation only occurs on[0m
      [37m-					# time-driven rotation, not on restarts[0m
      [37m-					# or size-driven rotation.  Default is[0m
      [37m-					# off, meaning append to existing files[0m
      [37m-					# in all cases.[0m
      [37m-#log_rotation_age = 1d			# Automatic rotation of logfiles will[0m
      [37m-					# happen after that time.  0 disables.[0m
      [37m-#log_rotation_size = 10MB		# Automatic rotation of logfiles will[0m
      [37m-					# happen after that much log output.[0m
      [37m-					# 0 disables.[0m
      [37m-[0m
      [37m # These are relevant when logging to syslog:[0m
      [37m #syslog_facility = 'LOCAL0'[0m
      [37m #syslog_ident = 'postgres'[0m
      [37m-#syslog_sequence_numbers = on[0m
      [37m-#syslog_split_messages = on[0m
      [37m [0m
      [37m-# This is only relevant when logging to eventlog (win32):[0m
      [37m-# (change requires restart)[0m
      [37m-#event_source = 'PostgreSQL'[0m
      [37m+#silent_mode = off      # Run server silently.[0m
      [37m+          # DO NOT USE without syslog or[0m
      [37m+          # logging_collector[0m
      [37m+          # (change requires restart)[0m
      [37m [0m
      [37m+[0m
      [37m # - When to Log -[0m
      [37m [0m
      [37m-#log_min_messages = warning		# values in order of decreasing detail:[0m
      [37m-					#   debug5[0m
      [37m-					#   debug4[0m
      [37m-					#   debug3[0m
      [37m-					#   debug2[0m
      [37m-					#   debug1[0m
      [37m-					#   info[0m
      [37m-					#   notice[0m
      [37m-					#   warning[0m
      [37m-					#   error[0m
      [37m-					#   log[0m
      [37m-					#   fatal[0m
      [37m-					#   panic[0m
      [37m+#client_min_messages = notice   # values in order of decreasing detail:[0m
      [37m+          #   debug5[0m
      [37m+          #   debug4[0m
      [37m+          #   debug3[0m
      [37m+          #   debug2[0m
      [37m+          #   debug1[0m
      [37m+          #   log[0m
      [37m+          #   notice[0m
      [37m+          #   warning[0m
      [37m+          #   error[0m
      [37m [0m
      [37m-#log_min_error_statement = error	# values in order of decreasing detail:[0m
      [37m-					#   debug5[0m
      [37m-					#   debug4[0m
      [37m-					#   debug3[0m
      [37m-					#   debug2[0m
      [37m-					#   debug1[0m
      [37m-					#   info[0m
      [37m-					#   notice[0m
      [37m-					#   warning[0m
      [37m-					#   error[0m
      [37m-					#   log[0m
      [37m-					#   fatal[0m
      [37m-					#   panic (effectively off)[0m
      [37m+#log_min_messages = warning   # values in order of decreasing detail:[0m
      [37m+          #   debug5[0m
      [37m+          #   debug4[0m
      [37m+          #   debug3[0m
      [37m+          #   debug2[0m
      [37m+          #   debug1[0m
      [37m+          #   info[0m
      [37m+          #   notice[0m
      [37m+          #   warning[0m
      [37m+          #   error[0m
      [37m+          #   log[0m
      [37m+          #   fatal[0m
      [37m+          #   panic[0m
      [37m [0m
      [37m-#log_min_duration_statement = -1	# -1 is disabled, 0 logs all statements[0m
      [37m-					# and their durations, > 0 logs only[0m
      [37m-					# statements running at least this number[0m
      [37m-					# of milliseconds[0m
      [37m+#log_min_error_statement = error  # values in order of decreasing detail:[0m
      [37m+          #   debug5[0m
      [37m+          #   debug4[0m
      [37m+          #   debug3[0m
      [37m+          #   debug2[0m
      [37m+          #   debug1[0m
      [37m+          #   info[0m
      [37m+          #   notice[0m
      [37m+          #   warning[0m
      [37m+          #   error[0m
      [37m+          #   log[0m
      [37m+          #   fatal[0m
      [37m+          #   panic (effectively off)[0m
      [37m [0m
      [37m-[0m
      [37m # - What to Log -[0m
      [37m [0m
      [37m #debug_print_parse = off[0m
      [37m #debug_print_rewritten = off[0m
      [37m #debug_print_plan = off[0m
      [37m #debug_pretty_print = on[0m
      [37m-#log_checkpoints = off[0m
      [37m #log_connections = off[0m
      [37m #log_disconnections = off[0m
      [37m #log_duration = off[0m
      [37m-#log_error_verbosity = default		# terse, default, or verbose messages[0m
      [37m+#log_error_verbosity = default    # terse, default, or verbose messages[0m
      [37m #log_hostname = off[0m
      [37m-#log_line_prefix = '%m [%p] '		# special values:[0m
      [37m-					#   %a = application name[0m
      [37m-					#   %u = user name[0m
      [37m-					#   %d = database name[0m
      [37m-					#   %r = remote host and port[0m
      [37m-					#   %h = remote host[0m
      [37m-					#   %p = process ID[0m
      [37m-					#   %t = timestamp without milliseconds[0m
      [37m-					#   %m = timestamp with milliseconds[0m
      [37m-					#   %n = timestamp with milliseconds (as a Unix epoch)[0m
      [37m-					#   %i = command tag[0m
      [37m-					#   %e = SQL state[0m
      [37m-					#   %c = session ID[0m
      [37m-					#   %l = session line number[0m
      [37m-					#   %s = session start timestamp[0m
      [37m-					#   %v = virtual transaction ID[0m
      [37m-					#   %x = transaction ID (0 if none)[0m
      [37m-					#   %q = stop here in non-session[0m
      [37m-					#        processes[0m
      [37m-					#   %% = '%'[0m
      [37m-					# e.g. '<%u%%%d> '[0m
      [37m-#log_lock_waits = off			# log lock waits >= deadlock_timeout[0m
      [37m-#log_statement = 'none'			# none, ddl, mod, all[0m
      [37m-#log_replication_commands = off[0m
      [37m-#log_temp_files = -1			# log temporary files equal or larger[0m
      [37m-					# than the specified size in kilobytes;[0m
      [37m-					# -1 disables, 0 logs all temp files[0m
      [37m-log_timezone = 'Etc/UTC'[0m
      [37m+#log_lock_waits = off     # log lock waits >= deadlock_timeout[0m
      [37m+#log_statement = 'none'     # none, ddl, mod, all[0m
      [37m+#log_timezone = '(defaults to server environment setting)'[0m
      [37m [0m
      [37m-#------------------------------------------------------------------------------[0m
      [37m-# PROCESS TITLE[0m
      [37m-#------------------------------------------------------------------------------[0m
      [37m [0m
      [37m-#cluster_name = ''			# added to process titles if nonempty[0m
      [37m-					# (change requires restart)[0m
      [37m-#update_process_title = on[0m
      [37m-[0m
      [37m-[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m-# STATISTICS[0m
      [37m+# RUNTIME STATISTICS[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m-# - Query and Index Statistics Collector -[0m
      [37m+# - Query/Index Statistics Collector -[0m
      [37m [0m
      [37m #track_activities = on[0m
      [37m #track_counts = on[0m
      [37m-#track_io_timing = off[0m
      [37m-#track_functions = none			# none, pl, all[0m
      [37m-#track_activity_query_size = 1024	# (change requires restart)[0m
      [37m+#track_functions = none     # none, pl, all[0m
      [37m+track_activity_query_size = 1024 # (change requires restart)[0m
      [37m+#update_process_title = on[0m
      [37m #stats_temp_directory = 'pg_stat_tmp'[0m
      [37m [0m
      [37m [0m
      [37m-# - Monitoring -[0m
      [37m+# - Statistics Monitoring -[0m
      [37m [0m
      [37m #log_parser_stats = off[0m
      [37m #log_planner_stats = off[0m
      [37m@@ -512,115 +355,53 @@[0m
      [37m [0m
      [37m [0m
      [37m #------------------------------------------------------------------------------[0m
      [37m-# AUTOVACUUM[0m
      [37m+# AUTOVACUUM PARAMETERS[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m-#autovacuum = on			# Enable autovacuum subprocess?  'on'[0m
      [37m-					# requires track_counts to also be on.[0m
      [37m-#log_autovacuum_min_duration = -1	# -1 disables, 0 logs all actions and[0m
      [37m-					# their durations, > 0 logs only[0m
      [37m-					# actions running at least this number[0m
      [37m-					# of milliseconds.[0m
      [37m-#autovacuum_max_workers = 3		# max number of autovacuum subprocesses[0m
      [37m-					# (change requires restart)[0m
      [37m-#autovacuum_naptime = 1min		# time between autovacuum runs[0m
      [37m-#autovacuum_vacuum_threshold = 50	# min number of row updates before[0m
      [37m-					# vacuum[0m
      [37m-#autovacuum_analyze_threshold = 50	# min number of row updates before[0m
      [37m-					# analyze[0m
      [37m-#autovacuum_vacuum_scale_factor = 0.2	# fraction of table size before vacuum[0m
      [37m-#autovacuum_analyze_scale_factor = 0.1	# fraction of table size before analyze[0m
      [37m-#autovacuum_freeze_max_age = 200000000	# maximum XID age before forced vacuum[0m
      [37m-					# (change requires restart)[0m
      [37m-#autovacuum_multixact_freeze_max_age = 400000000	# maximum multixact age[0m
      [37m-					# before forced vacuum[0m
      [37m-					# (change requires restart)[0m
      [37m-#autovacuum_vacuum_cost_delay = 20ms	# default vacuum cost delay for[0m
      [37m-					# autovacuum, in milliseconds;[0m
      [37m-					# -1 means use vacuum_cost_delay[0m
      [37m-#autovacuum_vacuum_cost_limit = -1	# default vacuum cost limit for[0m
      [37m-					# autovacuum, -1 means use[0m
      [37m-					# vacuum_cost_limit[0m
      [37m-[0m
      [37m-[0m
      [37m+autovacuum_max_workers = 3 # max number of autovacuum subprocesses[0m
      [37m+          # (change requires restart)[0m
      [37m+autovacuum_freeze_max_age = 200000000  # maximum XID age before forced vacuum[0m
      [37m+          # (change requires restart)[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m # CLIENT CONNECTION DEFAULTS[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m # - Statement Behavior -[0m
      [37m [0m
      [37m-#client_min_messages = notice		# values in order of decreasing detail:[0m
      [37m-					#   debug5[0m
      [37m-					#   debug4[0m
      [37m-					#   debug3[0m
      [37m-					#   debug2[0m
      [37m-					#   debug1[0m
      [37m-					#   log[0m
      [37m-					#   notice[0m
      [37m-					#   warning[0m
      [37m-					#   error[0m
      [37m-#search_path = '"$user", public'	# schema names[0m
      [37m-#row_security = on[0m
      [37m-#default_tablespace = ''		# a tablespace name, '' uses the default[0m
      [37m-#temp_tablespaces = ''			# a list of tablespace names, '' uses[0m
      [37m-					# only default tablespace[0m
      [37m+#search_path = '"$user",public'   # schema names[0m
      [37m+#default_tablespace = ''    # a tablespace name, '' uses the default[0m
      [37m+#temp_tablespaces = ''      # a list of tablespace names, '' uses[0m
      [37m+          # only default tablespace[0m
      [37m #check_function_bodies = on[0m
      [37m #default_transaction_isolation = 'read committed'[0m
      [37m #default_transaction_read_only = off[0m
      [37m #default_transaction_deferrable = off[0m
      [37m #session_replication_role = 'origin'[0m
      [37m-#statement_timeout = 0			# in milliseconds, 0 is disabled[0m
      [37m-#lock_timeout = 0			# in milliseconds, 0 is disabled[0m
      [37m-#idle_in_transaction_session_timeout = 0	# in milliseconds, 0 is disabled[0m
      [37m #vacuum_freeze_min_age = 50000000[0m
      [37m #vacuum_freeze_table_age = 150000000[0m
      [37m-#vacuum_multixact_freeze_min_age = 5000000[0m
      [37m-#vacuum_multixact_freeze_table_age = 150000000[0m
      [37m-#vacuum_cleanup_index_scale_factor = 0.1	# fraction of total number of tuples[0m
      [37m-						# before index cleanup, 0 always performs[0m
      [37m-						# index cleanup[0m
      [37m-#bytea_output = 'hex'			# hex, escape[0m
      [37m+#bytea_output = 'hex'     # hex, escape[0m
      [37m #xmlbinary = 'base64'[0m
      [37m #xmloption = 'content'[0m
      [37m-#gin_fuzzy_search_limit = 0[0m
      [37m-#gin_pending_list_limit = 4MB[0m
      [37m [0m
      [37m # - Locale and Formatting -[0m
      [37m [0m
      [37m-datestyle = 'iso, mdy'[0m
      [37m #intervalstyle = 'postgres'[0m
      [37m-timezone = 'Etc/UTC'[0m
      [37m+#timezone = '(defaults to server environment setting)'[0m
      [37m #timezone_abbreviations = 'Default'     # Select the set of available time zone[0m
      [37m-					# abbreviations.  Currently, there are[0m
      [37m-					#   Default[0m
      [37m-					#   Australia (historical usage)[0m
      [37m-					#   India[0m
      [37m-					# You can create your own file in[0m
      [37m-					# share/timezonesets/.[0m
      [37m-#extra_float_digits = 0			# min -15, max 3[0m
      [37m-#client_encoding = sql_ascii		# actually, defaults to database[0m
      [37m-					# encoding[0m
      [37m+          # abbreviations.  Currently, there are[0m
      [37m+          #   Default[0m
      [37m+          #   Australia[0m
      [37m+          #   India[0m
      [37m+          # You can create your own file in[0m
      [37m+          # share/timezonesets/.[0m
      [37m+#extra_float_digits = 0     # min -15, max 3[0m
      [37m+#client_encoding = sql_ascii    # actually, defaults to database[0m
      [37m+          # encoding[0m
      [37m [0m
      [37m-# These settings are initialized by initdb, but they can be changed.[0m
      [37m-lc_messages = 'C.UTF-8'			# locale for system error message[0m
      [37m-					# strings[0m
      [37m-lc_monetary = 'C.UTF-8'			# locale for monetary formatting[0m
      [37m-lc_numeric = 'C.UTF-8'			# locale for number formatting[0m
      [37m-lc_time = 'C.UTF-8'				# locale for time formatting[0m
      [37m-[0m
      [37m-# default configuration for text search[0m
      [37m-default_text_search_config = 'pg_catalog.english'[0m
      [37m-[0m
      [37m-# - Shared Library Preloading -[0m
      [37m-[0m
      [37m-#shared_preload_libraries = ''	# (change requires restart)[0m
      [37m-#local_preload_libraries = ''[0m
      [37m-#session_preload_libraries = ''[0m
      [37m-#jit_provider = 'llvmjit'		# JIT library to use[0m
      [37m-[0m
      [37m # - Other Defaults -[0m
      [37m [0m
      [37m #dynamic_library_path = '$libdir'[0m
      [37m+#local_preload_libraries = ''[0m
      [37m [0m
      [37m [0m
      [37m #------------------------------------------------------------------------------[0m
      [37m@@ -628,29 +409,27 @@[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m #deadlock_timeout = 1s[0m
      [37m-#max_locks_per_transaction = 64		# min 10[0m
      [37m-					# (change requires restart)[0m
      [37m-#max_pred_locks_per_transaction = 64	# min 10[0m
      [37m-					# (change requires restart)[0m
      [37m-#max_pred_locks_per_relation = -2	# negative values mean[0m
      [37m-					# (max_pred_locks_per_transaction[0m
      [37m-					#  / -max_pred_locks_per_relation) - 1[0m
      [37m-#max_pred_locks_per_page = 2            # min 0[0m
      [37m+max_locks_per_transaction = 128   # min 10[0m
      [37m+          # (change requires restart)[0m
      [37m+# Note:  Each lock table slot uses ~270 bytes of shared memory, and there are[0m
      [37m+# max_locks_per_transaction * (max_connections + max_prepared_transactions)[0m
      [37m+# lock table slots.[0m
      [37m+#max_pred_locks_per_transaction = 64  # min 10[0m
      [37m+          # (change requires restart)[0m
      [37m [0m
      [37m-[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m-# VERSION AND PLATFORM COMPATIBILITY[0m
      [37m+# VERSION/PLATFORM COMPATIBILITY[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m # - Previous PostgreSQL Versions -[0m
      [37m [0m
      [37m #array_nulls = on[0m
      [37m-#backslash_quote = safe_encoding	# on, off, or safe_encoding[0m
      [37m+#backslash_quote = safe_encoding  # on, off, or safe_encoding[0m
      [37m #default_with_oids = off[0m
      [37m #escape_string_warning = on[0m
      [37m #lo_compat_privileges = off[0m
      [37m-#operator_precedence_warning = off[0m
      [37m #quote_all_identifiers = off[0m
      [37m+#sql_inheritance = on[0m
      [37m #standard_conforming_strings = on[0m
      [37m #synchronize_seqscans = on[0m
      [37m [0m
      [37m@@ -663,30 +442,15 @@[0m
      [37m # ERROR HANDLING[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m-#exit_on_error = off			# terminate session on any error?[0m
      [37m-#restart_after_crash = on		# reinitialize after backend crash?[0m
      [37m-#data_sync_retry = off			# retry or panic on failure to fsync[0m
      [37m-					# data?[0m
      [37m-					# (change requires restart)[0m
      [37m+#exit_on_error = off        # terminate session on any error?[0m
      [37m+#restart_after_crash = on     # reinitialize after backend crash?[0m
      [37m [0m
      [37m [0m
      [37m #------------------------------------------------------------------------------[0m
      [37m-# CONFIG FILE INCLUDES[0m
      [37m-#------------------------------------------------------------------------------[0m
      [37m-[0m
      [37m-# These options allow settings to be loaded from files other than the[0m
      [37m-# default postgresql.conf.  Note that these are directives, not variable[0m
      [37m-# assignments, so they can usefully be given more than once.[0m
      [37m-[0m
      [37m-#include_dir = '...'			# include files ending in '.conf' from[0m
      [37m-					# a directory, e.g., 'conf.d'[0m
      [37m-#include_if_exists = '...'		# include file only if it exists[0m
      [37m-#include = '...'			# include file[0m
      [37m-[0m
      [37m-[0m
      [37m-#------------------------------------------------------------------------------[0m
      [37m # CUSTOMIZED OPTIONS[0m
      [37m #------------------------------------------------------------------------------[0m
      [37m [0m
      [37m-# Add settings for extensions here[0m
      [37m+#custom_variable_classes = ''   # list of custom variable class names[0m
      [37m+[0m
      [37m+include 'runtime.conf'[0m
      [32m- change mode from '0600' to '0644'[0m
[0m    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create
      [32m- create new file /var/opt/gitlab/postgresql/data/runtime.conf[0m
      [32m- update content in file /var/opt/gitlab/postgresql/data/runtime.conf from none to e44f05[0m
      [37m--- /var/opt/gitlab/postgresql/data/runtime.conf	2022-05-01 19:51:44.592491019 +0000[0m
      [37m+++ /var/opt/gitlab/postgresql/data/.chef-runtime20220501-32-16puz9y.conf	2022-05-01 19:51:44.592491019 +0000[0m
      [37m@@ -1,134 +1,268 @@[0m
      [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
      [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
      [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
      [37m+[0m
      [37m+# Changing variables in this file should only require a reload of PostgreSQL[0m
      [37m+# As the gitlab-psql user, run:[0m
      [37m+# /opt/gitlab/embedded/bin/pg_ctl reload -D /var/opt/gitlab/postgresql/data[0m
      [37m+work_mem = 16MB				# min 64kB[0m
      [37m+maintenance_work_mem = 16MB # 16MB    # min 1MB[0m
      [37m+synchronous_commit = on # synchronization level; on, off, or local[0m
      [37m+synchronous_standby_names = ''[0m
      [37m+[0m
      [37m+# - Checkpoints -[0m
      [37m+min_wal_size = 80MB[0m
      [37m+max_wal_size = 1GB[0m
      [37m+[0m
      [37m+checkpoint_timeout = 5min		# range 30s-1h, default 5min[0m
      [37m+checkpoint_completion_target = 0.9	# checkpoint target duration, 0.0 - 1.0, default 0.5[0m
      [37m+checkpoint_warning = 30s		# 0 disables, default 30s[0m
      [37m+[0m
      [37m+# - Logging -[0m
      [37m+log_directory = '/var/log/gitlab/postgresql'[0m
      [37m+[0m
      [37m+# - Archiving -[0m
      [37m+archive_command = ''   # command to use to archive a logfile segment[0m
      [37m+archive_timeout = 0    # force a logfile segment switch after this[0m
      [37m+        # number of seconds; 0 disables[0m
      [37m+[0m
      [37m+# - Replication[0m
      [37m+wal_keep_segments = 10[0m
      [37m+[0m
      [37m+max_standby_archive_delay = 30s # max delay before canceling queries[0m
      [37m+          # when reading WAL from archive;[0m
      [37m+          # -1 allows indefinite delay[0m
      [37m+max_standby_streaming_delay = 30s # max delay before canceling queries[0m
      [37m+          # when reading streaming WAL;[0m
      [37m+          # -1 allows indefinite delay[0m
      [37m+[0m
      [37m+hot_standby_feedback = off   # send info from standby to prevent[0m
      [37m+          # query conflicts[0m
      [37m+[0m
      [37m+# - Planner Cost Constants -[0m
      [37m+#seq_page_cost = 1.0      # measured on an arbitrary scale[0m
      [37m+random_page_cost = 2.0     # same scale as above[0m
      [37m+[0m
      [37m+effective_cache_size = 7837MB # Default 128MB[0m
      [37m+[0m
      [37m+log_min_duration_statement = -1  # -1 is disabled, 0 logs all statements[0m
      [37m+          # and their durations, > 0 logs only[0m
      [37m+          # statements running at least this number[0m
      [37m+          # of milliseconds[0m
      [37m+[0m
      [37m+log_checkpoints = off[0m
      [37m+[0m
      [37m+log_line_prefix = '' # default '', special values:[0m
      [37m+          #   %a = application name[0m
      [37m+          #   %u = user name[0m
      [37m+          #   %d = database name[0m
      [37m+          #   %r = remote host and port[0m
      [37m+          #   %h = remote host[0m
      [37m+          #   %p = process ID[0m
      [37m+          #   %t = timestamp without milliseconds[0m
      [37m+          #   %m = timestamp with milliseconds[0m
      [37m+          #   %i = command tag[0m
      [37m+          #   %e = SQL state[0m
      [37m+          #   %c = session ID[0m
      [37m+          #   %l = session line number[0m
      [37m+          #   %s = session start timestamp[0m
      [37m+          #   %v = virtual transaction ID[0m
      [37m+          #   %x = transaction ID (0 if none)[0m
      [37m+          #   %q = stop here in non-session[0m
      [37m+          #        processes[0m
      [37m+          #   %% = '%'[0m
      [37m+[0m
      [37m+log_temp_files = -1      # log temporary files equal or larger[0m
      [37m+          # than the specified size in kilobytes;[0m
      [37m+          # -1 disables, 0 logs all temp files[0m
      [37m+[0m
      [37m+[0m
      [37m+# - Autovacuum parameters -[0m
      [37m+autovacuum = on # Enable autovacuum subprocess?  'on'[0m
      [37m+          # requires track_counts to also be on.[0m
      [37m+[0m
      [37m+log_autovacuum_min_duration = -1 # -1 disables, 0 logs all actions and[0m
      [37m+          # their durations, > 0 logs only[0m
      [37m+          # actions running at least this number[0m
      [37m+          # of milliseconds.[0m
      [37m+[0m
      [37m+autovacuum_naptime = 1min # time between autovacuum runs[0m
      [37m+autovacuum_vacuum_threshold = 50 # min number of row updates before[0m
      [37m+          # vacuum[0m
      [37m+autovacuum_analyze_threshold = 50 # min number of row updates before[0m
      [37m+          # analyze[0m
      [37m+autovacuum_vacuum_scale_factor = 0.02 # fraction of table size before vacuum[0m
      [37m+autovacuum_analyze_scale_factor = 0.01 # fraction of table size before analyze[0m
      [37m+autovacuum_vacuum_cost_delay = 20ms # default vacuum cost delay for[0m
      [37m+          # autovacuum, in milliseconds;[0m
      [37m+          # -1 means use vacuum_cost_delay[0m
      [37m+autovacuum_vacuum_cost_limit = -1 # default vacuum cost limit for[0m
      [37m+          # autovacuum, -1 means use[0m
      [37m+          # vacuum_cost_limit[0m
      [37m+[0m
      [37m+# Parameters for gathering statistics[0m
      [37m+default_statistics_target = 1000[0m
      [37m+[0m
      [37m+# - Client connection timeouts[0m
      [37m+statement_timeout = 60000[0m
      [37m+[0m
      [37m+idle_in_transaction_session_timeout = 60000[0m
      [37m+[0m
      [37m+# IO settings[0m
      [37m+effective_io_concurrency = 1[0m
      [37m+track_io_timing = 'off'[0m
      [37m+[0m
      [37m+# Parallel worker settings[0m
      [37m+max_worker_processes = 8[0m
      [37m+max_parallel_workers_per_gather = 0[0m
      [37m+[0m
      [37m+# Deadlock handling and logging[0m
      [37m+deadlock_timeout = '5s'[0m
      [37m+log_lock_waits = 1[0m
      [37m+[0m
      [37m+# - Locale and Formatting -[0m
      [37m+datestyle = 'iso, mdy'[0m
      [37m+[0m
      [37m+# These settings are initialized by initdb, but they can be changed.[0m
      [37m+lc_messages = 'C'     # locale for system error message[0m
      [37m+          # strings[0m
      [37m+lc_monetary = 'C'     # locale for monetary formatting[0m
      [37m+lc_numeric = 'C'      # locale for number formatting[0m
      [37m+lc_time = 'C'       # locale for time formatting[0m
      [37m+[0m
      [37m+# default configuration for text search[0m
      [37m+default_text_search_config = 'pg_catalog.english'[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'gitlab-psql'[0m
[0m    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create
      [32m- update content in file /var/opt/gitlab/postgresql/data/pg_hba.conf from fff10d to 40e348[0m
      [37m--- /var/opt/gitlab/postgresql/data/pg_hba.conf	2022-05-01 19:51:44.079485670 +0000[0m
      [37m+++ /var/opt/gitlab/postgresql/data/.chef-pg_hba20220501-32-gaw08b.conf	2022-05-01 19:51:44.604491144 +0000[0m
      [37m@@ -1,94 +1,74 @@[0m
      [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
      [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
      [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
      [37m+[0m
      [37m # PostgreSQL Client Authentication Configuration File[0m
      [37m # ===================================================[0m
      [37m #[0m
      [37m-# Refer to the "Client Authentication" section in the PostgreSQL[0m
      [37m-# documentation for a complete description of this file.  A short[0m
      [37m-# synopsis follows.[0m
      [37m+# Refer to the "Client Authentication" section in the[0m
      [37m+# PostgreSQL documentation for a complete description[0m
      [37m+# of this file.  A short synopsis follows.[0m
      [37m #[0m
      [37m # This file controls: which hosts are allowed to connect, how clients[0m
      [37m # are authenticated, which PostgreSQL user names they can use, which[0m
      [37m # databases they can access.  Records take one of these forms:[0m
      [37m #[0m
      [37m-# local      DATABASE  USER  METHOD  [OPTIONS][0m
      [37m-# host       DATABASE  USER  ADDRESS  METHOD  [OPTIONS][0m
      [37m-# hostssl    DATABASE  USER  ADDRESS  METHOD  [OPTIONS][0m
      [37m-# hostnossl  DATABASE  USER  ADDRESS  METHOD  [OPTIONS][0m
      [37m+# local      DATABASE  USER  METHOD  [OPTION][0m
      [37m+# host       DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION][0m
      [37m+# hostssl    DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION][0m
      [37m+# hostnossl  DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION][0m
      [37m #[0m
      [37m # (The uppercase items must be replaced by actual values.)[0m
      [37m #[0m
      [37m-# The first field is the connection type: "local" is a Unix-domain[0m
      [37m-# socket, "host" is either a plain or SSL-encrypted TCP/IP socket,[0m
      [37m-# "hostssl" is an SSL-encrypted TCP/IP socket, and "hostnossl" is a[0m
      [37m-# plain TCP/IP socket.[0m
      [37m+# The first field is the connection type: "local" is a Unix-domain socket,[0m
      [37m+# "host" is either a plain or SSL-encrypted TCP/IP socket, "hostssl" is an[0m
      [37m+# SSL-encrypted TCP/IP socket, and "hostnossl" is a plain TCP/IP socket.[0m
      [37m #[0m
      [37m-# DATABASE can be "all", "sameuser", "samerole", "replication", a[0m
      [37m-# database name, or a comma-separated list thereof. The "all"[0m
      [37m-# keyword does not match "replication". Access to replication[0m
      [37m-# must be enabled in a separate record (see example below).[0m
      [37m+# DATABASE can be "all", "sameuser", "samerole", a database name, or[0m
      [37m+# a comma-separated list thereof.[0m
      [37m #[0m
      [37m-# USER can be "all", a user name, a group name prefixed with "+", or a[0m
      [37m-# comma-separated list thereof.  In both the DATABASE and USER fields[0m
      [37m-# you can also write a file name prefixed with "@" to include names[0m
      [37m-# from a separate file.[0m
      [37m+# USER can be "all", a user name, a group name prefixed with "+", or[0m
      [37m+# a comma-separated list thereof.  In both the DATABASE and USER fields[0m
      [37m+# you can also write a file name prefixed with "@" to include names from[0m
      [37m+# a separate file.[0m
      [37m #[0m
      [37m-# ADDRESS specifies the set of hosts the record matches.  It can be a[0m
      [37m-# host name, or it is made up of an IP address and a CIDR mask that is[0m
      [37m-# an integer (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that[0m
      [37m-# specifies the number of significant bits in the mask.  A host name[0m
      [37m-# that starts with a dot (.) matches a suffix of the actual host name.[0m
      [37m-# Alternatively, you can write an IP address and netmask in separate[0m
      [37m-# columns to specify the set of hosts.  Instead of a CIDR-address, you[0m
      [37m-# can write "samehost" to match any of the server's own IP addresses,[0m
      [37m-# or "samenet" to match any address in any subnet that the server is[0m
      [37m-# directly connected to.[0m
      [37m+# CIDR-ADDRESS specifies the set of hosts the record matches.[0m
      [37m+# It is made up of an IP address and a CIDR mask that is an integer[0m
      [37m+# (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that specifies[0m
      [37m+# the number of significant bits in the mask.  Alternatively, you can write[0m
      [37m+# an IP address and netmask in separate columns to specify the set of hosts.[0m
      [37m #[0m
      [37m-# METHOD can be "trust", "reject", "md5", "password", "scram-sha-256",[0m
      [37m-# "gss", "sspi", "ident", "peer", "pam", "ldap", "radius" or "cert".[0m
      [37m-# Note that "password" sends passwords in clear text; "md5" or[0m
      [37m-# "scram-sha-256" are preferred since they send encrypted passwords.[0m
      [37m+# METHOD can be "trust", "reject", "md5", "crypt", "password", "gss", "sspi",[0m
      [37m+# "krb5", "ident", "pam" or "ldap".  Note that "password" sends passwords[0m
      [37m+# in clear text; "md5" is preferred since it sends encrypted passwords.[0m
      [37m #[0m
      [37m-# OPTIONS are a set of options for the authentication in the format[0m
      [37m-# NAME=VALUE.  The available options depend on the different[0m
      [37m-# authentication methods -- refer to the "Client Authentication"[0m
      [37m-# section in the documentation for a list of which options are[0m
      [37m-# available for which authentication methods.[0m
      [37m+# OPTION is the ident map or the name of the PAM service, depending on METHOD.[0m
      [37m #[0m
      [37m-# Database and user names containing spaces, commas, quotes and other[0m
      [37m-# special characters must be quoted.  Quoting one of the keywords[0m
      [37m-# "all", "sameuser", "samerole" or "replication" makes the name lose[0m
      [37m-# its special character, and just match a database or username with[0m
      [37m-# that name.[0m
      [37m+# Database and user names containing spaces, commas, quotes and other special[0m
      [37m+# characters must be quoted. Quoting one of the keywords "all", "sameuser" or[0m
      [37m+# "samerole" makes the name lose its special character, and just match a[0m
      [37m+# database or username with that name.[0m
      [37m #[0m
      [37m-# This file is read on server startup and when the server receives a[0m
      [37m-# SIGHUP signal.  If you edit the file on a running system, you have to[0m
      [37m-# SIGHUP the server for the changes to take effect, run "pg_ctl reload",[0m
      [37m-# or execute "SELECT pg_reload_conf()".[0m
      [37m-#[0m
      [37m+# This file is read on server startup and when the postmaster receives[0m
      [37m+# a SIGHUP signal.  If you edit the file on a running system, you have[0m
      [37m+# to SIGHUP the postmaster for the changes to take effect.  You can use[0m
      [37m+# "pg_ctl reload" to do that.[0m
      [37m+[0m
      [37m # Put your actual configuration here[0m
      [37m # ----------------------------------[0m
      [37m #[0m
      [37m # If you want to allow non-local connections, you need to add more[0m
      [37m-# "host" records.  In that case you will also need to make PostgreSQL[0m
      [37m-# listen on a non-local interface via the listen_addresses[0m
      [37m-# configuration parameter, or via the -i or -h command line switches.[0m
      [37m+# "host" records. In that case you will also need to make PostgreSQL listen[0m
      [37m+# on a non-local interface via the listen_addresses configuration parameter,[0m
      [37m+# or via the -i or -h command line switches.[0m
      [37m+#[0m
      [37m [0m
      [37m-# CAUTION: Configuring the system for local "trust" authentication[0m
      [37m-# allows any local user to connect as any PostgreSQL user, including[0m
      [37m-# the database superuser.  If you do not trust all your local users,[0m
      [37m-# use another authentication method.[0m
      [37m [0m
      [37m+# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD[0m
      [37m [0m
      [37m-# TYPE  DATABASE        USER            ADDRESS                 METHOD[0m
      [37m-[0m
      [37m # "local" is for Unix domain socket connections only[0m
      [37m-local   all             all                                     trust[0m
      [37m-# IPv4 local connections:[0m
      [37m-host    all             all             127.0.0.1/32            trust[0m
      [37m-# IPv6 local connections:[0m
      [37m-host    all             all             ::1/128                 trust[0m
      [37m-# Allow replication connections from localhost, by a user with the[0m
      [37m-# replication privilege.[0m
      [37m-local   replication     all                                     trust[0m
      [37m-host    replication     all             127.0.0.1/32            trust[0m
      [37m-host    replication     all             ::1/128                 trust[0m
      [37m+local   all         all                               peer map=gitlab[0m
      [37m+[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '0600' to '0644'[0m
[0m    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create
      [32m- update content in file /var/opt/gitlab/postgresql/data/pg_ident.conf from 297f46 to 5399a1[0m
      [37m--- /var/opt/gitlab/postgresql/data/pg_ident.conf	2022-05-01 19:51:44.079485670 +0000[0m
      [37m+++ /var/opt/gitlab/postgresql/data/.chef-pg_ident20220501-32-14cdtst.conf	2022-05-01 19:51:44.615491259 +0000[0m
      [37m@@ -40,4 +40,8 @@[0m
      [37m # ----------------------------------[0m
      [37m [0m
      [37m # MAPNAME       SYSTEM-USERNAME         PG-USERNAME[0m
      [37m+gitlab  git  gitlab[0m
      [37m+gitlab  mattermost  gitlab_mattermost[0m
      [37m+# Default to a 1-1 mapping between system usernames and Postgres usernames[0m
      [37m+gitlab  /^(.*)$  \1[0m
      [32m- change mode from '0600' to '0644'[0m
[0m  
[0m  * service[postgresql] action nothing (skipped due to action :nothing)
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgresql] action create
      [32m- create new directory /opt/gitlab/sv/postgresql[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/postgresql/run] action create
      [32m- create new file /opt/gitlab/sv/postgresql/run[0m
      [32m- update content in file /opt/gitlab/sv/postgresql/run from none to dc5689[0m
      [37m--- /opt/gitlab/sv/postgresql/run	2022-05-01 19:51:44.635491467 +0000[0m
      [37m+++ /opt/gitlab/sv/postgresql/.chef-run20220501-32-zmb5p	2022-05-01 19:51:44.635491467 +0000[0m
      [37m@@ -1,4 +1,8 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+exec chpst -P -U gitlab-psql:gitlab-psql -u gitlab-psql:gitlab-psql /opt/gitlab/embedded/bin/postgres -D /var/opt/gitlab/postgresql/data[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/postgresql/log] action create
      [32m- create new directory /opt/gitlab/sv/postgresql/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/postgresql/log/main] action create
      [32m- create new directory /opt/gitlab/sv/postgresql/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/postgresql/log/config] action create
      [32m- create new file /opt/gitlab/sv/postgresql/log/config[0m
      [32m- update content in file /opt/gitlab/sv/postgresql/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/postgresql/log/config	2022-05-01 19:51:44.648491603 +0000[0m
      [37m+++ /opt/gitlab/sv/postgresql/log/.chef-config20220501-32-80xfmv	2022-05-01 19:51:44.648491603 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_postgresql] action create
      [32m- execute the ruby block verify_chown_persisted_on_postgresql[0m
[0m    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgresql/config] action create
      [32m- create symlink at /var/log/gitlab/postgresql/config to /opt/gitlab/sv/postgresql/log/config[0m
[0m    * template[/opt/gitlab/sv/postgresql/log/run] action create
      [32m- create new file /opt/gitlab/sv/postgresql/log/run[0m
      [32m- update content in file /opt/gitlab/sv/postgresql/log/run from none to ce742a[0m
      [37m--- /opt/gitlab/sv/postgresql/log/run	2022-05-01 19:51:44.657491697 +0000[0m
      [37m+++ /opt/gitlab/sv/postgresql/log/.chef-run20220501-32-13atw0f	2022-05-01 19:51:44.657491697 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/postgresql[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/postgresql/env] action create
      [32m- create new directory /opt/gitlab/sv/postgresql/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgresql/control] action create
      [32m- create new directory /opt/gitlab/sv/postgresql/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/postgresql/control/t] action create
      [32m- create new file /opt/gitlab/sv/postgresql/control/t[0m
      [32m- update content in file /opt/gitlab/sv/postgresql/control/t from none to 05ae12[0m
      [37m--- /opt/gitlab/sv/postgresql/control/t	2022-05-01 19:51:44.669491822 +0000[0m
      [37m+++ /opt/gitlab/sv/postgresql/control/.chef-t20220501-32-kk2emz	2022-05-01 19:51:44.669491822 +0000[0m
      [37m@@ -1,3 +1,6 @@[0m
      [37m+#!/bin/sh[0m
      [37m+echo "received TERM from runit, sending INT instead to force quit connections"[0m
      [37m+/opt/gitlab/embedded/bin/sv interrupt postgresql[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/postgresql] action create
      [32m- create symlink at /opt/gitlab/init/postgresql to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/postgresql] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/postgresql/config] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
      * link[/opt/gitlab/init/postgresql] action create (up to date)
      * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/postgresql] action create
        [32m- create symlink at /opt/gitlab/service/postgresql to /opt/gitlab/sv/postgresql[0m
[0m      * ruby_block[wait for postgresql service socket] action run
        [32m- execute the ruby block wait for postgresql service socket[0m
[0m      * directory[/opt/gitlab/service/postgresql/supervise] action create
        [32m- change mode from '0700' to '0755'[0m
[0m      * directory[/opt/gitlab/service/postgresql/log/supervise] action create
        [32m- change mode from '0700' to '0755'[0m
[0m      * file[/opt/gitlab/service/postgresql/supervise/ok] action touch
        [32m- create new file /opt/gitlab/service/postgresql/supervise/ok[0m
        [32m- change owner from '' to 'gitlab-psql'[0m
        [32m- change group from '' to 'gitlab-psql'[0m
        [32m- update utime on file /opt/gitlab/service/postgresql/supervise/ok[0m
[0m      * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch
        [32m- create new file /opt/gitlab/service/postgresql/log/supervise/ok[0m
        [32m- change owner from '' to 'gitlab-psql'[0m
        [32m- change group from '' to 'gitlab-psql'[0m
        [32m- update utime on file /opt/gitlab/service/postgresql/log/supervise/ok[0m
[0m      * file[/opt/gitlab/service/postgresql/supervise/status] action touch
        [32m- change owner from 'root' to 'gitlab-psql'[0m
        [32m- change group from 'root' to 'gitlab-psql'[0m
        [32m- update utime on file /opt/gitlab/service/postgresql/supervise/status[0m
[0m      * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch
        [32m- change owner from 'root' to 'gitlab-psql'[0m
        [32m- change group from 'root' to 'gitlab-psql'[0m
        [32m- update utime on file /opt/gitlab/service/postgresql/log/supervise/status[0m
[0m      * file[/opt/gitlab/service/postgresql/supervise/control] action touch
        [32m- create new file /opt/gitlab/service/postgresql/supervise/control[0m
        [32m- change owner from '' to 'gitlab-psql'[0m
        [32m- change group from '' to 'gitlab-psql'[0m
        [32m- update utime on file /opt/gitlab/service/postgresql/supervise/control[0m
[0m      * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch
        [32m- create new file /opt/gitlab/service/postgresql/log/supervise/control[0m
        [32m- change owner from '' to 'gitlab-psql'[0m
        [32m- change group from '' to 'gitlab-psql'[0m
        [32m- update utime on file /opt/gitlab/service/postgresql/log/supervise/control[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/postgresql] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/postgresql/config] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
      * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
      * link[/opt/gitlab/init/postgresql] action create (up to date)
      * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/postgresql] action create (up to date)
      * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
      * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
      * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
      * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
      * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
      * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)
      * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch
        [32m- change owner from 'root' to 'gitlab-psql'[0m
        [32m- change group from 'root' to 'gitlab-psql'[0m
        [32m- update utime on file /opt/gitlab/service/postgresql/log/supervise/status[0m
[0m      * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
      * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgresql] action create (up to date)
    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch
      [32m- change owner from 'root' to 'gitlab-psql'[0m
      [32m- change group from 'root' to 'gitlab-psql'[0m
      [32m- update utime on file /opt/gitlab/service/postgresql/log/supervise/status[0m
[0m    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)
  
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start postgresql] action run
    [execute] ok: run: postgresql: (pid 580) 2s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start postgresql[0m
[0m  * database_objects[postgresql] action create
    * postgresql_user[gitlab] action create
      * execute[create gitlab postgresql user] action run
        [execute] CREATE ROLE
        [32m- execute /opt/gitlab/bin/gitlab-psql -d template1 -c "CREATE USER \"gitlab\""[0m
[0m    
[0m    * postgresql_user[gitlab_replicator] action create
      * execute[create gitlab_replicator postgresql user] action run
        [execute] CREATE ROLE
        [32m- execute /opt/gitlab/bin/gitlab-psql -d template1 -c "CREATE USER \"gitlab_replicator\""[0m
[0m      * execute[set options for gitlab_replicator postgresql user] action run
        [execute] ALTER ROLE
        [32m- execute /opt/gitlab/bin/gitlab-psql -d template1 -c "ALTER USER \"gitlab_replicator\" replication"[0m
[0m    
[0m    * execute[create gitlabhq_production database] action run
      [32m- execute /opt/gitlab/embedded/bin/createdb --port 5432 -h /var/opt/gitlab/postgresql -O gitlab gitlabhq_production[0m
[0m    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run
        * execute[enable pg_trgm extension (postgresql)] action run
          [execute] CREATE EXTENSION
          [32m- execute /opt/gitlab/bin/gitlab-psql -d gitlabhq_production -c "CREATE EXTENSION IF NOT EXISTS pg_trgm"[0m
[0m      
[0m    
[0m    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run
        * execute[enable btree_gist extension (postgresql)] action run
          [execute] CREATE EXTENSION
          [32m- execute /opt/gitlab/bin/gitlab-psql -d gitlabhq_production -c "CREATE EXTENSION IF NOT EXISTS btree_gist"[0m
[0m      
[0m    
[0m  
[0m  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)
  * execute[reload postgresql] action nothing (skipped due to action :nothing)
  * execute[start postgresql] action nothing (skipped due to action :nothing)
Recipe: gitlab::database_migrations[0m
  * bash[migrate gitlab-rails database] action run
    [execute] psql:/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql:9: NOTICE:  extension "btree_gist" already exists, skipping
              psql:/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql:11: NOTICE:  extension "pg_trgm" already exists, skipping
              
              == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/001_application_settings.rb
              Creating the default ApplicationSetting record.
              
              == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/002_admin.rb
              Administrator account created:
              
              login:    root
              password: You'll be prompted to create one on your first visit.
              
              
              == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/010_settings.rb
              
              == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/998_gitlab_instance_administration_project.rb
              Successfully created self monitoring project.
              
              == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/999_common_metrics.rb
    [32m- execute "bash"  "/tmp/chef-script20220501-32-tuqcmy"[0m
[0mRecipe: gitlab::gitlab-rails[0m
  * execute[clear the gitlab-rails cache] action run
    [32m- execute /opt/gitlab/bin/gitlab-rake cache:clear[0m
[0mRecipe: gitlab::logrotate_folders_and_configs[0m
  * directory[/var/opt/gitlab/logrotate] action create
    [32m- create new directory /var/opt/gitlab/logrotate[0m
    [32m- change mode from '' to '0700'[0m
[0m  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create
    [32m- create new directory /var/opt/gitlab/logrotate/logrotate.d[0m
    [32m- change mode from '' to '0700'[0m
[0m  * directory[/var/log/gitlab/logrotate] action create
    [32m- create new directory /var/log/gitlab/logrotate[0m
    [32m- change mode from '' to '0700'[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.conf[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.conf from none to bf32ec[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.conf	2022-05-01 19:52:22.395885164 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/.chef-logrotate20220501-32-joaw7m.conf	2022-05-01 19:52:22.395885164 +0000[0m
    [37m@@ -1,11 +1,22 @@[0m
    [37m+# Generated by 'gitlab-ctl reconfigure'.[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+include /var/opt/gitlab/logrotate/logrotate.d/nginx[0m
    [37m+include /var/opt/gitlab/logrotate/logrotate.d/puma[0m
    [37m+include /var/opt/gitlab/logrotate/logrotate.d/actioncable[0m
    [37m+include /var/opt/gitlab/logrotate/logrotate.d/unicorn[0m
    [37m+include /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails[0m
    [37m+include /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell[0m
    [37m+include /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse[0m
    [37m+include /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages[0m
    [32m- change mode from '' to '0644'[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.d/nginx[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.d/nginx from none to 85cdbe[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.d/nginx	2022-05-01 19:52:22.404885258 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/logrotate.d/.chef-nginx20220501-32-vex7ql	2022-05-01 19:52:22.404885258 +0000[0m
    [37m@@ -1,16 +1,32 @@[0m
    [37m+# Generated by gitlab-ctl reconfigure[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+/var/log/gitlab/nginx/*.log {[0m
    [37m+  su root root[0m
    [37m+  daily[0m
    [37m+  [0m
    [37m+  [0m
    [37m+  rotate 30[0m
    [37m+  compress[0m
    [37m+  copytruncate[0m
    [37m+  missingok[0m
    [37m+  postrotate[0m
    [37m+    [0m
    [37m+  endscript[0m
    [37m+}[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.d/puma[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.d/puma from none to 488f46[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.d/puma	2022-05-01 19:52:22.419885415 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/logrotate.d/.chef-puma20220501-32-1uekbxd	2022-05-01 19:52:22.419885415 +0000[0m
    [37m@@ -1,16 +1,32 @@[0m
    [37m+# Generated by gitlab-ctl reconfigure[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+/var/log/gitlab/puma/*.log {[0m
    [37m+  su git git[0m
    [37m+  daily[0m
    [37m+  [0m
    [37m+  [0m
    [37m+  rotate 30[0m
    [37m+  compress[0m
    [37m+  copytruncate[0m
    [37m+  missingok[0m
    [37m+  postrotate[0m
    [37m+    [0m
    [37m+  endscript[0m
    [37m+}[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.d/actioncable] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.d/actioncable[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.d/actioncable from none to cc6937[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.d/actioncable	2022-05-01 19:52:22.428885508 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/logrotate.d/.chef-actioncable20220501-32-16dnjec	2022-05-01 19:52:22.428885508 +0000[0m
    [37m@@ -1,16 +1,32 @@[0m
    [37m+# Generated by gitlab-ctl reconfigure[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+/var/log/gitlab/actioncable/*.log {[0m
    [37m+  su git git[0m
    [37m+  daily[0m
    [37m+  [0m
    [37m+  [0m
    [37m+  rotate 30[0m
    [37m+  compress[0m
    [37m+  copytruncate[0m
    [37m+  missingok[0m
    [37m+  postrotate[0m
    [37m+    [0m
    [37m+  endscript[0m
    [37m+}[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.d/unicorn] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.d/unicorn[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.d/unicorn from none to 5bb132[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.d/unicorn	2022-05-01 19:52:22.437885602 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/logrotate.d/.chef-unicorn20220501-32-15e9lap	2022-05-01 19:52:22.437885602 +0000[0m
    [37m@@ -1,16 +1,32 @@[0m
    [37m+# Generated by gitlab-ctl reconfigure[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+/var/log/gitlab/unicorn/*.log {[0m
    [37m+  su git git[0m
    [37m+  daily[0m
    [37m+  [0m
    [37m+  [0m
    [37m+  rotate 30[0m
    [37m+  compress[0m
    [37m+  copytruncate[0m
    [37m+  missingok[0m
    [37m+  postrotate[0m
    [37m+    [0m
    [37m+  endscript[0m
    [37m+}[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails from none to 46f691[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails	2022-05-01 19:52:22.446885696 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-rails20220501-32-1p5xekv	2022-05-01 19:52:22.446885696 +0000[0m
    [37m@@ -1,16 +1,32 @@[0m
    [37m+# Generated by gitlab-ctl reconfigure[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+/var/log/gitlab/gitlab-rails/*.log {[0m
    [37m+  su git git[0m
    [37m+  daily[0m
    [37m+  [0m
    [37m+  [0m
    [37m+  rotate 30[0m
    [37m+  compress[0m
    [37m+  copytruncate[0m
    [37m+  missingok[0m
    [37m+  postrotate[0m
    [37m+    [0m
    [37m+  endscript[0m
    [37m+}[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell from none to d296e1[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell	2022-05-01 19:52:22.454885779 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-shell20220501-32-b000a4	2022-05-01 19:52:22.454885779 +0000[0m
    [37m@@ -1,16 +1,32 @@[0m
    [37m+# Generated by gitlab-ctl reconfigure[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+/var/log/gitlab/gitlab-shell//*.log {[0m
    [37m+  su git git[0m
    [37m+  daily[0m
    [37m+  [0m
    [37m+  [0m
    [37m+  rotate 30[0m
    [37m+  compress[0m
    [37m+  copytruncate[0m
    [37m+  missingok[0m
    [37m+  postrotate[0m
    [37m+    [0m
    [37m+  endscript[0m
    [37m+}[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse from none to 6f35eb[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse	2022-05-01 19:52:22.466885905 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-workhorse20220501-32-1kk07c9	2022-05-01 19:52:22.466885905 +0000[0m
    [37m@@ -1,16 +1,32 @@[0m
    [37m+# Generated by gitlab-ctl reconfigure[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+/var/log/gitlab/gitlab-workhorse/*.log {[0m
    [37m+  su git git[0m
    [37m+  daily[0m
    [37m+  [0m
    [37m+  [0m
    [37m+  rotate 30[0m
    [37m+  compress[0m
    [37m+  copytruncate[0m
    [37m+  missingok[0m
    [37m+  postrotate[0m
    [37m+    [0m
    [37m+  endscript[0m
    [37m+}[0m
[0m  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create
    [32m- create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages[0m
    [32m- update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages from none to 59438b[0m
    [37m--- /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages	2022-05-01 19:52:22.475885998 +0000[0m
    [37m+++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-pages20220501-32-1djdpvc	2022-05-01 19:52:22.475885998 +0000[0m
    [37m@@ -1,16 +1,32 @@[0m
    [37m+# Generated by gitlab-ctl reconfigure[0m
    [37m+# Modifications will be overwritten![0m
    [37m+[0m
    [37m+/var/log/gitlab/gitlab-pages/*.log {[0m
    [37m+  su git git[0m
    [37m+  daily[0m
    [37m+  [0m
    [37m+  [0m
    [37m+  rotate 30[0m
    [37m+  compress[0m
    [37m+  copytruncate[0m
    [37m+  missingok[0m
    [37m+  postrotate[0m
    [37m+    [0m
    [37m+  endscript[0m
    [37m+}[0m
[0mRecipe: gitlab::unicorn_disable[0m
  * unicorn_service[unicorn] action disable
  Recipe: <Dynamically Defined Resource>[0m
    * service[unicorn] action nothing (skipped due to action :nothing)
    * runit_service[unicorn] action disable
      * ruby_block[disable unicorn] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: gitlab::unicorn_disable[0m
  * consul_service[rails] action delete (skipped due to not_if)
Recipe: gitlab::puma[0m
  * directory[/var/log/gitlab/puma] action create
    [32m- create new directory /var/log/gitlab/puma[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[/opt/gitlab/var/puma] action create
    [32m- create new directory /opt/gitlab/var/puma[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create
    [32m- create new directory /var/opt/gitlab/gitlab-rails/sockets[0m
    [32m- change mode from '' to '0750'[0m
    [32m- change owner from '' to 'git'[0m
    [32m- change group from '' to 'gitlab-www'[0m
[0m  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)
    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
      [32m- create new file /var/opt/gitlab/gitlab-rails/etc/puma.rb[0m
      [32m- update content in file /var/opt/gitlab/gitlab-rails/etc/puma.rb from none to fedfde[0m
      [37m--- /var/opt/gitlab/gitlab-rails/etc/puma.rb	2022-05-01 19:52:22.493886186 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-rails/etc/.chef-puma20220501-32-1f8jrhd.rb	2022-05-01 19:52:22.493886186 +0000[0m
      [37m@@ -1,88 +1,176 @@[0m
      [37m+# frozen_string_literal: true[0m
      [37m+[0m
      [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
      [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
      [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
      [37m+[0m
      [37m+# Load "path" as a rackup file.[0m
      [37m+#[0m
      [37m+# The default is "config.ru".[0m
      [37m+#[0m
      [37m+environment 'production'[0m
      [37m+rackup '/opt/gitlab/embedded/service/gitlab-rails/config.ru'[0m
      [37m+pidfile '/opt/gitlab/var/puma/puma.pid'[0m
      [37m+state_path '/opt/gitlab/var/puma/puma.state'[0m
      [37m+[0m
      [37m+stdout_redirect '/var/log/gitlab/puma/puma_stdout.log', '/var/log/gitlab/puma/puma_stderr.log', true[0m
      [37m+[0m
      [37m+# Configure "min" to be the minimum number of threads to use to answer[0m
      [37m+# requests and "max" the maximum.[0m
      [37m+#[0m
      [37m+# The default is "0, 16".[0m
      [37m+#[0m
      [37m+threads 4, 4[0m
      [37m+[0m
      [37m+# By default, workers accept all requests and queue them to pass to handlers.[0m
      [37m+# When false, workers accept the number of simultaneous requests configured.[0m
      [37m+#[0m
      [37m+# Queueing requests generally improves performance, but can cause deadlocks if[0m
      [37m+# the app is waiting on a request to itself. See https://github.com/puma/puma/issues/612[0m
      [37m+#[0m
      [37m+# When set to false this may require a reverse proxy to handle slow clients and[0m
      [37m+# queue requests before they reach puma. This is due to disabling HTTP keepalive[0m
      [37m+queue_requests false[0m
      [37m+[0m
      [37m+# Bind the server to "url". "tcp://", "unix://" and "ssl://" are the only[0m
      [37m+# accepted protocols.[0m
      [37m+bind 'unix:///var/opt/gitlab/gitlab-rails/sockets/gitlab.socket'[0m
      [37m+[0m
      [37m+bind 'tcp://127.0.0.1:8080'[0m
      [37m+[0m
      [37m+directory '/var/opt/gitlab/gitlab-rails/working'[0m
      [37m+[0m
      [37m+workers 8[0m
      [37m+[0m
      [37m+require_relative "/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/cluster/lifecycle_events"[0m
      [37m+require_relative "/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/cluster/puma_worker_killer_initializer"[0m
      [37m+[0m
      [37m+on_restart do[0m
      [37m+  # Signal application hooks that we're about to restart[0m
      [37m+  Gitlab::Cluster::LifecycleEvents.do_before_master_restart[0m
      [37m+end[0m
      [37m+[0m
      [37m+options = { workers: 8 }[0m
      [37m+[0m
      [37m+before_fork do[0m
      [37m+  # Signal to the puma killer[0m
      [37m+  Gitlab::Cluster::PumaWorkerKillerInitializer.start(options) unless ENV['DISABLE_PUMA_WORKER_KILLER'][0m
      [37m+[0m
      [37m+  # Signal application hooks that we're about to fork[0m
      [37m+  Gitlab::Cluster::LifecycleEvents.do_before_fork[0m
      [37m+end[0m
      [37m+[0m
      [37m+Gitlab::Cluster::LifecycleEvents.set_puma_options options[0m
      [37m+on_worker_boot do[0m
      [37m+  # Signal application hooks of worker start[0m
      [37m+  Gitlab::Cluster::LifecycleEvents.do_worker_start[0m
      [37m+end[0m
      [37m+[0m
      [37m+# Preload the application before starting the workers; this conflicts with[0m
      [37m+# phased restart feature. (off by default)[0m
      [37m+[0m
      [37m+preload_app![0m
      [37m+[0m
      [37m+tag 'gitlab-puma-worker'[0m
      [37m+[0m
      [37m+# Verifies that all workers have checked in to the master process within[0m
      [37m+# the given timeout. If not the worker process will be restarted. Default[0m
      [37m+# value is 60 seconds.[0m
      [37m+#[0m
      [37m+worker_timeout 60[0m
      [37m+[0m
      [37m+# Use customised JSON formatter for Puma log[0m
      [37m+require_relative "/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/puma_logging/json_formatter"[0m
      [37m+[0m
      [37m+json_formatter = Gitlab::PumaLogging::JSONFormatter.new[0m
      [37m+log_formatter do |str|[0m
      [37m+    json_formatter.call(str)[0m
      [37m+end[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m  
[0m  * service[puma] action nothing (skipped due to action :nothing)
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create
      [32m- Would create new directory /opt/gitlab/sv/puma[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/puma/run] action create
      [33m* Parent directory /opt/gitlab/sv/puma does not exist.[0m
      [33m* Assuming directory /opt/gitlab/sv/puma would have been created[0m
      [32m- Would create new file /opt/gitlab/sv/puma/run[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/puma/log] action create
      [32m- Would create new directory /opt/gitlab/sv/puma/log[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/puma/log/main] action create
      [32m- Would create new directory /opt/gitlab/sv/puma/log/main[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/puma/log/config] action create
      [33m* Parent directory /opt/gitlab/sv/puma/log does not exist.[0m
      [33m* Assuming directory /opt/gitlab/sv/puma/log would have been created[0m
      [32m- Would create new file /opt/gitlab/sv/puma/log/config[0m
      [32m- Would change mode from '' to '0644'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_puma] action create
      [32m- Would execute the ruby block verify_chown_persisted_on_puma[0m
[0m    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create
      [32m- Would create symlink at /var/log/gitlab/puma/config to /opt/gitlab/sv/puma/log/config[0m
[0m    * template[/opt/gitlab/sv/puma/log/run] action create
      [33m* Parent directory /opt/gitlab/sv/puma/log does not exist.[0m
      [33m* Assuming directory /opt/gitlab/sv/puma/log would have been created[0m
      [32m- Would create new file /opt/gitlab/sv/puma/log/run[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/puma/env] action create
      [33m* Parent directory /opt/gitlab/sv/puma does not exist, cannot create /opt/gitlab/sv/puma/env[0m
      [33m* Assuming directory /opt/gitlab/sv/puma would have been created[0m
      [32m- Would create new directory /opt/gitlab/sv/puma/env[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create
      [33m* Parent directory /opt/gitlab/sv/puma does not exist, cannot create /opt/gitlab/sv/puma/control[0m
      [33m* Assuming directory /opt/gitlab/sv/puma would have been created[0m
      [32m- Would create new directory /opt/gitlab/sv/puma/control[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/puma/control/t] action create
      [33m* Parent directory /opt/gitlab/sv/puma/control does not exist.[0m
      [33m* Assuming directory /opt/gitlab/sv/puma/control would have been created[0m
      [32m- Would create new file /opt/gitlab/sv/puma/control/t[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/puma/control/h] action create
      [33m* Parent directory /opt/gitlab/sv/puma/control does not exist.[0m
      [33m* Assuming directory /opt/gitlab/sv/puma/control would have been created[0m
      [32m- Would create new file /opt/gitlab/sv/puma/control/h[0m
      [32m- Would change mode from '' to '0755'[0m
      [32m- Would change owner from '' to 'root'[0m
      [32m- Would change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/puma] action create
      [32m- Would create symlink at /opt/gitlab/init/puma to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      [32m- Would execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      [32m- Would execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create
      [32m- Would create symlink at /opt/gitlab/service/puma to /opt/gitlab/sv/puma[0m
[0m    * ruby_block[wait for puma service socket] action run
      [32m- Would execute the ruby block wait for puma service socket[0m
[0m  
[0mRecipe: gitlab::unicorn_disable[0m
  * unicorn_service[unicorn] action stop
  Recipe: <Dynamically Defined Resource>[0m
    * service[unicorn] action nothing (skipped due to action :nothing)
    * runit_service[unicorn] action stop (up to date)
     (up to date)
Recipe: gitlab::puma[0m
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create
      [32m- create new directory /opt/gitlab/sv/puma[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/puma/run] action create
      [32m- create new file /opt/gitlab/sv/puma/run[0m
      [32m- update content in file /opt/gitlab/sv/puma/run from none to ca09fe[0m
      [37m--- /opt/gitlab/sv/puma/run	2022-05-01 19:52:22.585887145 +0000[0m
      [37m+++ /opt/gitlab/sv/puma/.chef-run20220501-32-hv3028	2022-05-01 19:52:22.585887145 +0000[0m
      [37m@@ -1,21 +1,42 @@[0m
      [37m+#!/bin/bash[0m
      [37m+[0m
      [37m+# Let runit capture all script error messages[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+# Setup run directory.[0m
      [37m+mkdir -p /dev/shm/gitlab/puma[0m
      [37m+chmod 0700 /dev/shm/gitlab/puma[0m
      [37m+chown git /dev/shm/gitlab/puma[0m
      [37m+export prometheus_run_dir='/dev/shm/gitlab/puma'[0m
      [37m+[0m
      [37m+[0m
      [37m+[0m
      [37m+[0m
      [37m+exec chpst -P \[0m
      [37m+  -u git:git \[0m
      [37m+  -U git:git \[0m
      [37m+  -e /opt/gitlab/etc/gitlab-rails/env \[0m
      [37m+  /usr/bin/env \[0m
      [37m+    prometheus_multiproc_dir="${prometheus_run_dir}" \[0m
      [37m+    /opt/gitlab/embedded/bin/bundle exec puma -C /var/opt/gitlab/gitlab-rails/etc/puma.rb[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/puma/log] action create
      [32m- create new directory /opt/gitlab/sv/puma/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/puma/log/main] action create
      [32m- create new directory /opt/gitlab/sv/puma/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/puma/log/config] action create
      [32m- create new file /opt/gitlab/sv/puma/log/config[0m
      [32m- update content in file /opt/gitlab/sv/puma/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/puma/log/config	2022-05-01 19:52:22.598887281 +0000[0m
      [37m+++ /opt/gitlab/sv/puma/log/.chef-config20220501-32-1kbjpkp	2022-05-01 19:52:22.598887281 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_puma] action create
      [32m- execute the ruby block verify_chown_persisted_on_puma[0m
[0m    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create
      [32m- create symlink at /var/log/gitlab/puma/config to /opt/gitlab/sv/puma/log/config[0m
[0m    * template[/opt/gitlab/sv/puma/log/run] action create
      [32m- create new file /opt/gitlab/sv/puma/log/run[0m
      [32m- update content in file /opt/gitlab/sv/puma/log/run from none to a83bb7[0m
      [37m--- /opt/gitlab/sv/puma/log/run	2022-05-01 19:52:22.608887385 +0000[0m
      [37m+++ /opt/gitlab/sv/puma/log/.chef-run20220501-32-17i26ri	2022-05-01 19:52:22.608887385 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/puma[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/puma/env] action create
      [32m- create new directory /opt/gitlab/sv/puma/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create
      [32m- create new directory /opt/gitlab/sv/puma/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/puma/control/t] action create
      [32m- create new file /opt/gitlab/sv/puma/control/t[0m
      [32m- update content in file /opt/gitlab/sv/puma/control/t from none to d8e9e7[0m
      [37m--- /opt/gitlab/sv/puma/control/t	2022-05-01 19:52:22.621887521 +0000[0m
      [37m+++ /opt/gitlab/sv/puma/control/.chef-t20220501-32-1xf9v7	2022-05-01 19:52:22.621887521 +0000[0m
      [37m@@ -1,3 +1,6 @@[0m
      [37m+#!/bin/sh[0m
      [37m+echo "Received TERM from runit, sending to process group (-PID)"[0m
      [37m+kill -- -$(cat /opt/gitlab/service/puma/supervise/pid)[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/puma/control/h] action create
      [32m- create new file /opt/gitlab/sv/puma/control/h[0m
      [32m- update content in file /opt/gitlab/sv/puma/control/h from none to 22e721[0m
      [37m--- /opt/gitlab/sv/puma/control/h	2022-05-01 19:52:22.634887657 +0000[0m
      [37m+++ /opt/gitlab/sv/puma/control/.chef-h20220501-32-1n5h38m	2022-05-01 19:52:22.634887657 +0000[0m
      [37m@@ -1,47 +1,94 @@[0m
      [37m+#!/bin/sh[0m
      [37m+[0m
      [37m+# This control handler is meant to be invoked by omnibus-gitlab via Runit[0m
      [37m+[0m
      [37m+# Let runit capture all script error messages[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+PID=$(cat /opt/gitlab/service/puma/supervise/pid)[0m
      [37m+[0m
      [37m+readonly puma_graceful_shutdown_sec=90[0m
      [37m+readonly puma_forceful_shutdown_sec=20[0m
      [37m+readonly puma_kill_shutdown_sec=10[0m
      [37m+[0m
      [37m+echo "Received HUP from runit, sending INT signal to perform graceful restart"[0m
      [37m+[0m
      [37m+signal() {[0m
      [37m+  local pid="$1"[0m
      [37m+  local signal="$2"[0m
      [37m+  local tries="$3"[0m
      [37m+[0m
      [37m+  echo "Sending $signal signal to Puma $pid..."[0m
      [37m+  kill "-$signal" "$pid"[0m
      [37m+[0m
      [37m+  for i in $(seq 1 "$tries"); do[0m
      [37m+    echo "Waiting for Puma $pid to exit ($i)..."[0m
      [37m+    if ! kill -0 "$pid"; then[0m
      [37m+      echo "Puma $pid did exit."[0m
      [37m+      return 0[0m
      [37m+    fi[0m
      [37m+[0m
      [37m+    sleep 1[0m
      [37m+  done[0m
      [37m+[0m
      [37m+  echo "Puma $pid did not exit after $signal."[0m
      [37m+  return 1[0m
      [37m+}[0m
      [37m+[0m
      [37m+([0m
      [37m+  # we run it in subshell, as `runit` requires[0m
      [37m+  # the process it runs to exit in order to reap[0m
      [37m+  # the service[0m
      [37m+  signal "$PID" "INT" "$puma_graceful_shutdown_sec" ||[0m
      [37m+  signal "$PID" "TERM" "$puma_forceful_shutdown_sec" ||[0m
      [37m+  signal "$PID" "KILL" "$puma_kill_shutdown_sec"[0m
      [37m+) &[0m
      [37m+[0m
      [37m+exit 0[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/puma] action create
      [32m- create symlink at /opt/gitlab/init/puma to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/puma] action create (up to date)
      * template[/opt/gitlab/sv/puma/run] action create (up to date)
      * directory[/opt/gitlab/sv/puma/log] action create (up to date)
      * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
      * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/puma/config] action create (up to date)
      * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/puma/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/puma/control] action create (up to date)
      * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
      * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
      * link[/opt/gitlab/init/puma] action create (up to date)
      * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/puma] action create
        [32m- create symlink at /opt/gitlab/service/puma to /opt/gitlab/sv/puma[0m
[0m      * ruby_block[wait for puma service socket] action run
        [32m- execute the ruby block wait for puma service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/puma] action create (up to date)
      * template[/opt/gitlab/sv/puma/run] action create (up to date)
      * directory[/opt/gitlab/sv/puma/log] action create (up to date)
      * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
      * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/puma/config] action create (up to date)
      * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/puma/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/puma/control] action create (up to date)
      * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
      * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
      * link[/opt/gitlab/init/puma] action create (up to date)
      * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/puma] action create (up to date)
      * ruby_block[wait for puma service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create (up to date)
    * ruby_block[wait for puma service socket] action run (skipped due to not_if)
  
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start puma] action run
    [execute] ok: run: puma: (pid 768) 2s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start puma[0m
[0m  * consul_service[rails] action delete
    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab::sidekiq-cluster[0m
  * sidekiq_service[sidekiq] action enable
    * directory[/var/log/gitlab/sidekiq] action create
      [32m- create new directory /var/log/gitlab/sidekiq[0m
      [32m- change mode from '' to '0700'[0m
      [32m- change owner from '' to 'git'[0m
[0m  Recipe: <Dynamically Defined Resource>[0m
    * service[sidekiq] action nothing (skipped due to action :nothing)
    * runit_service[sidekiq] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/sidekiq] action create
        [32m- create new directory /opt/gitlab/sv/sidekiq[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * template[/opt/gitlab/sv/sidekiq/run] action create
        [32m- create new file /opt/gitlab/sv/sidekiq/run[0m
        [32m- update content in file /opt/gitlab/sv/sidekiq/run from none to d94e86[0m
        [37m--- /opt/gitlab/sv/sidekiq/run	2022-05-01 19:52:25.531917862 +0000[0m
        [37m+++ /opt/gitlab/sv/sidekiq/.chef-run20220501-32-n7eg27	2022-05-01 19:52:25.531917862 +0000[0m
        [37m@@ -1,27 +1,54 @@[0m
        [37m+#!/bin/sh[0m
        [37m+[0m
        [37m+cd /var/opt/gitlab/gitlab-rails/working[0m
        [37m+[0m
        [37m+exec 2>&1[0m
        [37m+# Setup run directory.[0m
        [37m+mkdir -p /dev/shm/gitlab/sidekiq[0m
        [37m+rm /dev/shm/gitlab/sidekiq/*.db 2> /dev/null[0m
        [37m+chmod 0700 /dev/shm/gitlab/sidekiq[0m
        [37m+chown git /dev/shm/gitlab/sidekiq[0m
        [37m+export prometheus_run_dir='/dev/shm/gitlab/sidekiq'[0m
        [37m+[0m
        [37m+[0m
        [37m+[0m
        [37m+exec chpst -e /opt/gitlab/etc/gitlab-rails/env -P \[0m
        [37m+  -U git:git \[0m
        [37m+  -u git:git \[0m
        [37m+  /usr/bin/env \[0m
        [37m+    prometheus_multiproc_dir="${prometheus_run_dir}" \[0m
        [37m+    /opt/gitlab/embedded/service/gitlab-rails/bin/sidekiq-cluster \[0m
        [37m+      -e production \[0m
        [37m+      -r /opt/gitlab/embedded/service/gitlab-rails \[0m
        [37m+      -m 50 \[0m
        [37m+      --timeout 25 \[0m
        [37m+        "*" \[0m
        [37m+[0m
        [37m+# Do not remove this line; it prevents trouble with the trailing backslashes above.[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * directory[/opt/gitlab/sv/sidekiq/log] action create
        [32m- create new directory /opt/gitlab/sv/sidekiq/log[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * directory[/opt/gitlab/sv/sidekiq/log/main] action create
        [32m- create new directory /opt/gitlab/sv/sidekiq/log/main[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * template[/opt/gitlab/sv/sidekiq/log/config] action create
        [32m- create new file /opt/gitlab/sv/sidekiq/log/config[0m
        [32m- update content in file /opt/gitlab/sv/sidekiq/log/config from none to 623c00[0m
        [37m--- /opt/gitlab/sv/sidekiq/log/config	2022-05-01 19:52:25.544917998 +0000[0m
        [37m+++ /opt/gitlab/sv/sidekiq/log/.chef-config20220501-32-gk1ucg	2022-05-01 19:52:25.544917998 +0000[0m
        [37m@@ -1,6 +1,12 @@[0m
        [37m+s209715200[0m
        [37m+n30[0m
        [37m+t86400[0m
        [37m+!gzip[0m
        [37m+[0m
        [37m+[0m
        [32m- change mode from '' to '0644'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * ruby_block[verify_chown_persisted_on_sidekiq] action create
        [32m- execute the ruby block verify_chown_persisted_on_sidekiq[0m
[0m      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/sidekiq/config] action create
        [32m- create symlink at /var/log/gitlab/sidekiq/config to /opt/gitlab/sv/sidekiq/log/config[0m
[0m      * template[/opt/gitlab/sv/sidekiq/log/run] action create
        [32m- create new file /opt/gitlab/sv/sidekiq/log/run[0m
        [32m- update content in file /opt/gitlab/sv/sidekiq/log/run from none to 0c55bd[0m
        [37m--- /opt/gitlab/sv/sidekiq/log/run	2022-05-01 19:52:25.560918165 +0000[0m
        [37m+++ /opt/gitlab/sv/sidekiq/log/.chef-run20220501-32-4jztf	2022-05-01 19:52:25.560918165 +0000[0m
        [37m@@ -1,2 +1,4 @@[0m
        [37m+#!/bin/sh[0m
        [37m+exec svlogd /var/log/gitlab/sidekiq[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * directory[/opt/gitlab/sv/sidekiq/env] action create
        [32m- create new directory /opt/gitlab/sv/sidekiq/env[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/sidekiq/control] action create
        [32m- create new directory /opt/gitlab/sv/sidekiq/control[0m
        [32m- change mode from '' to '0755'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      * link[/opt/gitlab/init/sidekiq] action create
        [32m- create symlink at /opt/gitlab/init/sidekiq to /opt/gitlab/embedded/bin/sv[0m
[0m      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run (skipped due to only_if)
      * ruby_block[reload_log_service] action create
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)
        * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
        * link[/var/log/gitlab/sidekiq/config] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
        * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
        * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
        * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
        * link[/opt/gitlab/init/sidekiq] action create (up to date)
        * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/service] action create (up to date)
        * link[/opt/gitlab/service/sidekiq] action create
          [32m- create symlink at /opt/gitlab/service/sidekiq to /opt/gitlab/sv/sidekiq[0m
[0m        * ruby_block[wait for sidekiq service socket] action run
          [32m- execute the ruby block wait for sidekiq service socket[0m
[0m        [32m- execute the ruby block reload_log_service[0m
[0m      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)
        * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
        * link[/var/log/gitlab/sidekiq/config] action create (up to date)
        * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
        * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
        * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
        * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
        * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
        * link[/opt/gitlab/init/sidekiq] action create (up to date)
        * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
        * directory[/opt/gitlab/service] action create (up to date)
        * link[/opt/gitlab/service/sidekiq] action create (up to date)
        * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)
        [32m- execute the ruby block restart_log_service[0m
[0m      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/sidekiq] action create (up to date)
      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)
    
[0m    * execute[/opt/gitlab/bin/gitlab-ctl start sidekiq] action run
      [execute] ok: run: sidekiq: (pid 786) 2s
      [32m- execute /opt/gitlab/bin/gitlab-ctl start sidekiq[0m
[0m  
[0mRecipe: gitlab::sidekiq-cluster[0m
  * consul_service[sidekiq] action delete
    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)
     (up to date)
  * service[sidekiq-cluster] action nothing (skipped due to action :nothing)
  * runit_service[sidekiq-cluster] action disable
    * ruby_block[disable sidekiq-cluster] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::gitlab-workhorse[0m
  * directory[/var/opt/gitlab/gitlab-workhorse] action create
    [32m- create new directory /var/opt/gitlab/gitlab-workhorse[0m
    [32m- change mode from '' to '0750'[0m
    [32m- change owner from '' to 'git'[0m
    [32m- change group from '' to 'gitlab-www'[0m
[0m  * directory[/var/log/gitlab/gitlab-workhorse] action create
    [32m- create new directory /var/log/gitlab/gitlab-workhorse[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[/opt/gitlab/etc/gitlab-workhorse] action create
    [32m- create new directory /opt/gitlab/etc/gitlab-workhorse[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create
    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create
      [32m- create new directory /opt/gitlab/etc/gitlab-workhorse/env[0m
[0m    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create
      [32m- create new file /opt/gitlab/etc/gitlab-workhorse/env/PATH[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-workhorse/env/PATH from none to d5dc07[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create
      [32m- create new file /opt/gitlab/etc/gitlab-workhorse/env/HOME[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-workhorse/env/HOME from none to 205bb9[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create
      [32m- create new file /opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR[0m
      [32m- update content in file /opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR from none to 4f45cf[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-workhorse] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-workhorse] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-workhorse[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create
      [32m- create new file /opt/gitlab/sv/gitlab-workhorse/run[0m
      [32m- update content in file /opt/gitlab/sv/gitlab-workhorse/run from none to a979e8[0m
      [37m--- /opt/gitlab/sv/gitlab-workhorse/run	2022-05-01 19:52:31.465979732 +0000[0m
      [37m+++ /opt/gitlab/sv/gitlab-workhorse/.chef-run20220501-32-1t1iini	2022-05-01 19:52:31.465979732 +0000[0m
      [37m@@ -1,27 +1,54 @@[0m
      [37m+#!/bin/sh[0m
      [37m+set -e # fail on errors[0m
      [37m+[0m
      [37m+# Redirect stderr -> stdout[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+[0m
      [37m+[0m
      [37m+cd /var/opt/gitlab/gitlab-workhorse[0m
      [37m+[0m
      [37m+exec chpst -e /opt/gitlab/etc/gitlab-workhorse/env -P \[0m
      [37m+  -U git:git \[0m
      [37m+  -u git:git \[0m
      [37m+  /opt/gitlab/embedded/bin/gitlab-workhorse \[0m
      [37m+    -listenNetwork unix \[0m
      [37m+    -listenUmask 0 \[0m
      [37m+    -listenAddr /var/opt/gitlab/gitlab-workhorse/socket \[0m
      [37m+    -authBackend http://localhost:8080 \[0m
      [37m+    -authSocket /var/opt/gitlab/gitlab-rails/sockets/gitlab.socket \[0m
      [37m+    -documentRoot /opt/gitlab/embedded/service/gitlab-rails/public \[0m
      [37m+    -pprofListenAddr ''\[0m
      [37m+    -prometheusListenAddr localhost:9229 \[0m
      [37m+    -secretPath /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret \[0m
      [37m+    -logFormat json \[0m
      [37m+    -config config.toml \[0m
      [37m+[0m
      [37m+# Do not remove this line; it prevents trouble with the trailing backslashes above.[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-workhorse/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-workhorse/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create
      [32m- create new file /opt/gitlab/sv/gitlab-workhorse/log/config[0m
      [32m- update content in file /opt/gitlab/sv/gitlab-workhorse/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/gitlab-workhorse/log/config	2022-05-01 19:52:31.479979878 +0000[0m
      [37m+++ /opt/gitlab/sv/gitlab-workhorse/log/.chef-config20220501-32-gtxrkr	2022-05-01 19:52:31.478979867 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action create
      [32m- execute the ruby block verify_chown_persisted_on_gitlab-workhorse[0m
[0m    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-workhorse/config] action create
      [32m- create symlink at /var/log/gitlab/gitlab-workhorse/config to /opt/gitlab/sv/gitlab-workhorse/log/config[0m
[0m    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create
      [32m- create new file /opt/gitlab/sv/gitlab-workhorse/log/run[0m
      [32m- update content in file /opt/gitlab/sv/gitlab-workhorse/log/run from none to 34ab60[0m
      [37m--- /opt/gitlab/sv/gitlab-workhorse/log/run	2022-05-01 19:52:31.489979982 +0000[0m
      [37m+++ /opt/gitlab/sv/gitlab-workhorse/log/.chef-run20220501-32-14u6jj	2022-05-01 19:52:31.489979982 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd /var/log/gitlab/gitlab-workhorse[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-workhorse/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-workhorse/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/gitlab-workhorse] action create
      [32m- create symlink at /opt/gitlab/init/gitlab-workhorse to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
      * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
      * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitlab-workhorse] action create
        [32m- create symlink at /opt/gitlab/service/gitlab-workhorse to /opt/gitlab/sv/gitlab-workhorse[0m
[0m      * ruby_block[wait for gitlab-workhorse service socket] action run
        [32m- execute the ruby block wait for gitlab-workhorse service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
      * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
      * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
      * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
  
[0m  * consul_service[workhorse] action delete
    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)
     (up to date)
  * version_file[Create version file for Workhorse] action create
    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create
      [32m- create new file /var/opt/gitlab/gitlab-workhorse/VERSION[0m
      [32m- update content in file /var/opt/gitlab/gitlab-workhorse/VERSION from none to aaca47[0m
      [37m--- /var/opt/gitlab/gitlab-workhorse/VERSION	2022-05-01 19:52:35.683023700 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-workhorse/.chef-VERSION20220501-32-7lkhkw	2022-05-01 19:52:35.683023700 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+gitlab-workhorse v8.46.0-20200920.201041[0m
[0m  
[0m  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create
    [32m- create new file /var/opt/gitlab/gitlab-workhorse/config.toml[0m
    [32m- update content in file /var/opt/gitlab/gitlab-workhorse/config.toml from none to 90963c[0m
    [37m--- /var/opt/gitlab/gitlab-workhorse/config.toml	2022-05-01 19:52:35.696023835 +0000[0m
    [37m+++ /var/opt/gitlab/gitlab-workhorse/.chef-config20220501-32-1kke6dn.toml	2022-05-01 19:52:35.696023835 +0000[0m
    [37m@@ -1,4 +1,8 @@[0m
    [37m+[redis][0m
    [37m+URL = "unix:/var/opt/gitlab/redis/redis.socket"[0m
    [37m+Password = ""[0m
    [37m+[0m
    [32m- change mode from '' to '0640'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'git'[0m
[0mRecipe: gitlab::mailroom_disable[0m
  * service[mailroom] action nothing (skipped due to action :nothing)
  * runit_service[mailroom] action disable
    * ruby_block[disable mailroom] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::nginx[0m
  * directory[/var/opt/gitlab/nginx] action create
    [32m- change mode from '0755' to '0750'[0m
    [32m- change owner from 'gitlab-www' to 'root'[0m
[0m  * directory[/var/opt/gitlab/nginx/conf] action create
    [32m- create new directory /var/opt/gitlab/nginx/conf[0m
    [32m- change mode from '' to '0750'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'gitlab-www'[0m
[0m  * directory[/var/log/gitlab/nginx] action create
    [32m- create new directory /var/log/gitlab/nginx[0m
    [32m- change mode from '' to '0750'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'gitlab-www'[0m
[0m  * link[/var/opt/gitlab/nginx/logs] action create
    [32m- create symlink at /var/opt/gitlab/nginx/logs to /var/log/gitlab/nginx[0m
[0m  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create
    [32m- create new file /var/opt/gitlab/nginx/conf/gitlab-http.conf[0m
    [32m- update content in file /var/opt/gitlab/nginx/conf/gitlab-http.conf from none to 7e80b3[0m
    [37m--- /var/opt/gitlab/nginx/conf/gitlab-http.conf	2022-05-01 19:52:35.718024065 +0000[0m
    [37m+++ /var/opt/gitlab/nginx/conf/.chef-gitlab-http20220501-32-c9j0ha.conf	2022-05-01 19:52:35.718024065 +0000[0m
    [37m@@ -1,158 +1,316 @@[0m
    [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
    [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
    [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
    [37m+[0m
    [37m+## GitLab[0m
    [37m+## Modified from https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/support/nginx/gitlab-ssl & https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/support/nginx/gitlab[0m
    [37m+##[0m
    [37m+## Lines starting with two hashes (##) are comments with information.[0m
    [37m+## Lines starting with one hash (#) are configuration parameters that can be uncommented.[0m
    [37m+##[0m
    [37m+##################################[0m
    [37m+##        CHUNKED TRANSFER      ##[0m
    [37m+##################################[0m
    [37m+##[0m
    [37m+## It is a known issue that Git-over-HTTP requires chunked transfer encoding [0][0m
    [37m+## which is not supported by Nginx < 1.3.9 [1]. As a result, pushing a large object[0m
    [37m+## with Git (i.e. a single large file) can lead to a 411 error. In theory you can get[0m
    [37m+## around this by tweaking this configuration file and either:[0m
    [37m+## - installing an old version of Nginx with the chunkin module [2] compiled in, or[0m
    [37m+## - using a newer version of Nginx.[0m
    [37m+##[0m
    [37m+## At the time of writing we do not know if either of these theoretical solutions works.[0m
    [37m+## As a workaround users can use Git over SSH to push large files.[0m
    [37m+##[0m
    [37m+## [0] https://git.kernel.org/cgit/git/git.git/tree/Documentation/technical/http-protocol.txt#n99[0m
    [37m+## [1] https://github.com/agentzh/chunkin-nginx-module#status[0m
    [37m+## [2] https://github.com/agentzh/chunkin-nginx-module[0m
    [37m+##[0m
    [37m+###################################[0m
    [37m+##         configuration         ##[0m
    [37m+###################################[0m
    [37m+[0m
    [37m+## Redirects all HTTP traffic to the HTTPS host[0m
    [37m+server {[0m
    [37m+  listen *:80;[0m
    [37m+[0m
    [37m+  server_name jenkins.local;[0m
    [37m+  server_tokens off; ## Don't show the nginx version number, a security best practice[0m
    [37m+[0m
    [37m+  location /.well-known {[0m
    [37m+    root /var/opt/gitlab/nginx/www/;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  location / {[0m
    [37m+    return 301 https://jenkins.local:8090$request_uri;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  # health checks configuration[0m
    [37m+  include /var/opt/gitlab/nginx/conf/gitlab-health.conf;[0m
    [37m+[0m
    [37m+  access_log  /var/log/gitlab/nginx/gitlab_access.log gitlab_access;[0m
    [37m+  error_log   /var/log/gitlab/nginx/gitlab_error.log;[0m
    [37m+}[0m
    [37m+[0m
    [37m+server {[0m
    [37m+  listen *:8090 ssl http2;[0m
    [37m+[0m
    [37m+[0m
    [37m+  server_name jenkins.local;[0m
    [37m+  server_tokens off; ## Don't show the nginx version number, a security best practice[0m
    [37m+[0m
    [37m+  ## Increase this if you want to upload large attachments[0m
    [37m+  ## Or if you want to accept large git objects over http[0m
    [37m+  client_max_body_size 0;[0m
    [37m+[0m
    [37m+  ## Strong SSL Security[0m
    [37m+  ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html & https://cipherli.st/[0m
    [37m+  ssl_certificate /etc/gitlab/ssl/jenkins.local.crt;[0m
    [37m+  ssl_certificate_key /etc/gitlab/ssl/jenkins.local.key;[0m
    [37m+[0m
    [37m+  # GitLab needs backwards compatible ciphers to retain compatibility with Java IDEs[0m
    [37m+  ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4';[0m
    [37m+  ssl_protocols  TLSv1.2 TLSv1.3;[0m
    [37m+  ssl_prefer_server_ciphers on;[0m
    [37m+  ssl_session_cache  builtin:1000  shared:SSL:10m;[0m
    [37m+  ssl_session_timeout  5m;[0m
    [37m+[0m
    [37m+[0m
    [37m+  ## Real IP Module Config[0m
    [37m+  ## http://nginx.org/en/docs/http/ngx_http_realip_module.html[0m
    [37m+[0m
    [37m+  ## HSTS Config[0m
    [37m+  ## https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/[0m
    [37m+  add_header Strict-Transport-Security "max-age=31536000";[0m
    [37m+[0m
    [37m+  add_header Referrer-Policy strict-origin-when-cross-origin;[0m
    [37m+[0m
    [37m+  ## Individual nginx logs for this GitLab vhost[0m
    [37m+  access_log  /var/log/gitlab/nginx/gitlab_access.log gitlab_access;[0m
    [37m+  error_log   /var/log/gitlab/nginx/gitlab_error.log;[0m
    [37m+[0m
    [37m+  if ($http_host = "") {[0m
    [37m+    set $http_host_with_default "jenkins.local:8090";[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  if ($http_host != "") {[0m
    [37m+    set $http_host_with_default $http_host;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  gzip on;[0m
    [37m+  gzip_static on;[0m
    [37m+  gzip_comp_level 2;[0m
    [37m+  gzip_http_version 1.1;[0m
    [37m+  gzip_vary on;[0m
    [37m+  gzip_disable "msie6";[0m
    [37m+  gzip_min_length 250;[0m
    [37m+  gzip_proxied no-cache no-store private expired auth;[0m
    [37m+  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;[0m
    [37m+[0m
    [37m+  ## https://github.com/gitlabhq/gitlabhq/issues/694[0m
    [37m+  ## Some requests take more than 30 seconds.[0m
    [37m+  proxy_read_timeout      3600;[0m
    [37m+  proxy_connect_timeout   300;[0m
    [37m+  proxy_redirect          off;[0m
    [37m+  proxy_http_version 1.1;[0m
    [37m+[0m
    [37m+  proxy_set_header Host $http_host_with_default;[0m
    [37m+  proxy_set_header X-Real-IP $remote_addr;[0m
    [37m+  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;[0m
    [37m+  proxy_set_header Upgrade $http_upgrade;[0m
    [37m+  proxy_set_header Connection $connection_upgrade;[0m
    [37m+  proxy_set_header X-Forwarded-Proto https;[0m
    [37m+  proxy_set_header X-Forwarded-Ssl on;[0m
    [37m+[0m
    [37m+  location ~ (/api/v\d/jobs/\d+/artifacts$|\.git/git-receive-pack$|\.git/gitlab-lfs/objects|\.git/info/lfs/objects/batch$) {[0m
    [37m+    proxy_cache off;[0m
    [37m+    proxy_pass http://gitlab-workhorse;[0m
    [37m+    proxy_request_buffering off;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  location /-/grafana/ {[0m
    [37m+    proxy_pass http://localhost:3000/;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+[0m
    [37m+  # health checks configuration[0m
    [37m+  include /var/opt/gitlab/nginx/conf/gitlab-health.conf;[0m
    [37m+[0m
    [37m+  location / {[0m
    [37m+    proxy_cache off;[0m
    [37m+    proxy_pass  http://gitlab-workhorse;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  location /assets {[0m
    [37m+    proxy_cache gitlab;[0m
    [37m+    proxy_pass  http://gitlab-workhorse;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  error_page 404 /404.html;[0m
    [37m+  error_page 500 /500.html;[0m
    [37m+  error_page 502 /502.html;[0m
    [37m+  location ~ ^/(404|500|502)(-custom)?\.html$ {[0m
    [37m+    root /opt/gitlab/embedded/service/gitlab-rails/public;[0m
    [37m+    internal;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  [0m
    [37m+}[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0m  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create
    [32m- create new file /var/opt/gitlab/nginx/conf/gitlab-health.conf[0m
    [32m- update content in file /var/opt/gitlab/nginx/conf/gitlab-health.conf from none to 92d04b[0m
    [37m--- /var/opt/gitlab/nginx/conf/gitlab-health.conf	2022-05-01 19:52:35.745024346 +0000[0m
    [37m+++ /var/opt/gitlab/nginx/conf/.chef-gitlab-health20220501-32-drpz9r.conf	2022-05-01 19:52:35.745024346 +0000[0m
    [37m@@ -1,29 +1,58 @@[0m
    [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
    [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
    [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
    [37m+[0m
    [37m+location /error.txt {[0m
    [37m+  # return code here is ignored by the error_page directive[0m
    [37m+  return 500 'nginx returned $status when communicating with gitlab-workhorse\n';[0m
    [37m+}[0m
    [37m+[0m
    [37m+location /error.json  {[0m
    [37m+  # return code here is ignored by the error_page directive[0m
    [37m+  return 500 '{"error":"nginx returned $status when communicating with gitlab-workhorse","status":$status}\n';[0m
    [37m+}[0m
    [37m+[0m
    [37m+location = /-/health {[0m
    [37m+  proxy_cache off;[0m
    [37m+  proxy_pass  http://gitlab-workhorse;[0m
    [37m+  error_page 404 500 502 /error.txt;[0m
    [37m+}[0m
    [37m+location = /-/readiness {[0m
    [37m+  proxy_cache off;[0m
    [37m+  proxy_pass  http://gitlab-workhorse;[0m
    [37m+  error_page 404 500 502 /error.json;[0m
    [37m+}[0m
    [37m+location = /-/liveness {[0m
    [37m+  proxy_cache off;[0m
    [37m+  proxy_pass  http://gitlab-workhorse;[0m
    [37m+  error_page 404 500 502 /error.json;[0m
    [37m+}[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0m  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action create
    [32m- create new file /var/opt/gitlab/nginx/conf/gitlab-registry.conf[0m
    [32m- update content in file /var/opt/gitlab/nginx/conf/gitlab-registry.conf from none to 863b88[0m
    [37m--- /var/opt/gitlab/nginx/conf/gitlab-registry.conf	2022-05-01 19:52:35.763024534 +0000[0m
    [37m+++ /var/opt/gitlab/nginx/conf/.chef-gitlab-registry20220501-32-x8rood.conf	2022-05-01 19:52:35.763024534 +0000[0m
    [37m@@ -1,57 +1,114 @@[0m
    [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
    [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
    [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
    [37m+[0m
    [37m+## Lines starting with two hashes (##) are comments with information.[0m
    [37m+## Lines starting with one hash (#) are configuration parameters that can be uncommented.[0m
    [37m+##[0m
    [37m+###################################[0m
    [37m+##         configuration         ##[0m
    [37m+###################################[0m
    [37m+[0m
    [37m+[0m
    [37m+server {[0m
    [37m+  listen *:5050 ssl;[0m
    [37m+  server_name jenkins.local;[0m
    [37m+  server_tokens off; ## Don't show the nginx version number, a security best practice[0m
    [37m+[0m
    [37m+  client_max_body_size 0;[0m
    [37m+  chunked_transfer_encoding on;[0m
    [37m+[0m
    [37m+  ## Strong SSL Security[0m
    [37m+  ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html & https://cipherli.st/[0m
    [37m+  ssl_certificate /etc/gitlab/ssl/jenkins.local.crt;[0m
    [37m+  ssl_certificate_key /etc/gitlab/ssl/jenkins.local.key;[0m
    [37m+[0m
    [37m+  ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4';[0m
    [37m+  ssl_protocols  TLSv1.2 TLSv1.3;[0m
    [37m+  ssl_prefer_server_ciphers on;[0m
    [37m+  ssl_session_cache  builtin:1000  shared:SSL:10m;[0m
    [37m+  ssl_session_timeout  5m;[0m
    [37m+[0m
    [37m+[0m
    [37m+  ## Real IP Module Config[0m
    [37m+  ## http://nginx.org/en/docs/http/ngx_http_realip_module.html[0m
    [37m+[0m
    [37m+  access_log  /var/log/gitlab/nginx/gitlab_registry_access.log gitlab_access;[0m
    [37m+  error_log   /var/log/gitlab/nginx/gitlab_registry_error.log;[0m
    [37m+[0m
    [37m+  location / {[0m
    [37m+[0m
    [37m+    proxy_set_header Host $http_host;[0m
    [37m+    proxy_set_header X-Real-IP $remote_addr;[0m
    [37m+    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;[0m
    [37m+    proxy_set_header X-Forwarded-Proto https;[0m
    [37m+    proxy_set_header X-Forwarded-Ssl on;[0m
    [37m+[0m
    [37m+    proxy_read_timeout                  900;[0m
    [37m+    proxy_cache off;[0m
    [37m+    proxy_buffering off;[0m
    [37m+    proxy_request_buffering off;[0m
    [37m+    proxy_http_version 1.1;[0m
    [37m+[0m
    [37m+    proxy_pass          http://localhost:5000;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  [0m
    [37m+}[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0m  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create
    [32m- create new file /var/opt/gitlab/nginx/conf/nginx-status.conf[0m
    [32m- update content in file /var/opt/gitlab/nginx/conf/nginx-status.conf from none to 74440c[0m
    [37m--- /var/opt/gitlab/nginx/conf/nginx-status.conf	2022-05-01 19:52:35.787024784 +0000[0m
    [37m+++ /var/opt/gitlab/nginx/conf/.chef-nginx-status20220501-32-u9ja4g.conf	2022-05-01 19:52:35.786024774 +0000[0m
    [37m@@ -1,28 +1,56 @@[0m
    [37m+server  {[0m
    [37m+    listen *:8060;[0m
    [37m+    server_name localhost;[0m
    [37m+    location /nginx_status {[0m
    [37m+      stub_status;[0m
    [37m+      server_tokens off;[0m
    [37m+      access_log off;[0m
    [37m+      allow 127.0.0.1;[0m
    [37m+      deny all;[0m
    [37m+    }[0m
    [37m+    location /metrics {[0m
    [37m+      vhost_traffic_status_display;[0m
    [37m+      vhost_traffic_status_display_format prometheus;[0m
    [37m+      server_tokens off;[0m
    [37m+      access_log off;[0m
    [37m+      allow 127.0.0.1;[0m
    [37m+      deny all;[0m
    [37m+    }[0m
    [37m+[0m
    [37m+    location /rails-metrics {[0m
    [37m+      proxy_cache off;[0m
    [37m+      proxy_pass  http://gitlab-workhorse/-/metrics;[0m
    [37m+      server_tokens off;[0m
    [37m+      access_log off;[0m
    [37m+      allow 127.0.0.1;[0m
    [37m+      deny all;[0m
    [37m+    }[0m
    [37m+}[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0m  * consul_service[nginx] action delete
    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create
    [32m- create new file /var/opt/gitlab/nginx/conf/nginx.conf[0m
    [32m- update content in file /var/opt/gitlab/nginx/conf/nginx.conf from none to 8a00f8[0m
    [37m--- /var/opt/gitlab/nginx/conf/nginx.conf	2022-05-01 19:52:35.805024972 +0000[0m
    [37m+++ /var/opt/gitlab/nginx/conf/.chef-nginx20220501-32-10vff7k.conf	2022-05-01 19:52:35.804024961 +0000[0m
    [37m@@ -1,91 +1,182 @@[0m
    [37m+# This file is managed by gitlab-ctl. Manual changes will be[0m
    [37m+# erased! To change the contents below, edit /etc/gitlab/gitlab.rb[0m
    [37m+# and run `sudo gitlab-ctl reconfigure`.[0m
    [37m+[0m
    [37m+user gitlab-www gitlab-www;[0m
    [37m+worker_processes 8;[0m
    [37m+error_log stderr;[0m
    [37m+pid nginx.pid;[0m
    [37m+[0m
    [37m+daemon off;[0m
    [37m+[0m
    [37m+events {[0m
    [37m+  worker_connections 10240;[0m
    [37m+}[0m
    [37m+[0m
    [37m+http {[0m
    [37m+  log_format gitlab_access '$remote_addr - $remote_user [$time_local] "$request_method $filtered_request_uri $server_protocol" $status $body_bytes_sent "$filtered_http_referer" "$http_user_agent" $gzip_ratio';[0m
    [37m+  log_format gitlab_mattermost_access '$remote_addr - $remote_user [$time_local] "$request_method $filtered_request_uri $server_protocol" $status $body_bytes_sent "$filtered_http_referer" "$http_user_agent" $gzip_ratio';[0m
    [37m+[0m
    [37m+  server_names_hash_bucket_size 64;[0m
    [37m+[0m
    [37m+  sendfile on;[0m
    [37m+  tcp_nopush on;[0m
    [37m+  tcp_nodelay on;[0m
    [37m+[0m
    [37m+  keepalive_timeout 65;[0m
    [37m+[0m
    [37m+  gzip on;[0m
    [37m+  gzip_http_version 1.1;[0m
    [37m+  gzip_comp_level 2;[0m
    [37m+  gzip_proxied no-cache no-store private expired auth;[0m
    [37m+  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;[0m
    [37m+[0m
    [37m+  include /opt/gitlab/embedded/conf/mime.types;[0m
    [37m+[0m
    [37m+  proxy_cache_path proxy_cache keys_zone=gitlab:10m max_size=1g levels=1:2;[0m
    [37m+  proxy_cache gitlab;[0m
    [37m+[0m
    [37m+  map $http_upgrade $connection_upgrade {[0m
    [37m+      default upgrade;[0m
    [37m+      ''      close;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  # Remove private_token from the request URI[0m
    [37m+  # In:  /foo?private_token=unfiltered&authenticity_token=unfiltered&rss_token=unfiltered&...[0m
    [37m+  # Out: /foo?private_token=[FILTERED]&authenticity_token=unfiltered&rss_token=unfiltered&...[0m
    [37m+  map $request_uri $temp_request_uri_1 {[0m
    [37m+    default $request_uri;[0m
    [37m+    ~(?i)^(?<start>.*)(?<temp>[\?&]private[\-_]token)=[^&]*(?<rest>.*)$ "$start$temp=[FILTERED]$rest";[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  # Remove authenticity_token from the request URI[0m
    [37m+  # In:  /foo?private_token=[FILTERED]&authenticity_token=unfiltered&rss_token=unfiltered&...[0m
    [37m+  # Out: /foo?private_token=[FILTERED]&authenticity_token=[FILTERED]&rss_token=unfiltered&...[0m
    [37m+  map $temp_request_uri_1 $temp_request_uri_2 {[0m
    [37m+    default $temp_request_uri_1;[0m
    [37m+    ~(?i)^(?<start>.*)(?<temp>[\?&]authenticity[\-_]token)=[^&]*(?<rest>.*)$ "$start$temp=[FILTERED]$rest";[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  # Remove rss_token from the request URI[0m
    [37m+  # In:  /foo?private_token=[FILTERED]&authenticity_token=[FILTERED]&rss_token=unfiltered&...[0m
    [37m+  # Out: /foo?private_token=[FILTERED]&authenticity_token=[FILTERED]&rss_token=[FILTERED]&...[0m
    [37m+  map $temp_request_uri_2 $filtered_request_uri {[0m
    [37m+    default $temp_request_uri_2;[0m
    [37m+    ~(?i)^(?<start>.*)(?<temp>[\?&]rss[\-_]token)=[^&]*(?<rest>.*)$ "$start$temp=[FILTERED]$rest";[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  # A version of the referer without the query string[0m
    [37m+  map $http_referer $filtered_http_referer {[0m
    [37m+    default $http_referer;[0m
    [37m+    ~^(?<temp>.*)\? $temp;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  # Enable vts status module.[0m
    [37m+  vhost_traffic_status_zone;[0m
    [37m+[0m
    [37m+  upstream gitlab-workhorse {[0m
    [37m+    server unix:/var/opt/gitlab/gitlab-workhorse/socket;[0m
    [37m+  }[0m
    [37m+[0m
    [37m+  include /var/opt/gitlab/nginx/conf/gitlab-http.conf;[0m
    [37m+[0m
    [37m+[0m
    [37m+[0m
    [37m+[0m
    [37m+  include /var/opt/gitlab/nginx/conf/gitlab-registry.conf;[0m
    [37m+[0m
    [37m+  include /var/opt/gitlab/nginx/conf/nginx-status.conf;[0m
    [37m+[0m
    [37m+  [0m
    [37m+}[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0mRecipe: nginx::enable[0m
  * service[nginx] action nothing (skipped due to action :nothing)
  * runit_service[nginx] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/nginx] action create
      [32m- create new directory /opt/gitlab/sv/nginx[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/nginx/run] action create
      [32m- create new file /opt/gitlab/sv/nginx/run[0m
      [32m- update content in file /opt/gitlab/sv/nginx/run from none to d75aea[0m
      [37m--- /opt/gitlab/sv/nginx/run	2022-05-01 19:52:35.828025212 +0000[0m
      [37m+++ /opt/gitlab/sv/nginx/.chef-run20220501-32-6sxpz0	2022-05-01 19:52:35.828025212 +0000[0m
      [37m@@ -1,5 +1,10 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+cd /var/opt/gitlab/nginx[0m
      [37m+exec chpst -P /opt/gitlab/embedded/sbin/nginx -p /var/opt/gitlab/nginx[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/nginx/log] action create
      [32m- create new directory /opt/gitlab/sv/nginx/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/nginx/log/main] action create
      [32m- create new directory /opt/gitlab/sv/nginx/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/nginx/log/config] action create
      [32m- create new file /opt/gitlab/sv/nginx/log/config[0m
      [32m- update content in file /opt/gitlab/sv/nginx/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/nginx/log/config	2022-05-01 19:52:35.841025347 +0000[0m
      [37m+++ /opt/gitlab/sv/nginx/log/.chef-config20220501-32-obyywo	2022-05-01 19:52:35.841025347 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_nginx] action create
      [32m- execute the ruby block verify_chown_persisted_on_nginx[0m
[0m    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/nginx/config] action create
      [32m- create symlink at /var/log/gitlab/nginx/config to /opt/gitlab/sv/nginx/log/config[0m
[0m    * template[/opt/gitlab/sv/nginx/log/run] action create
      [32m- create new file /opt/gitlab/sv/nginx/log/run[0m
      [32m- update content in file /opt/gitlab/sv/nginx/log/run from none to c70025[0m
      [37m--- /opt/gitlab/sv/nginx/log/run	2022-05-01 19:52:35.852025462 +0000[0m
      [37m+++ /opt/gitlab/sv/nginx/log/.chef-run20220501-32-2gcqt9	2022-05-01 19:52:35.852025462 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/nginx[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/nginx/env] action create
      [32m- create new directory /opt/gitlab/sv/nginx/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/nginx/control] action create
      [32m- create new directory /opt/gitlab/sv/nginx/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/nginx] action create
      [32m- create symlink at /opt/gitlab/init/nginx to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/nginx] action create (up to date)
      * template[/opt/gitlab/sv/nginx/run] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
      * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/nginx/config] action create (up to date)
      * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
      * link[/opt/gitlab/init/nginx] action create (up to date)
      * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/nginx] action create
        [32m- create symlink at /opt/gitlab/service/nginx to /opt/gitlab/sv/nginx[0m
[0m      * ruby_block[wait for nginx service socket] action run
        [32m- execute the ruby block wait for nginx service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/nginx] action create (up to date)
      * template[/opt/gitlab/sv/nginx/run] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
      * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/nginx/config] action create (up to date)
      * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
      * link[/opt/gitlab/init/nginx] action create (up to date)
      * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/nginx] action create (up to date)
      * ruby_block[wait for nginx service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/nginx] action create (up to date)
    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)
  
[0m  * execute[reload nginx] action nothing (skipped due to action :nothing)
Recipe: gitlab::nginx[0m
  * execute[/opt/gitlab/bin/gitlab-ctl start nginx] action run
    [execute] ok: run: nginx: (pid 1146) 0s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start nginx[0m
[0mRecipe: gitlab::remote-syslog_disable[0m
  * service[remote-syslog] action nothing (skipped due to action :nothing)
  * runit_service[remote-syslog] action disable
    * ruby_block[disable remote-syslog] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::logrotate[0m
  * service[logrotate] action nothing (skipped due to action :nothing)
  * runit_service[logrotate] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/logrotate] action create
      [32m- create new directory /opt/gitlab/sv/logrotate[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/logrotate/run] action create
      [32m- create new file /opt/gitlab/sv/logrotate/run[0m
      [32m- update content in file /opt/gitlab/sv/logrotate/run from none to 07f1b6[0m
      [37m--- /opt/gitlab/sv/logrotate/run	2022-05-01 19:53:07.739357927 +0000[0m
      [37m+++ /opt/gitlab/sv/logrotate/.chef-run20220501-32-1sbxcvl	2022-05-01 19:53:07.738357916 +0000[0m
      [37m@@ -1,10 +1,20 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+cd /var/opt/gitlab/logrotate[0m
      [37m+[0m
      [37m+exec /opt/gitlab/embedded/bin/chpst -P /usr/bin/env \[0m
      [37m+  dir=/var/opt/gitlab/logrotate \[0m
      [37m+  pre_sleep=600 \[0m
      [37m+  post_sleep=3000 \[0m
      [37m+  /opt/gitlab/embedded/bin/gitlab-logrotate-wrapper[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/logrotate/log] action create
      [32m- create new directory /opt/gitlab/sv/logrotate/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/logrotate/log/main] action create
      [32m- create new directory /opt/gitlab/sv/logrotate/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/logrotate/log/config] action create
      [32m- create new file /opt/gitlab/sv/logrotate/log/config[0m
      [32m- update content in file /opt/gitlab/sv/logrotate/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/logrotate/log/config	2022-05-01 19:53:07.761358156 +0000[0m
      [37m+++ /opt/gitlab/sv/logrotate/log/.chef-config20220501-32-sdet2d	2022-05-01 19:53:07.761358156 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_logrotate] action create
      [32m- execute the ruby block verify_chown_persisted_on_logrotate[0m
[0m    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/logrotate/config] action create
      [32m- create symlink at /var/log/gitlab/logrotate/config to /opt/gitlab/sv/logrotate/log/config[0m
[0m    * template[/opt/gitlab/sv/logrotate/log/run] action create
      [32m- create new file /opt/gitlab/sv/logrotate/log/run[0m
      [32m- update content in file /opt/gitlab/sv/logrotate/log/run from none to 94afe6[0m
      [37m--- /opt/gitlab/sv/logrotate/log/run	2022-05-01 19:53:07.772358271 +0000[0m
      [37m+++ /opt/gitlab/sv/logrotate/log/.chef-run20220501-32-phnya	2022-05-01 19:53:07.772358271 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/logrotate[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/logrotate/env] action create
      [32m- create new directory /opt/gitlab/sv/logrotate/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/logrotate/control] action create
      [32m- create new directory /opt/gitlab/sv/logrotate/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/logrotate/control/t] action create
      [32m- create new file /opt/gitlab/sv/logrotate/control/t[0m
      [32m- update content in file /opt/gitlab/sv/logrotate/control/t from none to 8fa3fa[0m
      [37m--- /opt/gitlab/sv/logrotate/control/t	2022-05-01 19:53:07.785358407 +0000[0m
      [37m+++ /opt/gitlab/sv/logrotate/control/.chef-t20220501-32-y1z4r7	2022-05-01 19:53:07.785358407 +0000[0m
      [37m@@ -1,3 +1,6 @@[0m
      [37m+#!/bin/sh[0m
      [37m+echo "Received TERM from runit, sending to process group (-PID)"[0m
      [37m+kill -- -$(cat /opt/gitlab/service/logrotate/supervise/pid)[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/logrotate] action create
      [32m- create symlink at /opt/gitlab/init/logrotate to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/logrotate] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/logrotate/config] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
      * link[/opt/gitlab/init/logrotate] action create (up to date)
      * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/logrotate] action create
        [32m- create symlink at /opt/gitlab/service/logrotate to /opt/gitlab/sv/logrotate[0m
[0m      * ruby_block[wait for logrotate service socket] action run
        [32m- execute the ruby block wait for logrotate service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/logrotate] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/logrotate/config] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
      * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
      * link[/opt/gitlab/init/logrotate] action create (up to date)
      * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/logrotate] action create (up to date)
      * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/logrotate] action create (up to date)
    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)
  
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start logrotate] action run
    [execute] ok: run: logrotate: (pid 1164) 2s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start logrotate[0m
[0mRecipe: gitlab::bootstrap[0m
  * file[/var/opt/gitlab/bootstrapped] action create
    [32m- create new file /var/opt/gitlab/bootstrapped[0m
    [32m- update content in file /var/opt/gitlab/bootstrapped from none to 4ae00c[0m
    [37m--- /var/opt/gitlab/bootstrapped	2022-05-01 19:53:14.615429618 +0000[0m
    [37m+++ /var/opt/gitlab/.chef-bootstrapped20220501-32-1e95cbx	2022-05-01 19:53:14.614429608 +0000[0m
    [37m@@ -1 +1,2 @@[0m
    [37m+All your bootstraps are belong to Chef[0m
    [32m- change mode from '' to '0600'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0mRecipe: gitlab::gitlab-pages_disable[0m
  * service[gitlab-pages] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-pages] action disable
    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::storage-check_disable[0m
  * service[storage-check] action nothing (skipped due to action :nothing)
  * runit_service[storage-check] action disable
    * ruby_block[disable storage-check] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::actioncable_disable[0m
  * service[actioncable] action nothing (skipped due to action :nothing)
  * runit_service[actioncable] action disable
    * ruby_block[disable actioncable] action run (skipped due to only_if)
     (up to date)
  * consul_service[actioncable] action delete
    * file[/var/opt/gitlab/consul/config.d/actioncable-service.json] action delete (up to date)
     (up to date)
Recipe: registry::enable[0m
  * directory[create /var/opt/gitlab/registry] action create (up to date)
  * account[Docker registry user and group] action create (up to date)
  * directory[create /var/opt/gitlab/registry and set the owner] action create
    [32m- change mode from '0755' to '0700'[0m
[0m  * directory[create /var/log/gitlab/registry and set the owner] action create
    [32m- create new directory /var/log/gitlab/registry[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'registry'[0m
[0m  * env_dir[/opt/gitlab/etc/registry/env] action create
    * directory[/opt/gitlab/etc/registry/env] action create
      [32m- create new directory /opt/gitlab/etc/registry/env[0m
[0m    * file[/opt/gitlab/etc/registry/env/SSL_CERT_DIR] action create
      [32m- create new file /opt/gitlab/etc/registry/env/SSL_CERT_DIR[0m
      [32m- update content in file /opt/gitlab/etc/registry/env/SSL_CERT_DIR from none to 4f45cf[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * directory[/var/opt/gitlab/gitlab-rails/shared/registry] action create
    [32m- create new directory /var/opt/gitlab/gitlab-rails/shared/registry[0m
    [32m- change mode from '' to '0770'[0m
    [32m- change owner from '' to 'registry'[0m
    [32m- change group from '' to 'git'[0m
[0m  * file[/var/opt/gitlab/registry/gitlab-registry.crt] action create
    [32m- create new file /var/opt/gitlab/registry/gitlab-registry.crt[0m
    [32m- update content in file /var/opt/gitlab/registry/gitlab-registry.crt from none to cc1b73[0m
    [32m- suppressed sensitive resource[0m
    [32m- change owner from '' to 'registry'[0m
    [32m- change group from '' to 'registry'[0m
[0m  * template[/var/opt/gitlab/registry/config.yml] action create
    [32m- create new file /var/opt/gitlab/registry/config.yml[0m
    [32m- update content in file /var/opt/gitlab/registry/config.yml from none to daac9f[0m
    [37m--- /var/opt/gitlab/registry/config.yml	2022-05-01 19:53:14.667430160 +0000[0m
    [37m+++ /var/opt/gitlab/registry/.chef-config20220501-32-iw4ewd.yml	2022-05-01 19:53:14.667430160 +0000[0m
    [37m@@ -1,27 +1,54 @@[0m
    [37m+version: 0.1[0m
    [37m+log:[0m
    [37m+  level: info[0m
    [37m+  formatter: text[0m
    [37m+  fields:[0m
    [37m+    service: registry[0m
    [37m+    environment: production[0m
    [37m+storage: {"filesystem":{"rootdirectory":"/var/opt/gitlab/gitlab-rails/shared/registry"},"cache":{"blobdescriptor":"inmemory"},"delete":{"enabled":true}}[0m
    [37m+http:[0m
    [37m+  addr: localhost:5000[0m
    [37m+  secret: "072d5f93f1ae3cfb2b976b457b1ef8c63c4cd2ca67e36e5c949ad781ec84fd8026205cac4e7f596d1cb0ccab9f50be0c6b937ebe39008a1bb62f83c76cbf6749"[0m
    [37m+  headers:[0m
    [37m+    X-Content-Type-Options: [nosniff][0m
    [37m+health:[0m
    [37m+  storagedriver:[0m
    [37m+    enabled: true[0m
    [37m+    interval: 10s[0m
    [37m+    threshold: 3[0m
    [37m+auth:[0m
    [37m+  token:[0m
    [37m+    realm: https://jenkins.local:8090/jwt/auth[0m
    [37m+    service: container_registry[0m
    [37m+    issuer: omnibus-gitlab-issuer[0m
    [37m+    rootcertbundle: /var/opt/gitlab/registry/gitlab-registry.crt[0m
    [37m+    autoredirect: false[0m
    [37m+validation:[0m
    [37m+  disabled: true[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'registry'[0m
[0m  * service[registry] action nothing (skipped due to action :nothing)
  * runit_service[registry] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/registry] action create
      [32m- create new directory /opt/gitlab/sv/registry[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/registry/run] action create
      [32m- create new file /opt/gitlab/sv/registry/run[0m
      [32m- update content in file /opt/gitlab/sv/registry/run from none to acccae[0m
      [37m--- /opt/gitlab/sv/registry/run	2022-05-01 19:53:14.682430316 +0000[0m
      [37m+++ /opt/gitlab/sv/registry/.chef-run20220501-32-1u4jd5	2022-05-01 19:53:14.682430316 +0000[0m
      [37m@@ -1,12 +1,24 @@[0m
      [37m+#!/bin/bash[0m
      [37m+set -e # fail on errors[0m
      [37m+[0m
      [37m+# Redirect stderr -> stdout[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+cd /var/opt/gitlab/registry[0m
      [37m+[0m
      [37m+exec chpst -e /opt/gitlab/etc/registry/env -P \[0m
      [37m+  -U registry:registry \[0m
      [37m+  -u registry:registry \[0m
      [37m+  /opt/gitlab/embedded/bin/registry serve ./config.yml[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/registry/log] action create
      [32m- create new directory /opt/gitlab/sv/registry/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/registry/log/main] action create
      [32m- create new directory /opt/gitlab/sv/registry/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/registry/log/config] action create
      [32m- create new file /opt/gitlab/sv/registry/log/config[0m
      [32m- update content in file /opt/gitlab/sv/registry/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/registry/log/config	2022-05-01 19:53:14.698430483 +0000[0m
      [37m+++ /opt/gitlab/sv/registry/log/.chef-config20220501-32-s6n86k	2022-05-01 19:53:14.698430483 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_registry] action create
      [32m- execute the ruby block verify_chown_persisted_on_registry[0m
[0m    * ruby_block[verify_chown_persisted_on_registry] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/registry/config] action create
      [32m- create symlink at /var/log/gitlab/registry/config to /opt/gitlab/sv/registry/log/config[0m
[0m    * template[/opt/gitlab/sv/registry/log/run] action create
      [32m- create new file /opt/gitlab/sv/registry/log/run[0m
      [32m- update content in file /opt/gitlab/sv/registry/log/run from none to cb6440[0m
      [37m--- /opt/gitlab/sv/registry/log/run	2022-05-01 19:53:14.709430598 +0000[0m
      [37m+++ /opt/gitlab/sv/registry/log/.chef-run20220501-32-1l1f339	2022-05-01 19:53:14.709430598 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/registry[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/registry/env] action create
      [32m- create new directory /opt/gitlab/sv/registry/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for registry service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/registry/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/registry/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/registry/control] action create
      [32m- create new directory /opt/gitlab/sv/registry/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/registry] action create
      [32m- create symlink at /opt/gitlab/init/registry to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/registry/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/registry] action create (up to date)
      * template[/opt/gitlab/sv/registry/run] action create (up to date)
      * directory[/opt/gitlab/sv/registry/log] action create (up to date)
      * directory[/opt/gitlab/sv/registry/log/main] action create (up to date)
      * template[/opt/gitlab/sv/registry/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_registry] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/registry/config] action create (up to date)
      * template[/opt/gitlab/sv/registry/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/registry/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for registry service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/registry/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/registry/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/registry/control] action create (up to date)
      * link[/opt/gitlab/init/registry] action create (up to date)
      * file[/opt/gitlab/sv/registry/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/registry] action create
        [32m- create symlink at /opt/gitlab/service/registry to /opt/gitlab/sv/registry[0m
[0m      * ruby_block[wait for registry service socket] action run
        [32m- execute the ruby block wait for registry service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/registry] action create (up to date)
      * template[/opt/gitlab/sv/registry/run] action create (up to date)
      * directory[/opt/gitlab/sv/registry/log] action create (up to date)
      * directory[/opt/gitlab/sv/registry/log/main] action create (up to date)
      * template[/opt/gitlab/sv/registry/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_registry] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/registry/config] action create (up to date)
      * template[/opt/gitlab/sv/registry/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/registry/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for registry service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/registry/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/registry/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/registry/control] action create (up to date)
      * link[/opt/gitlab/init/registry] action create (up to date)
      * file[/opt/gitlab/sv/registry/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/registry] action create (up to date)
      * ruby_block[wait for registry service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/registry] action create (up to date)
    * ruby_block[wait for registry service socket] action run (skipped due to not_if)
  
[0m  * version_file[Create version file for Registry] action create
    * file[/var/opt/gitlab/registry/VERSION] action create
      [32m- create new file /var/opt/gitlab/registry/VERSION[0m
      [32m- update content in file /var/opt/gitlab/registry/VERSION from none to acf493[0m
      [37m--- /var/opt/gitlab/registry/VERSION	2022-05-01 19:53:20.116486974 +0000[0m
      [37m+++ /var/opt/gitlab/registry/.chef-VERSION20220501-32-11bjh6y	2022-05-01 19:53:20.116486974 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+/opt/gitlab/embedded/bin/registry github.com/docker/distribution v2.10.1-gitlab[0m
[0m  
[0mRecipe: mattermost::disable[0m
  * service[mattermost] action nothing (skipped due to action :nothing)
  * runit_service[mattermost] action disable
    * ruby_block[disable mattermost] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::gitlab-healthcheck[0m
  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create
    [32m- create new file /opt/gitlab/etc/gitlab-healthcheck-rc[0m
    [32m- update content in file /opt/gitlab/etc/gitlab-healthcheck-rc from none to fb10da[0m
    [37m--- /opt/gitlab/etc/gitlab-healthcheck-rc	2022-05-01 19:53:20.130487119 +0000[0m
    [37m+++ /opt/gitlab/etc/.chef-gitlab-healthcheck-rc20220501-32-6p7uqf	2022-05-01 19:53:20.130487119 +0000[0m
    [37m@@ -1,2 +1,4 @@[0m
    [37m+url='https://localhost:8090/help'[0m
    [37m+flags='--insecure'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0mRecipe: monitoring::node-exporter_disable[0m
  * service[node-exporter] action nothing (skipped due to action :nothing)
  * runit_service[node-exporter] action disable
    * ruby_block[disable node-exporter] action run (skipped due to only_if)
     (up to date)
  * consul_service[node-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::gitlab-exporter[0m
  * directory[/var/opt/gitlab/gitlab-exporter] action create
    [32m- create new directory /var/opt/gitlab/gitlab-exporter[0m
    [32m- change mode from '' to '0755'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * directory[/var/log/gitlab/gitlab-exporter] action create
    [32m- create new directory /var/log/gitlab/gitlab-exporter[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create
    [32m- create new file /var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml[0m
    [32m- update content in file /var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml from none to 884e98[0m
    [37m--- /var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml	2022-05-01 19:53:20.156487390 +0000[0m
    [37m+++ /var/opt/gitlab/gitlab-exporter/.chef-gitlab-exporter20220501-32-1olxwxo.yml	2022-05-01 19:53:20.155487380 +0000[0m
    [37m@@ -1,76 +1,152 @@[0m
    [37m+db_common: &db_common[0m
    [37m+  methods:[0m
    [37m+    - probe_db[0m
    [37m+  opts:[0m
    [37m+    connection_string: dbname=gitlabhq_production user=gitlab host=/var/opt/gitlab/postgresql port=5432 password=[0m
    [37m+[0m
    [37m+# Web server config[0m
    [37m+server:[0m
    [37m+  listen_address: localhost[0m
    [37m+  listen_port: 9168[0m
    [37m+[0m
    [37m+# Probes config[0m
    [37m+probes:[0m
    [37m+  git_process: &git_process[0m
    [37m+    class_name: GitProcessProber # `class_name` is redundant here[0m
    [37m+    methods:[0m
    [37m+    - probe_git[0m
    [37m+    opts:[0m
    [37m+      quantiles: true[0m
    [37m+[0m
    [37m+  # We can group multiple probes under a single endpoint by setting the `multiple` key to `true`, followed[0m
    [37m+  # by probe definitions as usual.[0m
    [37m+  database:[0m
    [37m+    multiple: true[0m
    [37m+    ci_builds:[0m
    [37m+      class_name: Database::CiBuildsProber[0m
    [37m+      <<: *db_common[0m
    [37m+    tuple_stats:[0m
    [37m+      class_name: Database::TuplesProber[0m
    [37m+      <<: *db_common[0m
    [37m+    rows_count:[0m
    [37m+      class_name: Database::RowCountProber[0m
    [37m+      <<: *db_common[0m
    [37m+[0m
    [37m+  process: &process[0m
    [37m+    methods:[0m
    [37m+      - probe_stat[0m
    [37m+      - probe_count[0m
    [37m+    opts:[0m
    [37m+      - pid_or_pattern: "sidekiq .* \\[.*?\\]"[0m
    [37m+        name: sidekiq[0m
    [37m+      - pid_or_pattern: "gitlab-puma-worker"[0m
    [37m+        name: puma[0m
    [37m+      - pid_or_pattern: "unicorn.* worker\\[.*?\\]"[0m
    [37m+        name: unicorn[0m
    [37m+      - pid_or_pattern: "git-upload-pack --stateless-rpc"[0m
    [37m+        name: git_upload_pack[0m
    [37m+        quantiles: true[0m
    [37m+[0m
    [37m+  sidekiq: &sidekiq[0m
    [37m+    methods:[0m
    [37m+      - probe_stats[0m
    [37m+      - probe_queues[0m
    [37m+      - probe_workers[0m
    [37m+      - probe_retries[0m
    [37m+    opts:[0m
    [37m+      redis_url: "unix:/var/opt/gitlab/redis/redis.socket"[0m
    [37m+      redis_enable_client: true[0m
    [37m+[0m
    [37m+  metrics:[0m
    [37m+    multiple: true[0m
    [37m+    git_process:[0m
    [37m+      <<: *git_process[0m
    [37m+    process:[0m
    [37m+      <<: *process[0m
    [37m+    sidekiq:[0m
    [37m+      <<: *sidekiq[0m
    [37m+    ci_builds:[0m
    [37m+      class_name: Database::CiBuildsProber[0m
    [37m+      <<: *db_common[0m
    [37m+    tuple_stats:[0m
    [37m+      class_name: Database::TuplesProber[0m
    [37m+      <<: *db_common[0m
    [37m+    rows_count:[0m
    [37m+      class_name: Database::RowCountProber[0m
    [37m+      <<: *db_common[0m
    [32m- change mode from '' to '0600'[0m
    [32m- change owner from '' to 'git'[0m
[0m  * version_file[Create version file for GitLab-Exporter] action create
    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create
      [32m- create new file /var/opt/gitlab/gitlab-exporter/RUBY_VERSION[0m
      [32m- update content in file /var/opt/gitlab/gitlab-exporter/RUBY_VERSION from none to d89bae[0m
      [37m--- /var/opt/gitlab/gitlab-exporter/RUBY_VERSION	2022-05-01 19:53:20.184487683 +0000[0m
      [37m+++ /var/opt/gitlab/gitlab-exporter/.chef-RUBY_VERSION20220501-32-1rzpshp	2022-05-01 19:53:20.184487683 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+ruby 2.6.6p146 (2020-03-31 revision 67876) [x86_64-linux][0m
[0m  
[0m  * service[gitlab-exporter] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-exporter] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-exporter[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/gitlab-exporter/run] action create
      [32m- create new file /opt/gitlab/sv/gitlab-exporter/run[0m
      [32m- update content in file /opt/gitlab/sv/gitlab-exporter/run from none to 4072c9[0m
      [37m--- /opt/gitlab/sv/gitlab-exporter/run	2022-05-01 19:53:20.201487860 +0000[0m
      [37m+++ /opt/gitlab/sv/gitlab-exporter/.chef-run20220501-32-11jxaw7	2022-05-01 19:53:20.201487860 +0000[0m
      [37m@@ -1,9 +1,18 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+umask 077[0m
      [37m+exec chpst -P \[0m
      [37m+  -U git:git \[0m
      [37m+  -u git:git \[0m
      [37m+  /opt/gitlab/embedded/bin/gitlab-exporter web \[0m
      [37m+    -c /var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-exporter/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-exporter/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create
      [32m- create new file /opt/gitlab/sv/gitlab-exporter/log/config[0m
      [32m- update content in file /opt/gitlab/sv/gitlab-exporter/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/gitlab-exporter/log/config	2022-05-01 19:53:20.219488047 +0000[0m
      [37m+++ /opt/gitlab/sv/gitlab-exporter/log/.chef-config20220501-32-qvkz16	2022-05-01 19:53:20.219488047 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action create
      [32m- execute the ruby block verify_chown_persisted_on_gitlab-exporter[0m
[0m    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-exporter/config] action create
      [32m- create symlink at /var/log/gitlab/gitlab-exporter/config to /opt/gitlab/sv/gitlab-exporter/log/config[0m
[0m    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create
      [32m- create new file /opt/gitlab/sv/gitlab-exporter/log/run[0m
      [32m- update content in file /opt/gitlab/sv/gitlab-exporter/log/run from none to 690ab7[0m
      [37m--- /opt/gitlab/sv/gitlab-exporter/log/run	2022-05-01 19:53:20.230488162 +0000[0m
      [37m+++ /opt/gitlab/sv/gitlab-exporter/log/.chef-run20220501-32-rra94c	2022-05-01 19:53:20.230488162 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/gitlab-exporter[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-exporter/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create
      [32m- create new directory /opt/gitlab/sv/gitlab-exporter/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/gitlab-exporter] action create
      [32m- create symlink at /opt/gitlab/init/gitlab-exporter to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
      * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitlab-exporter] action create
        [32m- create symlink at /opt/gitlab/service/gitlab-exporter to /opt/gitlab/sv/gitlab-exporter[0m
[0m      * ruby_block[wait for gitlab-exporter service socket] action run
        [32m- execute the ruby block wait for gitlab-exporter service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
      * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)
      * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)
    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)
  
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start gitlab-exporter] action run
    [execute] ok: run: gitlab-exporter: (pid 1246) 3s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start gitlab-exporter[0m
[0mRecipe: monitoring::redis-exporter[0m
  * directory[/var/log/gitlab/redis-exporter] action create
    [32m- create new directory /var/log/gitlab/redis-exporter[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-redis'[0m
[0m  * directory[/opt/gitlab/etc/redis-exporter/env] action create
    [32m- create new directory /opt/gitlab/etc/redis-exporter/env[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-redis'[0m
[0m  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create
    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create
      [32m- create new file /opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR[0m
      [32m- update content in file /opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR from none to 4f45cf[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * service[redis-exporter] action nothing (skipped due to action :nothing)
  * runit_service[redis-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/redis-exporter] action create
      [32m- create new directory /opt/gitlab/sv/redis-exporter[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/redis-exporter/run] action create
      [32m- create new file /opt/gitlab/sv/redis-exporter/run[0m
      [32m- update content in file /opt/gitlab/sv/redis-exporter/run from none to a21d3f[0m
      [37m--- /opt/gitlab/sv/redis-exporter/run	2022-05-01 19:53:27.122560022 +0000[0m
      [37m+++ /opt/gitlab/sv/redis-exporter/.chef-run20220501-32-1pvl41j	2022-05-01 19:53:27.122560022 +0000[0m
      [37m@@ -1,8 +1,16 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+umask 077[0m
      [37m+exec chpst -P -e /opt/gitlab/etc/redis-exporter/env \[0m
      [37m+  -U gitlab-redis:git \[0m
      [37m+  -u gitlab-redis:git \[0m
      [37m+  /opt/gitlab/embedded/bin/redis_exporter --web.listen-address=localhost:9121 --redis.addr=unix:///var/opt/gitlab/redis/redis.socket[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/redis-exporter/log] action create
      [32m- create new directory /opt/gitlab/sv/redis-exporter/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create
      [32m- create new directory /opt/gitlab/sv/redis-exporter/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/redis-exporter/log/config] action create
      [32m- create new file /opt/gitlab/sv/redis-exporter/log/config[0m
      [32m- update content in file /opt/gitlab/sv/redis-exporter/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/redis-exporter/log/config	2022-05-01 19:53:27.136560168 +0000[0m
      [37m+++ /opt/gitlab/sv/redis-exporter/log/.chef-config20220501-32-1prjslk	2022-05-01 19:53:27.136560168 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_redis-exporter] action create
      [32m- execute the ruby block verify_chown_persisted_on_redis-exporter[0m
[0m    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/redis-exporter/config] action create
      [32m- create symlink at /var/log/gitlab/redis-exporter/config to /opt/gitlab/sv/redis-exporter/log/config[0m
[0m    * template[/opt/gitlab/sv/redis-exporter/log/run] action create
      [32m- create new file /opt/gitlab/sv/redis-exporter/log/run[0m
      [32m- update content in file /opt/gitlab/sv/redis-exporter/log/run from none to 082dea[0m
      [37m--- /opt/gitlab/sv/redis-exporter/log/run	2022-05-01 19:53:27.146560272 +0000[0m
      [37m+++ /opt/gitlab/sv/redis-exporter/log/.chef-run20220501-32-iy0mu0	2022-05-01 19:53:27.146560272 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/redis-exporter[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/redis-exporter/env] action create
      [32m- create new directory /opt/gitlab/sv/redis-exporter/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/redis-exporter/control] action create
      [32m- create new directory /opt/gitlab/sv/redis-exporter/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/redis-exporter] action create
      [32m- create symlink at /opt/gitlab/init/redis-exporter to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/redis-exporter] action create (up to date)
      * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis-exporter] action create
        [32m- create symlink at /opt/gitlab/service/redis-exporter to /opt/gitlab/sv/redis-exporter[0m
[0m      * ruby_block[wait for redis-exporter service socket] action run
        [32m- execute the ruby block wait for redis-exporter service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/redis-exporter] action create (up to date)
      * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis-exporter] action create (up to date)
      * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/redis-exporter] action create (up to date)
    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)
  
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start redis-exporter] action run
    [execute] ok: run: redis-exporter: (pid 1280) 2s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start redis-exporter[0m
[0m  * consul_service[redis-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::user[0m
  * account[Prometheus user and group] action create (up to date)
Recipe: monitoring::prometheus[0m
  * directory[/var/opt/gitlab/prometheus] action create
    [32m- change mode from '0755' to '0750'[0m
[0m  * directory[/var/opt/gitlab/prometheus/rules] action create
    [32m- create new directory /var/opt/gitlab/prometheus/rules[0m
    [32m- change mode from '' to '0750'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/var/log/gitlab/prometheus] action create
    [32m- create new directory /var/log/gitlab/prometheus[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/opt/gitlab/etc/prometheus/env] action create
    [32m- create new directory /opt/gitlab/etc/prometheus/env[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * env_dir[/opt/gitlab/etc/prometheus/env] action create
    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create
      [32m- create new file /opt/gitlab/etc/prometheus/env/SSL_CERT_DIR[0m
      [32m- update content in file /opt/gitlab/etc/prometheus/env/SSL_CERT_DIR from none to 4f45cf[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * execute[reload prometheus] action nothing (skipped due to action :nothing)
  * file[Prometheus config] action create
    [32m- create new file /var/opt/gitlab/prometheus/prometheus.yml[0m
    [32m- update content in file /var/opt/gitlab/prometheus/prometheus.yml from none to d60de6[0m
    [37m--- /var/opt/gitlab/prometheus/prometheus.yml	2022-05-01 19:53:32.984621141 +0000[0m
    [37m+++ /var/opt/gitlab/prometheus/.chef-prometheus20220501-32-12sloqf.yml	2022-05-01 19:53:32.984621141 +0000[0m
    [37m@@ -1,167 +1,334 @@[0m
    [37m+---[0m
    [37m+global:[0m
    [37m+  scrape_interval: 15s[0m
    [37m+  scrape_timeout: 15s[0m
    [37m+  external_labels: {}[0m
    [37m+remote_read: [][0m
    [37m+remote_write: [][0m
    [37m+rule_files:[0m
    [37m+- "/var/opt/gitlab/prometheus/rules/*.rules"[0m
    [37m+scrape_configs:[0m
    [37m+- job_name: prometheus[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:9090[0m
    [37m+- job_name: nginx[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:8060[0m
    [37m+- job_name: redis[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:9121[0m
    [37m+- job_name: postgres[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:9187[0m
    [37m+- job_name: gitlab-workhorse[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:9229[0m
    [37m+- job_name: gitlab-rails[0m
    [37m+  metrics_path: "/-/metrics"[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - 127.0.0.1:8080[0m
    [37m+  relabel_configs:[0m
    [37m+  - source_labels:[0m
    [37m+    - __address__[0m
    [37m+    regex: 127.0.0.1:(.*)[0m
    [37m+    replacement: localhost:$1[0m
    [37m+    target_label: instance[0m
    [37m+- job_name: gitlab-sidekiq[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - 127.0.0.1:8082[0m
    [37m+  relabel_configs:[0m
    [37m+  - source_labels:[0m
    [37m+    - __address__[0m
    [37m+    regex: 127.0.0.1:(.*)[0m
    [37m+    replacement: localhost:$1[0m
    [37m+    target_label: instance[0m
    [37m+- job_name: gitlab_exporter_database[0m
    [37m+  metrics_path: "/database"[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:9168[0m
    [37m+- job_name: gitlab_exporter_sidekiq[0m
    [37m+  metrics_path: "/sidekiq"[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:9168[0m
    [37m+- job_name: gitlab_exporter_process[0m
    [37m+  metrics_path: "/process"[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:9168[0m
    [37m+- job_name: gitaly[0m
    [37m+  static_configs:[0m
    [37m+  - targets:[0m
    [37m+    - localhost:9236[0m
    [37m+- job_name: kubernetes-cadvisor[0m
    [37m+  scheme: https[0m
    [37m+  tls_config:[0m
    [37m+    ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"[0m
    [37m+    insecure_skip_verify: true[0m
    [37m+  bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"[0m
    [37m+  kubernetes_sd_configs:[0m
    [37m+  - role: node[0m
    [37m+    api_server: https://kubernetes.default.svc:443[0m
    [37m+    tls_config:[0m
    [37m+      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"[0m
    [37m+    bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"[0m
    [37m+  relabel_configs:[0m
    [37m+  - action: labelmap[0m
    [37m+    regex: __meta_kubernetes_node_label_(.+)[0m
    [37m+  - target_label: __address__[0m
    [37m+    replacement: kubernetes.default.svc:443[0m
    [37m+  - source_labels:[0m
    [37m+    - __meta_kubernetes_node_name[0m
    [37m+    regex: "(.+)"[0m
    [37m+    target_label: __metrics_path__[0m
    [37m+    replacement: "/api/v1/nodes/${1}/proxy/metrics/cadvisor"[0m
    [37m+  metric_relabel_configs:[0m
    [37m+  - source_labels:[0m
    [37m+    - pod_name[0m
    [37m+    target_label: environment[0m
    [37m+    regex: "(.+)-.+-.+"[0m
    [37m+- job_name: kubernetes-nodes[0m
    [37m+  scheme: https[0m
    [37m+  tls_config:[0m
    [37m+    ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"[0m
    [37m+    insecure_skip_verify: true[0m
    [37m+  bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"[0m
    [37m+  kubernetes_sd_configs:[0m
    [37m+  - role: node[0m
    [37m+    api_server: https://kubernetes.default.svc:443[0m
    [37m+    tls_config:[0m
    [37m+      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"[0m
    [37m+    bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"[0m
    [37m+  relabel_configs:[0m
    [37m+  - action: labelmap[0m
    [37m+    regex: __meta_kubernetes_node_label_(.+)[0m
    [37m+  - target_label: __address__[0m
    [37m+    replacement: kubernetes.default.svc:443[0m
    [37m+  - source_labels:[0m
    [37m+    - __meta_kubernetes_node_name[0m
    [37m+    regex: "(.+)"[0m
    [37m+    target_label: __metrics_path__[0m
    [37m+    replacement: "/api/v1/nodes/${1}/proxy/metrics"[0m
    [37m+  metric_relabel_configs:[0m
    [37m+  - source_labels:[0m
    [37m+    - pod_name[0m
    [37m+    target_label: environment[0m
    [37m+    regex: "(.+)-.+-.+"[0m
    [37m+- job_name: kubernetes-pods[0m
    [37m+  tls_config:[0m
    [37m+    ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"[0m
    [37m+    insecure_skip_verify: true[0m
    [37m+  bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"[0m
    [37m+  kubernetes_sd_configs:[0m
    [37m+  - role: pod[0m
    [37m+    api_server: https://kubernetes.default.svc:443[0m
    [37m+    tls_config:[0m
    [37m+      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"[0m
    [37m+    bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"[0m
    [37m+  relabel_configs:[0m
    [37m+  - source_labels:[0m
    [37m+    - __meta_kubernetes_pod_annotation_prometheus_io_scrape[0m
    [37m+    action: keep[0m
    [37m+    regex: 'true'[0m
    [37m+  - source_labels:[0m
    [37m+    - __meta_kubernetes_pod_annotation_prometheus_io_path[0m
    [37m+    action: replace[0m
    [37m+    target_label: __metrics_path__[0m
    [37m+    regex: "(.+)"[0m
    [37m+  - source_labels:[0m
    [37m+    - __address__[0m
    [37m+    - __meta_kubernetes_pod_annotation_prometheus_io_port[0m
    [37m+    action: replace[0m
    [37m+    regex: "([^:]+)(?::[0-9]+)?;([0-9]+)"[0m
    [37m+    replacement: "$1:$2"[0m
    [37m+    target_label: __address__[0m
    [37m+  - action: labelmap[0m
    [37m+    regex: __meta_kubernetes_pod_label_(.+)[0m
    [37m+  - source_labels:[0m
    [37m+    - __meta_kubernetes_namespace[0m
    [37m+    action: replace[0m
    [37m+    target_label: kubernetes_namespace[0m
    [37m+  - source_labels:[0m
    [37m+    - __meta_kubernetes_pod_name[0m
    [37m+    action: replace[0m
    [37m+    target_label: kubernetes_pod_name[0m
    [37m+alerting:[0m
    [37m+  alertmanagers:[0m
    [37m+  - static_configs:[0m
    [37m+    - targets:[0m
    [37m+      - localhost:9093[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * service[prometheus] action nothing (skipped due to action :nothing)
  * runit_service[prometheus] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/prometheus] action create
      [32m- create new directory /opt/gitlab/sv/prometheus[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/prometheus/run] action create
      [32m- create new file /opt/gitlab/sv/prometheus/run[0m
      [32m- update content in file /opt/gitlab/sv/prometheus/run from none to 60f91b[0m
      [37m--- /opt/gitlab/sv/prometheus/run	2022-05-01 19:53:33.013621443 +0000[0m
      [37m+++ /opt/gitlab/sv/prometheus/.chef-run20220501-32-14wlese	2022-05-01 19:53:33.013621443 +0000[0m
      [37m@@ -1,8 +1,16 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+umask 077[0m
      [37m+exec chpst -P -e /opt/gitlab/etc/prometheus/env \[0m
      [37m+  -U gitlab-prometheus:gitlab-prometheus \[0m
      [37m+  -u gitlab-prometheus:gitlab-prometheus \[0m
      [37m+  /opt/gitlab/embedded/bin/prometheus --web.listen-address=localhost:9090 --storage.tsdb.path=/var/opt/gitlab/prometheus/data --config.file=/var/opt/gitlab/prometheus/prometheus.yml[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/prometheus/log] action create
      [32m- create new directory /opt/gitlab/sv/prometheus/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/prometheus/log/main] action create
      [32m- create new directory /opt/gitlab/sv/prometheus/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/prometheus/log/config] action create
      [32m- create new file /opt/gitlab/sv/prometheus/log/config[0m
      [32m- update content in file /opt/gitlab/sv/prometheus/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/prometheus/log/config	2022-05-01 19:53:33.025621569 +0000[0m
      [37m+++ /opt/gitlab/sv/prometheus/log/.chef-config20220501-32-1k1lf2k	2022-05-01 19:53:33.025621569 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_prometheus] action create
      [32m- execute the ruby block verify_chown_persisted_on_prometheus[0m
[0m    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/prometheus/config] action create
      [32m- create symlink at /var/log/gitlab/prometheus/config to /opt/gitlab/sv/prometheus/log/config[0m
[0m    * template[/opt/gitlab/sv/prometheus/log/run] action create
      [32m- create new file /opt/gitlab/sv/prometheus/log/run[0m
      [32m- update content in file /opt/gitlab/sv/prometheus/log/run from none to 072b20[0m
      [37m--- /opt/gitlab/sv/prometheus/log/run	2022-05-01 19:53:33.036621683 +0000[0m
      [37m+++ /opt/gitlab/sv/prometheus/log/.chef-run20220501-32-fn8q71	2022-05-01 19:53:33.036621683 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/prometheus[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/prometheus/env] action create
      [32m- create new directory /opt/gitlab/sv/prometheus/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/prometheus/control] action create
      [32m- create new directory /opt/gitlab/sv/prometheus/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/prometheus] action create
      [32m- create symlink at /opt/gitlab/init/prometheus to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/prometheus] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/prometheus/config] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
      * link[/opt/gitlab/init/prometheus] action create (up to date)
      * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/prometheus] action create
        [32m- create symlink at /opt/gitlab/service/prometheus to /opt/gitlab/sv/prometheus[0m
[0m      * ruby_block[wait for prometheus service socket] action run
        [32m- execute the ruby block wait for prometheus service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/prometheus] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/prometheus/config] action create (up to date)
      * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
      * link[/opt/gitlab/init/prometheus] action create (up to date)
      * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/prometheus] action create (up to date)
      * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/prometheus] action create (up to date)
    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)
  
[0m  * consul_service[prometheus] action delete
    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)
     (up to date)
  * execute[/opt/gitlab/bin/gitlab-ctl start prometheus] action run
    [execute] ok: run: prometheus: (pid 1312) 2s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start prometheus[0m
[0m  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create
    [32m- create new file /var/opt/gitlab/prometheus/rules/gitlab.rules[0m
    [32m- update content in file /var/opt/gitlab/prometheus/rules/gitlab.rules from none to 858f1e[0m
    [37m--- /var/opt/gitlab/prometheus/rules/gitlab.rules	2022-05-01 19:53:38.843682229 +0000[0m
    [37m+++ /var/opt/gitlab/prometheus/rules/.chef-gitlab20220501-32-oouoio.rules	2022-05-01 19:53:38.843682229 +0000[0m
    [37m@@ -1,528 +1,1056 @@[0m
    [37m+---[0m
    [37m+groups:[0m
    [37m+- name: GitLab[0m
    [37m+  rules:[0m
    [37m+  - record: instance:unicorn_utilization:ratio[0m
    [37m+    expr: >[0m
    [37m+      sum by (instance) ([0m
    [37m+        unicorn_active_connections[0m
    [37m+      ) /[0m
    [37m+      count by (instance) ([0m
    [37m+        ruby_process_resident_memory_bytes[0m
    [37m+      )[0m
    [37m+  - record: instance:puma_utilization:ratio[0m
    [37m+    expr: >[0m
    [37m+      sum by (instance) ([0m
    [37m+        puma_active_connections[0m
    [37m+      ) /[0m
    [37m+      sum by (instance) ([0m
    [37m+        puma_max_threads[0m
    [37m+      )[0m
    [37m+  - record: job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m[0m
    [37m+    expr: >[0m
    [37m+      sum by (job, route, method, code) ([0m
    [37m+        rate(gitlab_workhorse_http_request_duration_seconds_count[5m])[0m
    [37m+      )[0m
    [37m+[0m
    [37m+  - alert: ServiceDown[0m
    [37m+    expr: avg_over_time(up[5m]) * 100 < 50[0m
    [37m+    annotations:[0m
    [37m+      description: The service {{ $labels.job }} instance {{ $labels.instance }} is[0m
    [37m+        not responding for more than 50% of the time for 5 minutes.[0m
    [37m+      summary: The service {{ $labels.job }} is not responding[0m
    [37m+  - alert: RedisDown[0m
    [37m+    expr: avg_over_time(redis_up[5m]) * 100 < 50[0m
    [37m+    annotations:[0m
    [37m+      description: The Redis service {{ $labels.job }} instance {{ $labels.instance[0m
    [37m+        }} is not responding for more than 50% of the time for 5 minutes.[0m
    [37m+      summary: The Redis service {{ $labels.job }} is not responding[0m
    [37m+  - alert: PostgresDown[0m
    [37m+    expr: avg_over_time(pg_up[5m]) * 100 < 50[0m
    [37m+    annotations:[0m
    [37m+      description: The Postgres service {{ $labels.job }} instance {{ $labels.instance[0m
    [37m+        }} is not responding for more than 50% of the time for 5 minutes.[0m
    [37m+      summary: The Postgres service {{ $labels.job }} is not responding[0m
    [37m+  - alert: UnicornQueueing[0m
    [37m+    expr: avg_over_time(unicorn_queued_connections[30m]) > 1[0m
    [37m+    annotations:[0m
    [37m+      description: Unicorn instance {{ $labels.instance }} is queueing requests with[0m
    [37m+        an average of {{ $value | printf "%.1f" }} over the last 30 minutes.[0m
    [37m+      summary: Unicorn is queueing requests[0m
    [37m+  - alert: PumaQueueing[0m
    [37m+    expr: avg_over_time(puma_queued_connections[30m]) > 1[0m
    [37m+    annotations:[0m
    [37m+      description: Puma instance {{ $labels.instance }} is queueing requests with[0m
    [37m+        an average of {{ $value | printf "%.1f" }} over the last 30 minutes.[0m
    [37m+      summary: Puma is queueing requests[0m
    [37m+  - alert: HighUnicornUtilization[0m
    [37m+    expr: instance:unicorn_utilization:ratio * 100 > 90[0m
    [37m+    for: 60m[0m
    [37m+    annotations:[0m
    [37m+      description: Unicorn instance {{ $labels.instance }} has more than 90% worker utilization ({{ $value | printf "%.1f" }}%) over the last 60 minutes.[0m
    [37m+      summary: Unicorn is has high utilization[0m
    [37m+  - alert: HighPumaUtilization[0m
    [37m+    expr: instance:puma_utilization:ratio * 100 > 90[0m
    [37m+    for: 60m[0m
    [37m+    annotations:[0m
    [37m+      description: Puma instance {{ $labels.instance }} has more than 90% thread utilization ({{ $value | printf "%.1f" }}%) over the last 60 minutes.[0m
    [37m+      summary: Puma is has high utilization[0m
    [37m+  - alert: SidekiqJobsQueuing[0m
    [37m+    expr: sum by (name) (sidekiq_queue_size) > 0[0m
    [37m+    for: 60m[0m
    [37m+    annotations:[0m
    [37m+      summary: Sidekiq has jobs queued[0m
    [37m+      description: Sidekiq queue {{ $labels.name }} has {{ $value }} jobs queued for 60 minutes.[0m
    [37m+  - alert: HighgRPCResourceExhaustedRate[0m
    [37m+    expr: >[0m
    [37m+      sum without (grpc_code, grpc_method, grpc_service, grpc_type) ([0m
    [37m+        rate(grpc_server_handled_total{grpc_code="ResourceExhausted"}[5m])[0m
    [37m+      ) /[0m
    [37m+      sum without (grpc_code, grpc_method, grpc_service, grpc_type) ([0m
    [37m+        rate(grpc_server_handled_total[5m])[0m
    [37m+      ) * 100 > 1[0m
    [37m+    for: 60m[0m
    [37m+    annotations:[0m
    [37m+      summary: High gRPC ResourceExhausted error rate[0m
    [37m+      description: Job {{ $labels.job }} instance {{ $labels.instance }} gRPC is returning more than 1% ({{ $value | printf "%.1f" }}%) ResourceExhausted errors over the last 60 minutes.[0m
    [37m+  - alert: PostgresDatabaseDeadlocks[0m
    [37m+    expr: increase(pg_stat_database_deadlocks[5m]) > 0[0m
    [37m+    annotations:[0m
    [37m+      summary: Postgres database has deadlocks[0m
    [37m+      description: Postgres database {{ $labels.instance }} had {{ $value | printf "%d" }} deadlocks in the last 5 minutes.[0m
    [37m+  - alert: PostgresDatabaseDeadlockCancels[0m
    [37m+    expr: increase(pg_stat_database_deadlocks[5m]) > 0[0m
    [37m+    annotations:[0m
    [37m+      summary: Postgres database has queries canceled due to deadlocks[0m
    [37m+      description: Postgres database {{ $labels.instance }} had {{ $value | printf "%d" }} queries canceled due to deadlocks in the last 5 minutes.[0m
    [37m+  # Low-traffic - < 10 QPS (600 RPM)[0m
    [37m+  - alert: WorkhorseHighErrorRate[0m
    [37m+    expr: >[0m
    [37m+      ([0m
    [37m+        sum without (job, code) ([0m
    [37m+          job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m{code=~"5.."}[0m
    [37m+        ) /[0m
    [37m+        sum without (job,code) ([0m
    [37m+          job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m[0m
    [37m+        ) < 10[0m
    [37m+      ) * 100 > 50[0m
    [37m+    annotations:[0m
    [37m+      summary: Workhorse has high error rates[0m
    [37m+      description: Workhorse route {{ $labels.route }} method {{ $labels.method }} has more than 50% errors ({{ $value | printf "%.1f" }}%) for the last 60 minutes.[0m
    [37m+  # High-traffic - >= 10 QPS (600 RPM)[0m
    [37m+  - alert: WorkhorseHighErrorRate[0m
    [37m+    expr: >[0m
    [37m+      ([0m
    [37m+        sum without (job, code) ([0m
    [37m+          job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m{code=~"5.."}[0m
    [37m+        ) /[0m
    [37m+        sum without (job,code) ([0m
    [37m+          job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m[0m
    [37m+        ) > 10[0m
    [37m+      ) * 100 > 10[0m
    [37m+    annotations:[0m
    [37m+      summary: Workhorse has high error rates[0m
    [37m+      description: Workhorse route {{ $labels.route }} method {{ $labels.method }} has more than 10% errors ({{ $value | printf "%.1f" }}%) for the last 60 minutes.[0m
    [37m+[0m
    [37m+###[0m
    [37m+# These metrics are top-level GitLab Service Level Indicators (SLIs). They can[0m
    [37m+# be used to monitor the overall health of a GitLab instance.[0m
    [37m+- name: Service Level Indicators[0m
    [37m+  interval: 30s[0m
    [37m+  rules:[0m
    [37m+  # Service availability.[0m
    [37m+  - record: gitlab_sli:job:availability:ratio[0m
    [37m+    expr: >[0m
    [37m+      avg by (job) ([0m
    [37m+        avg_over_time(up[30s])[0m
    [37m+      )[0m
    [37m+  # Rails worker/thread capacity.[0m
    [37m+  - record: gitlab_sli:rails_active_connections:avg30s[0m
    [37m+    expr: >[0m
    [37m+      sum(avg_over_time(unicorn_active_connections[30s])) or[0m
    [37m+      sum(avg_over_time(puma_active_connections[30s]))[0m
    [37m+  - record: gitlab_sli:rails_queued_connections:avg30s[0m
    [37m+    expr: >[0m
    [37m+      sum(avg_over_time(unicorn_queued_connections[30s])) or[0m
    [37m+      sum(avg_over_time(puma_queued_connections[30s]))[0m
    [37m+  - record: gitlab_sli:rails_active_connections:max30s[0m
    [37m+    expr: >[0m
    [37m+      sum(max_over_time(unicorn_active_connections[30s])) or[0m
    [37m+      sum(max_over_time(puma_active_connections[30s]))[0m
    [37m+  - record: gitlab_sli:rails_queued_connections:max30s[0m
    [37m+    expr: >[0m
    [37m+      sum(max_over_time(unicorn_queued_connections[30s])) or[0m
    [37m+      sum(max_over_time(puma_queued_connections[30s]))[0m
    [37m+  - record: gitlab_sli:rails_workers:avg30s[0m
    [37m+    expr: >[0m
    [37m+      count(avg_over_time(ruby_memory_bytes[30s])) or[0m
    [37m+      sum(avg_over_time(puma_max_threads[30s]))[0m
    [37m+  # Redis CPU use.[0m
    [37m+  - record: gitlab_sli:redis_cpu_seconds:rate1m[0m
    [37m+    expr: >[0m
    [37m+      (sum(rate(redis_used_cpu_sys[1m])) + sum(rate(redis_used_cpu_user[1m]))) or[0m
    [37m+      (sum(rate(redis_cpu_sys_seconds_total[1m])) + sum(rate(redis_cpu_user_seconds_total[1m])))[0m
    [37m+  # Workhorse traffic.[0m
    [37m+  - record: gitlab_sli:code_method_route:workhorse_http_request_count:rate1m[0m
    [37m+    expr: >[0m
    [37m+      sum by (code,method,route) ([0m
    [37m+        rate(gitlab_workhorse_http_request_duration_seconds_count[1m])[0m
    [37m+      )[0m
    [37m+  - record: gitlab_sli:code_method_route:workhorse_http_request_duration_seconds:rate1m[0m
    [37m+    expr: >[0m
    [37m+      sum by (code,method,route) ([0m
    [37m+        rate(gitlab_workhorse_http_request_duration_seconds_sum[1m])[0m
    [37m+      )[0m
    [37m+# SLI - Apdex[0m
    [37m+- name: Service Level Indicators - Apdex[0m
    [37m+  interval: 1m[0m
    [37m+  rules:[0m
    [37m+  # Gitaly goserver[0m
    [37m+  # Satisfied -> 0.5 seconds[0m
    [37m+  # Acceptable -> 1 seconds[0m
    [37m+  - record: gitlab_sli:gitlab_component_apdex:ratio[0m
    [37m+    labels:[0m
    [37m+      job: gitaly[0m
    [37m+    expr: >[0m
    [37m+      ([0m
    [37m+        sum(rate(grpc_server_handling_seconds_bucket{job="gitaly",grpc_type="unary",le="0.5",grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase|UserSquash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m]))[0m
    [37m+        +[0m
    [37m+        sum(rate(grpc_server_handling_seconds_bucket{job="gitaly",grpc_type="unary",le="1",grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase|UserSquash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m]))[0m
    [37m+      )[0m
    [37m+      /[0m
    [37m+      2 / sum(rate(grpc_server_handling_seconds_count{job="gitaly",grpc_type="unary",grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase|UserSquash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m]))[0m
    [37m+  # Sidekiq TODO: https://gitlab.com/gitlab-org/gitlab-foss/issues/56752[0m
    [37m+  # - record: gitlab_sli:gitlab_component_apdex:ratio[0m
    [37m+  #   labels:[0m
    [37m+  #     job: gitlab-sidekiq[0m
    [37m+  #   expr: >[0m
    [37m+  #     ([0m
    [37m+  #       sum(rate(sidekiq_jobs_completion_time_seconds_bucket{le="25"}[1m]))[0m
    [37m+  #       +[0m
    [37m+  #       sum(rate(sidekiq_jobs_completion_time_seconds_bucket{le="50"}[1m]))[0m
    [37m+  #     )[0m
    [37m+  #     / 2[0m
    [37m+  #     /[0m
    [37m+  #     sum(rate(sidekiq_jobs_completion_time_seconds_count[1m]))[0m
    [37m+[0m
    [37m+  # Workhorse[0m
    [37m+  # Satisfied -> 1 seconds[0m
    [37m+  # Acceptable -> 10 seconds[0m
    [37m+  - record: gitlab_sli:gitlab_component_apdex:ratio[0m
    [37m+    labels:[0m
    [37m+      job: gitlab-workhorse[0m
    [37m+    expr: >[0m
    [37m+      ([0m
    [37m+        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="1",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/api/v4/jobs/request\\z"}[1m]))[0m
    [37m+      +[0m
    [37m+        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="10",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/api/v4/jobs/request\\z"}[1m]))[0m
    [37m+      )[0m
    [37m+      /[0m
    [37m+      2 / sum(rate(gitlab_workhorse_http_request_duration_seconds_count{route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/api/v4/jobs/request\\z"}[1m]))[0m
    [37m+[0m
    [37m+# SLI - Errors[0m
    [37m+- name: Service Level Indicators - Errors[0m
    [37m+  interval: 1m[0m
    [37m+  rules:[0m
    [37m+  # PostgreSQL[0m
    [37m+  - record: gitlab_sli:gitlab_component_ops:rate[0m
    [37m+    labels:[0m
    [37m+      job: postgres[0m
    [37m+    expr: >[0m
    [37m+      sum(rate(pg_stat_database_xact_commit[1m])) +[0m
    [37m+      sum(rate(pg_stat_database_xact_rollback[1m]))[0m
    [37m+  - record: gitlab_sli:gitlab_component_errors:rate[0m
    [37m+    labels:[0m
    [37m+      job: postgres[0m
    [37m+    expr: sum(rate(pg_stat_database_xact_rollback[1m]))[0m
    [37m+  # Rails (Unicorn/Puma)[0m
    [37m+  - record: gitlab_sli:gitlab_component_ops:rate[0m
    [37m+    labels:[0m
    [37m+      job: gitlab-rails[0m
    [37m+    expr: >[0m
    [37m+      sum([0m
    [37m+        rate(http_request_duration_seconds_count{job="gitlab-rails"}[1m])[0m
    [37m+      )[0m
    [37m+  - record: gitlab_sli:gitlab_component_errors:rate[0m
    [37m+    labels:[0m
    [37m+      job: gitlab-rails[0m
    [37m+    expr: >[0m
    [37m+      sum([0m
    [37m+        rate(http_request_duration_seconds_count{job="gitlab-rails",status=~"5.."}[1m])[0m
    [37m+      )[0m
    [37m+  # Sidekiq TODO: https://gitlab.com/gitlab-org/gitlab-foss/issues/56752[0m
    [37m+  # - record: gitlab_sli:gitlab_component_ops:rate[0m
    [37m+  #   labels:[0m
    [37m+  #     job: gitlab-sidekiq[0m
    [37m+  #   expr: >[0m
    [37m+  #     sum ([0m
    [37m+  #       rate(sidekiq_jobs_started_total{job="gitlab-sidekiq"}[1m])[0m
    [37m+  #     )[0m
    [37m+  # - record: gitlab_sli:gitlab_component_errors:rate[0m
    [37m+  #   labels:[0m
    [37m+  #     job: gitlab-sidekiq[0m
    [37m+  #   expr: >[0m
    [37m+  #     sum ([0m
    [37m+  #       rate(sidekiq_jobs_failed_total{job="gitlab-sidekiq"}[1m])[0m
    [37m+  #     )[0m
    [37m+  # Workhorse[0m
    [37m+  - record: gitlab_sli:gitlab_component_ops:rate[0m
    [37m+    labels:[0m
    [37m+      job: gitlab-workhorse[0m
    [37m+    expr: >[0m
    [37m+      sum([0m
    [37m+        rate(gitlab_workhorse_http_requests_total{job="gitlab-workhorse"}[1m])[0m
    [37m+      )[0m
    [37m+  - record: gitlab_sli:gitlab_component_errors:rate[0m
    [37m+    labels:[0m
    [37m+      job: gitlab-workhorse[0m
    [37m+    expr: >[0m
    [37m+      sum([0m
    [37m+        rate(gitlab_workhorse_http_requests_total{job="gitlab-workhorse",code=~"5.."}[1m])[0m
    [37m+      )[0m
    [37m+  ###[0m
    [37m+  # Calculate service error ratios[0m
    [37m+  - record: gitlab_sli:gitlab_component_errors:ratio[0m
    [37m+    expr: >[0m
    [37m+      gitlab_sli:gitlab_component_errors:rate /[0m
    [37m+      gitlab_sli:gitlab_component_ops:rate[0m
    [37m+[0m
    [37m+- name: GitLab Saturation Ratios[0m
    [37m+  interval: 1m[0m
    [37m+  rules:[0m
    [37m+  # type: *, component: cpu[0m
    [37m+  # this measures average CPU across all the cores for the entire fleet for the given service[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'cpu'[0m
    [37m+    expr: >[0m
    [37m+      avg(1 - rate(node_cpu_seconds_total{mode="idle"}[1m]))[0m
    [37m+[0m
    [37m+  # type: *, component: single_node_cpu[0m
    [37m+  # this measures the maximum cpu availability across all the codes on a single server[0m
    [37m+  # this can be helpful if CPU is not even distributed across the fleet.[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'single_node_cpu'[0m
    [37m+    expr: >[0m
    [37m+      max([0m
    [37m+        avg(1 - rate(node_cpu_seconds_total{mode="idle"}[1m]))[0m
    [37m+      )[0m
    [37m+[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'disk_space'[0m
    [37m+    expr: >[0m
    [37m+      max([0m
    [37m+        ([0m
    [37m+          ([0m
    [37m+            node_filesystem_size_bytes{fstype=~"ext.|xfs|nfs.?"}[0m
    [37m+            -[0m
    [37m+            node_filesystem_free_bytes{fstype=~"ext.|xfs|nfs.?"}[0m
    [37m+          )[0m
    [37m+          /[0m
    [37m+          node_filesystem_size_bytes{fstype=~"ext.|xfs|nfs.?"}[0m
    [37m+        )[0m
    [37m+      )[0m
    [37m+[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'memory'[0m
    [37m+    expr: max (instance:node_memory_utilization:ratio)[0m
    [37m+[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'unicorn'[0m
    [37m+    expr: >[0m
    [37m+      clamp_max([0m
    [37m+        sum(avg_over_time(unicorn_active_connections{job=~"gitlab-(rails|unicorn)"}[1m]))[0m
    [37m+        /[0m
    [37m+        sum(max(unicorn_workers) without (pid)),[0m
    [37m+        1[0m
    [37m+      )[0m
    [37m+[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'single_threaded_cpu'[0m
    [37m+    expr: >[0m
    [37m+      clamp_max([0m
    [37m+        max ([0m
    [37m+         (rate(redis_cpu_user_seconds_total[1m]) + rate(redis_cpu_sys_seconds_total[1m])) or[0m
    [37m+         (rate(redis_used_cpu_user[1m]) + rate(redis_used_cpu_sys[1m]))[0m
    [37m+        ),[0m
    [37m+        1[0m
    [37m+      )[0m
    [37m+[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'connection_pool'[0m
    [37m+    expr: >[0m
    [37m+      clamp_max([0m
    [37m+        max([0m
    [37m+          max_over_time(pgbouncer_pools_server_active_connections{user="gitlab"}[1m]) /[0m
    [37m+          ([0m
    [37m+            ([0m
    [37m+              pgbouncer_pools_server_idle_connections{user="gitlab"} +[0m
    [37m+              pgbouncer_pools_server_active_connections{user="gitlab"} +[0m
    [37m+              pgbouncer_pools_server_testing_connections{user="gitlab"} +[0m
    [37m+              pgbouncer_pools_server_used_connections{user="gitlab"} +[0m
    [37m+              pgbouncer_pools_server_login_connections{user="gitlab"}[0m
    [37m+            )[0m
    [37m+            > 0[0m
    [37m+          )[0m
    [37m+      ), 1)[0m
    [37m+[0m
    [37m+  # type: postgres-delayed, postgres-archive, patroni[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'active_db_connections'[0m
    [37m+    expr: >[0m
    [37m+      clamp_max([0m
    [37m+        max([0m
    [37m+          sum without(state) (pg_stat_activity_count{datname="gitlabhq_production", state!="idle"})[0m
    [37m+          /[0m
    [37m+          (sum without(state) (pg_stat_activity_count{datname="gitlabhq_production"}) > 0)[0m
    [37m+      ), 1)[0m
    [37m+[0m
    [37m+  # type: redis, redis-cache, component: redis_clients[0m
    [37m+  # Records the saturation of redis client connections against a redis fleet[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'redis_clients'[0m
    [37m+    expr: >[0m
    [37m+      max([0m
    [37m+        max_over_time(redis_connected_clients[1m])[0m
    [37m+        /[0m
    [37m+        redis_config_maxclients[0m
    [37m+      )[0m
    [37m+[0m
    [37m+  # Aggregate over all components within a service using max[0m
    [37m+  - record: gitlab_sli:gitlab_service_saturation:ratio[0m
    [37m+    expr: >[0m
    [37m+      max by (component) (gitlab_sli:gitlab_component_saturation:ratio)[0m
    [37m+[0m
    [37m+  # Calculate the "sapdex" - the saturation apdex for the metric. 1 < less then soft limit, 0.5 < hard limit, else 0[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio:sapdex[0m
    [37m+    expr: >[0m
    [37m+      clamp_min(gitlab_sli:gitlab_component_saturation:ratio <= on(component) group_left slo:max:soft:gitlab_sli:gitlab_component_saturation:ratio, 1)[0m
    [37m+      or[0m
    [37m+      clamp_min(clamp_max(gitlab_sli:gitlab_component_saturation:ratio > on(component) group_left slo:max:soft:gitlab_sli:gitlab_component_saturation:ratio, 0.5), 0.5)[0m
    [37m+      or[0m
    [37m+      clamp_max(gitlab_sli:gitlab_component_saturation:ratio > on(component) group_left slo:max:hard:gitlab_sli:gitlab_component_saturation:ratio, 0)[0m
    [37m+[0m
    [37m+  # Open file descriptors[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'open_fds'[0m
    [37m+    expr: >[0m
    [37m+      max([0m
    [37m+        max_over_time(process_open_fds[1m])[0m
    [37m+        /[0m
    [37m+        max_over_time(process_max_fds[1m])[0m
    [37m+      )[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio[0m
    [37m+    labels:[0m
    [37m+      component: 'open_ruby_fds'[0m
    [37m+    expr: >[0m
    [37m+      max([0m
    [37m+        max_over_time(ruby_file_descriptors[1m])[0m
    [37m+        /[0m
    [37m+        max_over_time(ruby_process_max_fds[1m])[0m
    [37m+      )[0m
    [37m+[0m
    [37m+# Unlike other service metrics, we record the stats for each component independently[0m
    [37m+- name: GitLab Saturation Ratios Stats[0m
    [37m+  interval: 5m[0m
    [37m+  rules:[0m
    [37m+  # Average values for each service, over a week[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio:avg_over_time_1w[0m
    [37m+    expr: >[0m
    [37m+      avg_over_time(gitlab_sli:gitlab_component_saturation:ratio[1w])[0m
    [37m+[0m
    [37m+  # Using linear week-on-week growth, what prediction to we have for 2w from now?[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio:predict_linear_2w[0m
    [37m+    expr: >[0m
    [37m+      predict_linear(gitlab_sli:gitlab_component_saturation:ratio:avg_over_time_1w[1w], 86400 * 14)[0m
    [37m+[0m
    [37m+  # Using linear week-on-week growth, what prediction to we have for 30d from now?[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio:predict_linear_30d[0m
    [37m+    expr: >[0m
    [37m+      predict_linear(gitlab_sli:gitlab_component_saturation:ratio:avg_over_time_1w[1w], 86400 * 30)[0m
    [37m+[0m
    [37m+  # Sapdex, average for week[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio:sapdex:avg_over_time_1w[0m
    [37m+    expr: >[0m
    [37m+      avg_over_time(gitlab_sli:gitlab_component_saturation:ratio:sapdex[1w])[0m
    [37m+[0m
    [37m+  # Sapdex long term trend forecasting[0m
    [37m+  # Using linear week-on-week growth, what prediction to we have for 30d from now?[0m
    [37m+  - record: gitlab_sli:gitlab_component_saturation:ratio:sapdex:avg_over_time_1w:predict_linear_30d[0m
    [37m+    expr: >[0m
    [37m+      predict_linear(gitlab_sli:gitlab_component_saturation:ratio:sapdex:avg_over_time_1w[1w], 86400 * 30)[0m
    [37m+[0m
    [37m+###[0m
    [37m+# Metrics used by Usage Ping reports. These are primarily for self-managed installations.[0m
    [37m+# See https://docs.gitlab.com/ee/development/telemetry/usage_ping.html#prometheus-queries[0m
    [37m+#[0m
    [37m+- name: GitLab Usage Ping[0m
    [37m+  interval: 5m[0m
    [37m+  rules:[0m
    [37m+  ###[0m
    [37m+  # Application wide metrics[0m
    [37m+  #[0m
    [37m+  - record: gitlab_usage_ping:ops:rate5m[0m
    [37m+    labels:[0m
    [37m+      service: workhorse[0m
    [37m+      component: http_requests[0m
    [37m+    expr: sum (rate (gitlab_workhorse_http_requests_total[5m]))[0m
    [37m+[0m
    [37m+  # Database Primary Performance Indicator: Query apdex[0m
    [37m+  # Target -> 100ms[0m
    [37m+  # Tolerable -> 250ms[0m
    [37m+  - record: gitlab_usage_ping:sql_duration_apdex:ratio_rate5m[0m
    [37m+    expr: >[0m
    [37m+      ([0m
    [37m+        sum(rate(gitlab_sql_duration_seconds_bucket{le="0.1"}[5m]))[0m
    [37m+        +[0m
    [37m+        sum(rate(gitlab_sql_duration_seconds_bucket{le="0.25"}[5m]))[0m
    [37m+      )[0m
    [37m+      /[0m
    [37m+      2[0m
    [37m+      /[0m
    [37m+      ([0m
    [37m+        sum(rate(gitlab_sql_duration_seconds_count[5m])) > 0[0m
    [37m+      )[0m
    [37m+[0m
    [37m+  ###[0m
    [37m+  # Node level metrics[0m
    [37m+  #[0m
    [37m+  - record: gitlab_usage_ping:node_cpus:count[0m
    [37m+    expr: max (instance:node_cpus:count) by (instance)[0m
    [37m+  - record: gitlab_usage_ping:node_memory_total_bytes:max[0m
    [37m+    expr: max (node_memory_MemTotal_bytes) by (instance)[0m
    [37m+  - record: gitlab_usage_ping:node_cpu_utilization:avg[0m
    [37m+    expr: avg (instance:node_cpu_utilization:ratio) by (instance)[0m
    [37m+  - record: gitlab_usage_ping:node_memory_utilization:avg[0m
    [37m+    expr: avg (instance:node_memory_utilization:ratio) by (instance)[0m
    [37m+[0m
    [37m+  ###[0m
    [37m+  # Service level metrics[0m
    [37m+  #[0m
    [37m+  - record: gitlab_usage_ping:node_service_process_resident_memory_bytes:avg[0m
    [37m+    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_resident_memory_bytes", job != "gitlab_exporter_process"})[0m
    [37m+  - record: gitlab_usage_ping:node_service_process_unique_memory_bytes:avg[0m
    [37m+    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_unique_memory_bytes", job != "gitlab_exporter_process"})[0m
    [37m+  - record: gitlab_usage_ping:node_service_process_proportional_memory_bytes:avg[0m
    [37m+    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_proportional_memory_bytes", job != "gitlab_exporter_process"})[0m
    [37m+  - record: gitlab_usage_ping:node_service_process:count[0m
    [37m+    expr: >[0m
    [37m+      count by (instance, job) ([0m
    [37m+        {__name__ =~ "(ruby_){0,1}process_start_time_seconds", job != "gitlab_exporter_process"}[0m
    [37m+      )[0m
    [37m+  - record: gitlab_usage_ping:node_service_app_server_workers:sum[0m
    [37m+    labels:[0m
    [37m+      server: puma[0m
    [37m+    expr: sum by (instance, job) (puma_workers)[0m
    [37m+  - record: gitlab_usage_ping:node_service_app_server_workers:sum[0m
    [37m+    labels:[0m
    [37m+      server: unicorn[0m
    [37m+    expr: sum by (instance, job) (unicorn_workers)[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create
    [32m- create new file /var/opt/gitlab/prometheus/rules/node.rules[0m
    [32m- update content in file /var/opt/gitlab/prometheus/rules/node.rules from none to db4183[0m
    [37m--- /var/opt/gitlab/prometheus/rules/node.rules	2022-05-01 19:53:38.869682500 +0000[0m
    [37m+++ /var/opt/gitlab/prometheus/rules/.chef-node20220501-32-yuqe5x.rules	2022-05-01 19:53:38.869682500 +0000[0m
    [37m@@ -1,42 +1,84 @@[0m
    [37m+groups:[0m
    [37m+- name: Node[0m
    [37m+  rules:[0m
    [37m+  - record: instance:node_cpus:count[0m
    [37m+    expr: count without(cpu, mode) (node_cpu{mode="idle"})[0m
    [37m+  - record: instance:node_cpus:count[0m
    [37m+    expr: count without(cpu, mode) (node_cpu_seconds_total{mode="idle"})[0m
    [37m+  - record: instance_cpu:node_cpu_seconds_not_idle:rate5m[0m
    [37m+    expr: sum without(mode) (rate(node_cpu{mode!="idle"}[5m]))[0m
    [37m+  - record: instance_cpu:node_cpu_seconds_not_idle:rate5m[0m
    [37m+    expr: sum without(mode) (rate(node_cpu_seconds_total{mode!="idle"}[5m]))[0m
    [37m+  - record: instance_mode:node_cpu_seconds:rate5m[0m
    [37m+    expr: sum without(cpu) (rate(node_cpu[5m]))[0m
    [37m+  - record: instance_mode:node_cpu_seconds:rate5m[0m
    [37m+    expr: sum without(cpu) (rate(node_cpu_seconds_total[5m]))[0m
    [37m+  - record: instance:node_cpu_utilization:ratio[0m
    [37m+    expr: sum without(mode) (instance_mode:node_cpu_seconds:rate5m{mode!="idle"})[0m
    [37m+      / instance:node_cpus:count[0m
    [37m+  - record: instance:node_memory_utilization:ratio[0m
    [37m+    expr: >[0m
    [37m+      1 - ([0m
    [37m+        node_memory_MemAvailable_bytes or[0m
    [37m+         (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)[0m
    [37m+      ) / node_memory_MemTotal_bytes[0m
    [37m+  - record: instance:node_filesystem_avail:ratio[0m
    [37m+    expr: node_filesystem_avail_bytes / (node_filesystem_size_bytes > 0)[0m
    [37m+  - alert: FilesystemAlmostFull[0m
    [37m+    expr: instance:node_filesystem_avail:ratio * 100 < 5[0m
    [37m+    for: 10m[0m
    [37m+    annotations:[0m
    [37m+      description: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} on[0m
    [37m+        {{ $labels.instance }} has {{ $value | printf "%.2f" }}% space available.[0m
    [37m+      summary: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} is almost[0m
    [37m+        full[0m
    [37m+  - alert: FilesystemFullIn1Day[0m
    [37m+    expr: predict_linear(node_filesystem_avail_bytes[6h], 24 * 3600) < 0[0m
    [37m+    for: 30m[0m
    [37m+    annotations:[0m
    [37m+      description: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} on[0m
    [37m+        {{ $labels.instance }} will be full in the next 24 hours.[0m
    [37m+      summary: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} will be[0m
    [37m+        full within 24 hours[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0mRecipe: monitoring::alertmanager[0m
  * directory[/var/opt/gitlab/alertmanager] action create
    [32m- create new directory /var/opt/gitlab/alertmanager[0m
    [32m- change mode from '' to '0750'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/var/log/gitlab/alertmanager] action create
    [32m- create new directory /var/log/gitlab/alertmanager[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/opt/gitlab/etc/alertmanager/env] action create
    [32m- create new directory /opt/gitlab/etc/alertmanager/env[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * env_dir[/opt/gitlab/etc/alertmanager/env] action create
    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create
      [32m- create new file /opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR[0m
      [32m- update content in file /opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR from none to 4f45cf[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * file[Alertmanager config] action create
    [32m- create new file /var/opt/gitlab/alertmanager/alertmanager.yml[0m
    [32m- update content in file /var/opt/gitlab/alertmanager/alertmanager.yml from none to 21b7be[0m
    [37m--- /var/opt/gitlab/alertmanager/alertmanager.yml	2022-05-01 19:53:38.892682739 +0000[0m
    [37m+++ /var/opt/gitlab/alertmanager/.chef-alertmanager20220501-32-1mk4l89.yml	2022-05-01 19:53:38.892682739 +0000[0m
    [37m@@ -1,9 +1,18 @@[0m
    [37m+---[0m
    [37m+global: {}[0m
    [37m+templates: [][0m
    [37m+route:[0m
    [37m+  receiver: default-receiver[0m
    [37m+  routes: [][0m
    [37m+receivers:[0m
    [37m+- name: default-receiver[0m
    [37m+inhibit_rules: [][0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * service[alertmanager] action nothing (skipped due to action :nothing)
  * runit_service[alertmanager] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/alertmanager] action create
      [32m- create new directory /opt/gitlab/sv/alertmanager[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/alertmanager/run] action create
      [32m- create new file /opt/gitlab/sv/alertmanager/run[0m
      [32m- update content in file /opt/gitlab/sv/alertmanager/run from none to 36da8b[0m
      [37m--- /opt/gitlab/sv/alertmanager/run	2022-05-01 19:53:38.908682906 +0000[0m
      [37m+++ /opt/gitlab/sv/alertmanager/.chef-run20220501-32-142f4kv	2022-05-01 19:53:38.908682906 +0000[0m
      [37m@@ -1,8 +1,16 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+umask 077[0m
      [37m+exec chpst -P -e /opt/gitlab/etc/alertmanager/env \[0m
      [37m+  -U gitlab-prometheus:gitlab-prometheus \[0m
      [37m+  -u gitlab-prometheus:gitlab-prometheus \[0m
      [37m+  /opt/gitlab/embedded/bin/alertmanager --web.listen-address=localhost:9093 --storage.path=/var/opt/gitlab/alertmanager/data --config.file=/var/opt/gitlab/alertmanager/alertmanager.yml[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/alertmanager/log] action create
      [32m- create new directory /opt/gitlab/sv/alertmanager/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/alertmanager/log/main] action create
      [32m- create new directory /opt/gitlab/sv/alertmanager/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/alertmanager/log/config] action create
      [32m- create new file /opt/gitlab/sv/alertmanager/log/config[0m
      [32m- update content in file /opt/gitlab/sv/alertmanager/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/alertmanager/log/config	2022-05-01 19:53:38.925683083 +0000[0m
      [37m+++ /opt/gitlab/sv/alertmanager/log/.chef-config20220501-32-4j66hk	2022-05-01 19:53:38.925683083 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_alertmanager] action create
      [32m- execute the ruby block verify_chown_persisted_on_alertmanager[0m
[0m    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/alertmanager/config] action create
      [32m- create symlink at /var/log/gitlab/alertmanager/config to /opt/gitlab/sv/alertmanager/log/config[0m
[0m    * template[/opt/gitlab/sv/alertmanager/log/run] action create
      [32m- create new file /opt/gitlab/sv/alertmanager/log/run[0m
      [32m- update content in file /opt/gitlab/sv/alertmanager/log/run from none to 2feab9[0m
      [37m--- /opt/gitlab/sv/alertmanager/log/run	2022-05-01 19:53:38.935683188 +0000[0m
      [37m+++ /opt/gitlab/sv/alertmanager/log/.chef-run20220501-32-gx1gb8	2022-05-01 19:53:38.935683188 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/alertmanager[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/alertmanager/env] action create
      [32m- create new directory /opt/gitlab/sv/alertmanager/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/alertmanager/control] action create
      [32m- create new directory /opt/gitlab/sv/alertmanager/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/alertmanager] action create
      [32m- create symlink at /opt/gitlab/init/alertmanager to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/alertmanager/config] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
      * link[/opt/gitlab/init/alertmanager] action create (up to date)
      * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/alertmanager] action create
        [32m- create symlink at /opt/gitlab/service/alertmanager to /opt/gitlab/sv/alertmanager[0m
[0m      * ruby_block[wait for alertmanager service socket] action run
        [32m- execute the ruby block wait for alertmanager service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/alertmanager/config] action create (up to date)
      * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
      * link[/opt/gitlab/init/alertmanager] action create (up to date)
      * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/alertmanager] action create (up to date)
      * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/alertmanager] action create (up to date)
    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)
  
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start alertmanager] action run
    [execute] ok: run: alertmanager: (pid 1354) 2s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start alertmanager[0m
[0mRecipe: monitoring::postgres-exporter[0m
  * directory[/var/log/gitlab/postgres-exporter] action create
    [32m- create new directory /var/log/gitlab/postgres-exporter[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-psql'[0m
[0m  * directory[/var/opt/gitlab/postgres-exporter] action create
    [32m- create new directory /var/opt/gitlab/postgres-exporter[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-psql'[0m
[0m  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create
    * directory[/opt/gitlab/etc/postgres-exporter/env] action create
      [32m- create new directory /opt/gitlab/etc/postgres-exporter/env[0m
[0m    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create
      [32m- create new file /opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR[0m
      [32m- update content in file /opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR from none to 4f45cf[0m
      [32m- suppressed sensitive resource[0m
[0m    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create
      [32m- create new file /opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME[0m
      [32m- update content in file /opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME from none to af4c92[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * service[postgres-exporter] action nothing (skipped due to action :nothing)
  * runit_service[postgres-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgres-exporter] action create
      [32m- create new directory /opt/gitlab/sv/postgres-exporter[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/postgres-exporter/run] action create
      [32m- create new file /opt/gitlab/sv/postgres-exporter/run[0m
      [32m- update content in file /opt/gitlab/sv/postgres-exporter/run from none to b40d34[0m
      [37m--- /opt/gitlab/sv/postgres-exporter/run	2022-05-01 19:53:44.769744015 +0000[0m
      [37m+++ /opt/gitlab/sv/postgres-exporter/.chef-run20220501-32-8qnzpv	2022-05-01 19:53:44.768744005 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+umask 077[0m
      [37m+exec chpst -e /opt/gitlab/etc/postgres-exporter/env -P -U gitlab-psql:git -u gitlab-psql:git /opt/gitlab/embedded/bin/postgres_exporter --web.listen-address=localhost:9187 --extend.query-path=/var/opt/gitlab/postgres-exporter/queries.yaml[0m
      [37m+[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/postgres-exporter/log] action create
      [32m- create new directory /opt/gitlab/sv/postgres-exporter/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create
      [32m- create new directory /opt/gitlab/sv/postgres-exporter/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create
      [32m- create new file /opt/gitlab/sv/postgres-exporter/log/config[0m
      [32m- update content in file /opt/gitlab/sv/postgres-exporter/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/postgres-exporter/log/config	2022-05-01 19:53:44.787744203 +0000[0m
      [37m+++ /opt/gitlab/sv/postgres-exporter/log/.chef-config20220501-32-tyhlzl	2022-05-01 19:53:44.786744192 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_postgres-exporter] action create
      [32m- execute the ruby block verify_chown_persisted_on_postgres-exporter[0m
[0m    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgres-exporter/config] action create
      [32m- create symlink at /var/log/gitlab/postgres-exporter/config to /opt/gitlab/sv/postgres-exporter/log/config[0m
[0m    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create
      [32m- create new file /opt/gitlab/sv/postgres-exporter/log/run[0m
      [32m- update content in file /opt/gitlab/sv/postgres-exporter/log/run from none to b971c9[0m
      [37m--- /opt/gitlab/sv/postgres-exporter/log/run	2022-05-01 19:53:44.797744307 +0000[0m
      [37m+++ /opt/gitlab/sv/postgres-exporter/log/.chef-run20220501-32-1n3two2	2022-05-01 19:53:44.797744307 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/postgres-exporter[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/postgres-exporter/env] action create
      [32m- create new directory /opt/gitlab/sv/postgres-exporter/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgres-exporter/control] action create
      [32m- create new directory /opt/gitlab/sv/postgres-exporter/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/postgres-exporter] action create
      [32m- create symlink at /opt/gitlab/init/postgres-exporter to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
      * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/postgres-exporter] action create
        [32m- create symlink at /opt/gitlab/service/postgres-exporter to /opt/gitlab/sv/postgres-exporter[0m
[0m      * ruby_block[wait for postgres-exporter service socket] action run
        [32m- execute the ruby block wait for postgres-exporter service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)
      * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
      * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
      * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/postgres-exporter] action create (up to date)
      * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgres-exporter] action create (up to date)
    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)
  
[0m  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create
    [32m- create new file /var/opt/gitlab/postgres-exporter/queries.yaml[0m
    [32m- update content in file /var/opt/gitlab/postgres-exporter/queries.yaml from none to 4c23c0[0m
    [37m--- /var/opt/gitlab/postgres-exporter/queries.yaml	2022-05-01 19:53:52.452824122 +0000[0m
    [37m+++ /var/opt/gitlab/postgres-exporter/.chef-queries20220501-32-69vztt.yaml	2022-05-01 19:53:52.452824122 +0000[0m
    [37m@@ -1,294 +1,588 @@[0m
    [37m+pg_replication:[0m
    [37m+  query: "SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp()))::INT as lag, CASE WHEN pg_is_in_recovery() THEN 1 ELSE 0 END as is_replica"[0m
    [37m+  metrics:[0m
    [37m+    - lag:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Replication lag behind master in seconds"[0m
    [37m+    - is_replica:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Indicates if this host is a slave"[0m
    [37m+[0m
    [37m+pg_postmaster:[0m
    [37m+  query: "SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()"[0m
    [37m+  metrics:[0m
    [37m+    - start_time_seconds:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Time at which postmaster started"[0m
    [37m+[0m
    [37m+pg_stat_user_tables:[0m
    [37m+  query: "SELECT current_database() datname, schemaname, relname, seq_scan, seq_tup_read, idx_scan, idx_tup_fetch, n_tup_ins, n_tup_upd, n_tup_del, n_tup_hot_upd, n_live_tup, n_dead_tup, n_mod_since_analyze, COALESCE(last_vacuum, '1970-01-01Z'), COALESCE(last_vacuum, '1970-01-01Z') as last_vacuum, COALESCE(last_autovacuum, '1970-01-01Z') as last_autovacuum, COALESCE(last_analyze, '1970-01-01Z') as last_analyze, COALESCE(last_autoanalyze, '1970-01-01Z') as last_autoanalyze, vacuum_count, autovacuum_count, analyze_count, autoanalyze_count FROM pg_stat_user_tables"[0m
    [37m+  metrics:[0m
    [37m+    - datname:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Name of current database"[0m
    [37m+    - schemaname:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Name of the schema that this table is in"[0m
    [37m+    - relname:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Name of this table"[0m
    [37m+    - seq_scan:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of sequential scans initiated on this table"[0m
    [37m+    - seq_tup_read:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of live rows fetched by sequential scans"[0m
    [37m+    - idx_scan:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of index scans initiated on this table"[0m
    [37m+    - idx_tup_fetch:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of live rows fetched by index scans"[0m
    [37m+    - n_tup_ins:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of rows inserted"[0m
    [37m+    - n_tup_upd:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of rows updated"[0m
    [37m+    - n_tup_del:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of rows deleted"[0m
    [37m+    - n_tup_hot_upd:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of rows HOT updated (i.e., with no separate index update required)"[0m
    [37m+    - n_live_tup:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Estimated number of live rows"[0m
    [37m+    - n_dead_tup:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Estimated number of dead rows"[0m
    [37m+    - n_mod_since_analyze:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Estimated number of rows changed since last analyze"[0m
    [37m+    - last_vacuum:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Last time at which this table was manually vacuumed (not counting VACUUM FULL)"[0m
    [37m+    - last_autovacuum:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Last time at which this table was vacuumed by the autovacuum daemon"[0m
    [37m+    - last_analyze:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Last time at which this table was manually analyzed"[0m
    [37m+    - last_autoanalyze:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Last time at which this table was analyzed by the autovacuum daemon"[0m
    [37m+    - vacuum_count:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of times this table has been manually vacuumed (not counting VACUUM FULL)"[0m
    [37m+    - autovacuum_count:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of times this table has been vacuumed by the autovacuum daemon"[0m
    [37m+    - analyze_count:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of times this table has been manually analyzed"[0m
    [37m+    - autoanalyze_count:[0m
    [37m+        usage: "COUNTER"[0m
    [37m+        description: "Number of times this table has been analyzed by the autovacuum daemon"[0m
    [37m+[0m
    [37m+pg_total_relation_size:[0m
    [37m+  query: |[0m
    [37m+    SELECT relnamespace::regnamespace as schemaname,[0m
    [37m+           relname as relname,[0m
    [37m+           pg_total_relation_size(oid) bytes[0m
    [37m+      FROM pg_class[0m
    [37m+     WHERE relkind = 'r';[0m
    [37m+  metrics:[0m
    [37m+    - schemaname:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Name of the schema that this table is in"[0m
    [37m+    - relname:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Name of this table"[0m
    [37m+    - bytes:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "total disk space usage for the specified table and associated indexes"[0m
    [37m+[0m
    [37m+pg_blocked:[0m
    [37m+  query: |[0m
    [37m+    SELECT[0m
    [37m+      count(blocked.transactionid) AS queries,[0m
    [37m+      '__transaction__' AS table[0m
    [37m+    FROM pg_catalog.pg_locks blocked[0m
    [37m+    WHERE NOT blocked.granted AND locktype = 'transactionid'[0m
    [37m+    GROUP BY locktype[0m
    [37m+    UNION[0m
    [37m+    SELECT[0m
    [37m+      count(blocked.relation) AS queries,[0m
    [37m+      blocked.relation::regclass::text AS table[0m
    [37m+    FROM pg_catalog.pg_locks blocked[0m
    [37m+    WHERE NOT blocked.granted AND locktype != 'transactionid'[0m
    [37m+    GROUP BY relation[0m
    [37m+  metrics:[0m
    [37m+    - queries:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "The current number of blocked queries"[0m
    [37m+    - table:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "The table on which a query is blocked"[0m
    [37m+[0m
    [37m+pg_slow:[0m
    [37m+  query: |[0m
    [37m+    SELECT COUNT(*) AS queries[0m
    [37m+    FROM pg_stat_activity[0m
    [37m+    WHERE state = 'active' AND (now() - query_start) > '1 seconds'::interval[0m
    [37m+  metrics:[0m
    [37m+    - queries:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Current number of slow queries"[0m
    [37m+[0m
    [37m+pg_vacuum:[0m
    [37m+  query: |[0m
    [37m+    SELECT[0m
    [37m+      COUNT(*) AS queries,[0m
    [37m+      MAX(EXTRACT(EPOCH FROM (clock_timestamp() - query_start))) AS age_in_seconds[0m
    [37m+    FROM pg_catalog.pg_stat_activity[0m
    [37m+    WHERE state = 'active' AND trim(query) ~* '\AVACUUM (?!ANALYZE)'[0m
    [37m+  metrics:[0m
    [37m+    - queries:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "The current number of VACUUM queries"[0m
    [37m+    - age_in_seconds:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "The current maximum VACUUM query age in seconds"[0m
    [37m+[0m
    [37m+pg_vacuum_analyze:[0m
    [37m+  query: |[0m
    [37m+    SELECT[0m
    [37m+      COUNT(*) AS queries,[0m
    [37m+      MAX(EXTRACT(EPOCH FROM (clock_timestamp() - query_start))) AS age_in_seconds[0m
    [37m+    FROM pg_catalog.pg_stat_activity[0m
    [37m+    WHERE state = 'active' AND trim(query) ~* '\AVACUUM ANALYZE'[0m
    [37m+  metrics:[0m
    [37m+    - queries:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "The current number of VACUUM ANALYZE queries"[0m
    [37m+    - age_in_seconds:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "The current maximum VACUUM ANALYZE query age in seconds"[0m
    [37m+[0m
    [37m+pg_stuck_idle_in_transaction:[0m
    [37m+  query: |[0m
    [37m+    SELECT COUNT(*) AS queries[0m
    [37m+    FROM pg_stat_activity[0m
    [37m+    WHERE state = 'idle in transaction' AND (now() - query_start) > '10 minutes'::interval[0m
    [37m+  metrics:[0m
    [37m+    - queries:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Current number of queries that are stuck being idle in transactions"[0m
    [37m+[0m
    [37m+pg_vacuum_queue:[0m
    [37m+  #master: true [0m
    [37m+  # Until postgres_exporter is upgraded. See [0m
    [37m+  # https://gitlab.com/gitlab-org/omnibus-gitlab/issues/4887[0m
    [37m+  query: |[0m
    [37m+    with table_opts_vs_statistic as ([0m
    [37m+      select[0m
    [37m+        pg_class.oid,[0m
    [37m+        pg_class.relname,[0m
    [37m+        coalesce(nspname, 'public') as schemaname,[0m
    [37m+        pg_class.relpages,[0m
    [37m+        pg_class.reltuples,[0m
    [37m+        case[0m
    [37m+          when array_to_string(reloptions, '') like '%autovacuum_vacuum_threshold%' then regexp_replace(array_to_string(reloptions, ''), '.*autovacuum_vacuum_threshold=([0-9.]+).*', E'\\1')::int8[0m
    [37m+          else current_setting('autovacuum_vacuum_threshold')::int8[0m
    [37m+        end as autovacuum_vacuum_threshold,[0m
    [37m+        case[0m
    [37m+          when array_to_string(reloptions, '') like '%autovacuum_vacuum_scale_factor%' then regexp_replace(array_to_string(reloptions, ''), '.*autovacuum_vacuum_scale_factor=([0-9.]+).*', E'\\1')::numeric[0m
    [37m+          else current_setting('autovacuum_vacuum_scale_factor')::numeric[0m
    [37m+        end as autovacuum_vacuum_scale_factor,[0m
    [37m+        case when array_to_string(reloptions, '') ~ 'autovacuum_enabled=(false|off)' then false else true end as autovacuum_enabled,[0m
    [37m+        n_dead_tup,[0m
    [37m+        last_autovacuum,[0m
    [37m+        last_vacuum[0m
    [37m+      from pg_class[0m
    [37m+      join pg_namespace ns on relnamespace = ns.oid [0m
    [37m+      join pg_stat_all_tables psat  on psat.relid  = pg_class.oid[0m
    [37m+      where relkind in ('r','m') [0m
    [37m+    ), p as ([0m
    [37m+      select pgspv.*,a.query,a.wait_event_type,a.wait_event,a.query_start[0m
    [37m+      from pg_stat_progress_vacuum pgspv[0m
    [37m+      left join pg_stat_activity a using (pid)[0m
    [37m+    ) [0m
    [37m+    select[0m
    [37m+      table_opts_vs_statistic.schemaname as schemaname,[0m
    [37m+      table_opts_vs_statistic.relname as relname,[0m
    [37m+      round((100 * table_opts_vs_statistic.n_dead_tup::numeric / nullif(table_opts_vs_statistic.reltuples, 0))::numeric, 2) as dead_tup_pct,[0m
    [37m+      table_opts_vs_statistic.reltuples::numeric as reltuples,[0m
    [37m+      table_opts_vs_statistic.n_dead_tup,[0m
    [37m+      (relpages::bigint*8*1024) AS table_size_bytes,[0m
    [37m+      'V. Threshold:' || table_opts_vs_statistic.autovacuum_vacuum_threshold[0m
    [37m+        || ', V. Scale Factor: ' || (table_opts_vs_statistic.autovacuum_vacuum_scale_factor)::numeric *100 ||' %'[0m
    [37m+        || case when not autovacuum_enabled then ', DISABLED' else ', enabled' end as "effective_settings",[0m
    [37m+      case[0m
    [37m+        when last_autovacuum > coalesce(last_vacuum, '0001-01-01') then last_autovacuum::timestamp(0)[0m
    [37m+        when last_vacuum is not null then last_vacuum::timestamp(0)[0m
    [37m+        else null[0m
    [37m+      end as "last_vacuumed",[0m
    [37m+      case[0m
    [37m+        when last_autovacuum > coalesce(last_vacuum, '0001-01-01') then 'auto'[0m
    [37m+        when last_vacuum is not null then 'manual'[0m
    [37m+        else null[0m
    [37m+      end as "type",[0m
    [37m+      coalesce(p.phase, 'in queue') as status,[0m
    [37m+      p.pid as pid,[0m
    [37m+      coalesce  (p.query,'')as  action,[0m
    [37m+      case when p.pid is null then null else coalesce(wait_event_type ||'.'|| wait_event, 'f') end as waiting,[0m
    [37m+      round(100.0 * p.heap_blks_scanned / nullif(p.heap_blks_total, 0), 1) AS scanned_pct,[0m
    [37m+      round(100.0 * p.heap_blks_vacuumed / nullif(p.heap_blks_total, 0), 1) AS vacuumed_pct,[0m
    [37m+      extract ('epoch' from  now()-query_start) elapsed_time[0m
    [37m+    from [0m
    [37m+    table_opts_vs_statistic[0m
    [37m+    full outer join p on p.relid = table_opts_vs_statistic.oid and p.datname = current_database()[0m
    [37m+    where[0m
    [37m+      table_opts_vs_statistic.relpages >= 8[0m
    [37m+      and  autovacuum_vacuum_threshold + (autovacuum_vacuum_scale_factor::numeric * table_opts_vs_statistic.reltuples) < table_opts_vs_statistic.n_dead_tup[0m
    [37m+  metrics:[0m
    [37m+    - schemaname:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Table Schema"[0m
    [37m+    - relname:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Table name"[0m
    [37m+    - dead_tup_pct:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Estimated dead tuples percent"[0m
    [37m+    - reltuples:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Number of tuples in table"[0m
    [37m+    - n_dead_tup:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Estimated number of dead tuples"[0m
    [37m+    - table_size_bytes:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Estimated table size"[0m
    [37m+    - effective_settings:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Autovacuums settings"[0m
    [37m+    - last_vacuumed:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Last time at which this table was vacuumed"[0m
    [37m+    - type:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Last vacuum type"[0m
    [37m+    - status:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Vacuum actual status"[0m
    [37m+    - pid:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Vacuum process id"[0m
    [37m+    - action:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Type of vacuum executed"[0m
    [37m+    - waiting:[0m
    [37m+        usage: "LABEL"[0m
    [37m+        description: "Vacuum queue status"[0m
    [37m+    - scanned_pct:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Estimated rows scanned percent"[0m
    [37m+    - vacuumed_pct:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Estimated vacuumed rows percent"[0m
    [37m+    - elapsed_time:[0m
    [37m+        usage: "GAUGE"[0m
    [37m+        description: "Elapsed time vacuuming (in seconds)"[0m
    [37m+[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'gitlab-psql'[0m
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start postgres-exporter] action run
    [execute] ok: run: postgres-exporter: (pid 1404) 4s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start postgres-exporter[0m
[0m  * consul_service[postgres-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::grafana[0m
  * directory[/var/log/gitlab/grafana] action create
    [32m- create new directory /var/log/gitlab/grafana[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/var/opt/gitlab/grafana] action create
    [32m- create new directory /var/opt/gitlab/grafana[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/var/opt/gitlab/grafana/provisioning] action create
    [32m- create new directory /var/opt/gitlab/grafana/provisioning[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/var/opt/gitlab/grafana/provisioning/dashboards] action create
    [32m- create new directory /var/opt/gitlab/grafana/provisioning/dashboards[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/var/opt/gitlab/grafana/provisioning/datasources] action create
    [32m- create new directory /var/opt/gitlab/grafana/provisioning/datasources[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * directory[/var/opt/gitlab/grafana/provisioning/notifiers] action create
    [32m- create new directory /var/opt/gitlab/grafana/provisioning/notifiers[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * file[/var/opt/gitlab/grafana/CVE_reset_status] action delete (up to date)
  * link[/var/opt/gitlab/grafana/conf] action create
    [32m- create symlink at /var/opt/gitlab/grafana/conf to /opt/gitlab/embedded/service/grafana/conf[0m
[0m  * link[/var/opt/gitlab/grafana/public] action create
    [32m- create symlink at /var/opt/gitlab/grafana/public to /opt/gitlab/embedded/service/grafana/public[0m
[0m  * directory[/opt/gitlab/etc/grafana/env] action create
    [32m- create new directory /opt/gitlab/etc/grafana/env[0m
    [32m- change mode from '' to '0700'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * ruby_block[authorize Grafana with GitLab] action run
    [32m- execute the ruby block authorize Grafana with GitLab[0m
[0m  * ruby_block[populate Grafana configuration options] action run
    [32m- execute the ruby block populate Grafana configuration options[0m
[0m  * env_dir[/opt/gitlab/etc/grafana/env] action create
    * directory[/opt/gitlab/etc/grafana/env] action create (up to date)
    * file[/opt/gitlab/etc/grafana/env/SSL_CERT_DIR] action create
      [32m- create new file /opt/gitlab/etc/grafana/env/SSL_CERT_DIR[0m
      [32m- update content in file /opt/gitlab/etc/grafana/env/SSL_CERT_DIR from none to 4f45cf[0m
      [32m- suppressed sensitive resource[0m
[0m  
[0m  * template[/var/opt/gitlab/grafana/grafana.ini] action create
    [32m- create new file /var/opt/gitlab/grafana/grafana.ini[0m
    [32m- update content in file /var/opt/gitlab/grafana/grafana.ini from none to c369b8[0m
    [37m--- /var/opt/gitlab/grafana/grafana.ini	2022-05-01 19:54:12.938037704 +0000[0m
    [37m+++ /var/opt/gitlab/grafana/.chef-grafana20220501-32-17ng1q4.ini	2022-05-01 19:54:12.938037704 +0000[0m
    [37m@@ -1,403 +1,806 @@[0m
    [37m+##################### GitLab Grafana Configuration #####################[0m
    [37m+#[0m
    [37m+# Everything has defaults so you only need to uncomment things you want to[0m
    [37m+# change[0m
    [37m+[0m
    [37m+# possible values : production, development[0m
    [37m+;app_mode = production[0m
    [37m+[0m
    [37m+# instance name, defaults to HOSTNAME environment variable value or hostname if HOSTNAME var is empty[0m
    [37m+;instance_name = ${HOSTNAME}[0m
    [37m+[0m
    [37m+#################################### Paths ####################################[0m
    [37m+[paths][0m
    [37m+# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)[0m
    [37m+data = /var/opt/gitlab/grafana/data[0m
    [37m+[0m
    [37m+# Temporary files in `data` directory older than given duration will be removed[0m
    [37m+;temp_data_lifetime = 24h[0m
    [37m+[0m
    [37m+# Directory where grafana can store logs[0m
    [37m+logs = /var/log/gitlab/grafana[0m
    [37m+[0m
    [37m+# Directory where grafana will automatically scan and look for plugins[0m
    [37m+;plugins = /var/lib/grafana/plugins[0m
    [37m+[0m
    [37m+# folder that contains provisioning config files that grafana will apply on startup and while running.[0m
    [37m+provisioning = provisioning[0m
    [37m+[0m
    [37m+#################################### Server ####################################[0m
    [37m+[server][0m
    [37m+# Protocol (http, https, socket)[0m
    [37m+protocol = http[0m
    [37m+[0m
    [37m+# The ip address to bind to, empty will bind to all interfaces[0m
    [37m+http_addr = localhost[0m
    [37m+[0m
    [37m+# The http port  to use[0m
    [37m+http_port = 3000[0m
    [37m+[0m
    [37m+# The public facing domain name used to access grafana from a browser[0m
    [37m+;domain = localhost[0m
    [37m+[0m
    [37m+# Redirect to correct domain if host header does not match domain[0m
    [37m+# Prevents DNS rebinding attacks[0m
    [37m+enforce_domain = false[0m
    [37m+[0m
    [37m+# The full public facing url you use in browser, used for redirects and emails[0m
    [37m+# If you use reverse proxy and sub path specify full url (with sub path)[0m
    [37m+root_url = https://jenkins.local:8090/-/grafana[0m
    [37m+[0m
    [37m+# Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.[0m
    [37m+serve_from_sub_path = true[0m
    [37m+[0m
    [37m+# Log web requests[0m
    [37m+;router_logging = false[0m
    [37m+[0m
    [37m+# the path relative working path[0m
    [37m+;static_root_path = public[0m
    [37m+[0m
    [37m+# enable gzip[0m
    [37m+;enable_gzip = false[0m
    [37m+[0m
    [37m+# https certs & key file[0m
    [37m+;cert_file =[0m
    [37m+;cert_key =[0m
    [37m+[0m
    [37m+# Unix socket path[0m
    [37m+;socket =[0m
    [37m+[0m
    [37m+#################################### Database ####################################[0m
    [37m+[database][0m
    [37m+# You can configure the database connection by specifying type, host, name, user and password[0m
    [37m+# as separate properties or as on string using the url properties.[0m
    [37m+[0m
    [37m+# Either "mysql", "postgres" or "sqlite3", it's your choice[0m
    [37m+;type = sqlite3[0m
    [37m+;host = 127.0.0.1:3306[0m
    [37m+;name = grafana[0m
    [37m+;user = root[0m
    [37m+# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""[0m
    [37m+;password =[0m
    [37m+[0m
    [37m+# Use either URL or the previous fields to configure the database[0m
    [37m+# Example: mysql://user:secret@host:port/database[0m
    [37m+;url =[0m
    [37m+[0m
    [37m+# For "postgres" only, either "disable", "require" or "verify-full"[0m
    [37m+;ssl_mode = disable[0m
    [37m+[0m
    [37m+# For "sqlite3" only, path relative to data_path setting[0m
    [37m+;path = grafana.db[0m
    [37m+[0m
    [37m+# Max idle conn setting default is 2[0m
    [37m+;max_idle_conn = 2[0m
    [37m+[0m
    [37m+# Max conn setting default is 0 (mean not set)[0m
    [37m+;max_open_conn =[0m
    [37m+[0m
    [37m+# Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)[0m
    [37m+;conn_max_lifetime = 14400[0m
    [37m+[0m
    [37m+# Set to true to log the sql calls and execution times.[0m
    [37m+log_queries =[0m
    [37m+[0m
    [37m+#################################### Session ####################################[0m
    [37m+[session][0m
    [37m+# Either "memory", "file", "redis", "mysql", "postgres", default is "file"[0m
    [37m+;provider = file[0m
    [37m+[0m
    [37m+# Provider config options[0m
    [37m+# memory: not have any config yet[0m
    [37m+# file: session dir path, is relative to grafana data_path[0m
    [37m+# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`[0m
    [37m+# mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1:3306)/database_name`[0m
    [37m+# postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable[0m
    [37m+;provider_config = sessions[0m
    [37m+[0m
    [37m+# Session cookie name[0m
    [37m+;cookie_name = grafana_sess[0m
    [37m+[0m
    [37m+# If you use session in https only, default is false[0m
    [37m+;cookie_secure = false[0m
    [37m+[0m
    [37m+# Session life time, default is 86400[0m
    [37m+;session_life_time = 86400[0m
    [37m+[0m
    [37m+#################################### Data proxy ###########################[0m
    [37m+[dataproxy][0m
    [37m+[0m
    [37m+# This enables data proxy logging, default is false[0m
    [37m+;logging = false[0m
    [37m+[0m
    [37m+#################################### Analytics ####################################[0m
    [37m+[analytics][0m
    [37m+# Server reporting, sends usage counters to stats.grafana.org every 24 hours.[0m
    [37m+# No ip addresses are being tracked, only simple counters to track[0m
    [37m+# running instances, dashboard and error counts. It is very helpful to us.[0m
    [37m+# Change this option to false to disable reporting.[0m
    [37m+reporting_enabled = false[0m
    [37m+[0m
    [37m+# Set to false to disable all checks to https://grafana.net[0m
    [37m+# for new vesions (grafana itself and plugins), check is used[0m
    [37m+# in some UI views to notify that grafana or plugin update exists[0m
    [37m+# This option does not cause any auto updates, nor send any information[0m
    [37m+# only a GET request to http://grafana.com to get latest versions[0m
    [37m+check_for_updates = false[0m
    [37m+[0m
    [37m+# Google Analytics universal tracking code, only enabled if you specify an id here[0m
    [37m+;google_analytics_ua_id =[0m
    [37m+[0m
    [37m+#################################### Security ####################################[0m
    [37m+[security][0m
    [37m+# default admin user, created on startup[0m
    [37m+;admin_user = admin[0m
    [37m+[0m
    [37m+# default admin password, can be changed before first start of grafana,  or in profile settings[0m
    [37m+admin_password = 2ba3cbdb3073032971e3645ccd87cd10[0m
    [37m+[0m
    [37m+# used for signing[0m
    [37m+secret_key = b8ef29f88742e42defc1cc0c217dcee7[0m
    [37m+[0m
    [37m+# Auto-login remember days[0m
    [37m+;login_remember_days = 7[0m
    [37m+;cookie_username = grafana_user[0m
    [37m+;cookie_remember_name = grafana_remember[0m
    [37m+[0m
    [37m+# disable gravatar profile images[0m
    [37m+;disable_gravatar = false[0m
    [37m+[0m
    [37m+# data source proxy whitelist (ip_or_domain:port separated by spaces)[0m
    [37m+;data_source_proxy_whitelist =[0m
    [37m+[0m
    [37m+# disable protection against brute force login attempts[0m
    [37m+;disable_brute_force_login_protection = false[0m
    [37m+[0m
    [37m+#################################### Snapshots ###########################[0m
    [37m+[snapshots][0m
    [37m+# snapshot sharing options[0m
    [37m+;external_enabled = true[0m
    [37m+;external_snapshot_url = https://snapshots-origin.raintank.io[0m
    [37m+;external_snapshot_name = Publish to snapshot.raintank.io[0m
    [37m+[0m
    [37m+# remove expired snapshot[0m
    [37m+;snapshot_remove_expired = true[0m
    [37m+[0m
    [37m+#################################### Dashboards History ##################[0m
    [37m+[dashboards][0m
    [37m+# Number dashboard versions to keep (per dashboard). Default: 20, Minimum: 1[0m
    [37m+;versions_to_keep = 20[0m
    [37m+[0m
    [37m+#################################### Users ###############################[0m
    [37m+[users][0m
    [37m+# disable user signup / registration[0m
    [37m+allow_sign_up = false[0m
    [37m+[0m
    [37m+# Allow non admin users to create organizations[0m
    [37m+;allow_org_create = true[0m
    [37m+[0m
    [37m+# Set to true to automatically assign new users to the default organization (id 1)[0m
    [37m+;auto_assign_org = true[0m
    [37m+[0m
    [37m+# Default role new users will be automatically assigned (if disabled above is set to true)[0m
    [37m+;auto_assign_org_role = Viewer[0m
    [37m+[0m
    [37m+# Background text for the user field on the login page[0m
    [37m+;login_hint = email or username[0m
    [37m+[0m
    [37m+# Default UI theme ("dark" or "light")[0m
    [37m+;default_theme = dark[0m
    [37m+[0m
    [37m+# External user management, these options affect the organization users view[0m
    [37m+;external_manage_link_url =[0m
    [37m+;external_manage_link_name =[0m
    [37m+;external_manage_info =[0m
    [37m+[0m
    [37m+# Viewers can edit/inspect dashboard settings in the browser. But not save the dashboard.[0m
    [37m+;viewers_can_edit = false[0m
    [37m+[0m
    [37m+[auth][0m
    [37m+# Set to true to disable (hide) the login form, useful if you use OAuth, defaults to false[0m
    [37m+;disable_login_form = false[0m
    [37m+[0m
    [37m+# Set to true to disable the signout link in the side menu. useful if you use auth.proxy, defaults to false[0m
    [37m+;disable_signout_menu = false[0m
    [37m+[0m
    [37m+# URL to redirect the user to after sign out[0m
    [37m+;signout_redirect_url =[0m
    [37m+[0m
    [37m+# Set to true to attempt login with OAuth automatically, skipping the login screen.[0m
    [37m+# This setting is ignored if multiple OAuth providers are configured.[0m
    [37m+;oauth_auto_login = false[0m
    [37m+[0m
    [37m+#################################### Anonymous Auth ##########################[0m
    [37m+[auth.anonymous][0m
    [37m+# enable anonymous access[0m
    [37m+;enabled = false[0m
    [37m+[0m
    [37m+# specify organization name that should be used for unauthenticated users[0m
    [37m+;org_name = Main Org.[0m
    [37m+[0m
    [37m+# specify role for unauthenticated users[0m
    [37m+;org_role = Viewer[0m
    [37m+[0m
    [37m+#################################### GitLab Auth ##########################[0m
    [37m+[auth.gitlab][0m
    [37m+enabled = true[0m
    [37m+allow_sign_up = true[0m
    [37m+client_id = 3a81589580c822f5d29831434677809ad403e5ecbb9418157af7f6724b51739f[0m
    [37m+client_secret = aa72b523ddfc2bd2cad36dbf76d0f703ebb6c45e01af361490993fae5d5f89e0[0m
    [37m+scopes = api[0m
    [37m+auth_url = https://jenkins.local:8090/oauth/authorize[0m
    [37m+token_url = https://jenkins.local:8090/oauth/token[0m
    [37m+api_url = https://jenkins.local:8090/api/v4[0m
    [37m+allowed_groups = [0m
    [37m+[0m
    [37m+#################################### Auth Proxy ##########################[0m
    [37m+[auth.proxy][0m
    [37m+;enabled = false[0m
    [37m+;header_name = X-WEBAUTH-USER[0m
    [37m+;header_property = username[0m
    [37m+;auto_sign_up = true[0m
    [37m+;ldap_sync_ttl = 60[0m
    [37m+;whitelist = 192.168.1.1, 192.168.2.1[0m
    [37m+;headers = Email:X-User-Email, Name:X-User-Name[0m
    [37m+[0m
    [37m+#################################### Basic Auth ##########################[0m
    [37m+[auth.basic][0m
    [37m+enabled = false[0m
    [37m+disable_login_form = true[0m
    [37m+[0m
    [37m+#################################### Auth LDAP ##########################[0m
    [37m+[auth.ldap][0m
    [37m+;enabled = false[0m
    [37m+;config_file = /etc/grafana/ldap.toml[0m
    [37m+;allow_sign_up = true[0m
    [37m+[0m
    [37m+#################################### SMTP / Emailing ##########################[0m
    [37m+[smtp][0m
    [37m+;enabled = false[0m
    [37m+;host = localhost:25[0m
    [37m+;user =[0m
    [37m+# If the password contains # or ; you have to wrap it with trippel quotes. Ex """#password;"""[0m
    [37m+;password =[0m
    [37m+;cert_file =[0m
    [37m+;key_file =[0m
    [37m+;skip_verify = false[0m
    [37m+;from_address = admin@grafana.localhost[0m
    [37m+;from_name = Grafana[0m
    [37m+# EHLO identity in SMTP dialog (defaults to instance_name)[0m
    [37m+;ehlo_identity = dashboard.example.com[0m
    [37m+[0m
    [37m+[emails][0m
    [37m+;welcome_email_on_sign_up = false[0m
    [37m+[0m
    [37m+#################################### Logging ##########################[0m
    [37m+[log][0m
    [37m+# Either "console", "file", "syslog". Default is console and  file[0m
    [37m+# Use space to separate multiple modes, e.g. "console file"[0m
    [37m+mode = console[0m
    [37m+[0m
    [37m+# Either "debug", "info", "warn", "error", "critical", default is "info"[0m
    [37m+;level = info[0m
    [37m+[0m
    [37m+# optional settings to set different levels for specific loggers. Ex filters = sqlstore:debug[0m
    [37m+;filters =[0m
    [37m+[0m
    [37m+# For "console" mode only[0m
    [37m+[log.console][0m
    [37m+level = info[0m
    [37m+[0m
    [37m+# log line format, valid options are text, console and json[0m
    [37m+format = text[0m
    [37m+[0m
    [37m+#################################### Alerting ############################[0m
    [37m+[alerting][0m
    [37m+# Disable alerting engine & UI features[0m
    [37m+enabled = false[0m
    [37m+[0m
    [37m+#################################### Explore #############################[0m
    [37m+[explore][0m
    [37m+# Enable the Explore section[0m
    [37m+;enabled = false[0m
    [37m+[0m
    [37m+#################################### Internal Grafana Metrics ##########################[0m
    [37m+# Metrics available at HTTP API Url /metrics[0m
    [37m+[metrics][0m
    [37m+# Disable / Enable internal metrics[0m
    [37m+enabled = false[0m
    [37m+[0m
    [37m+# Publish interval[0m
    [37m+;interval_seconds  = 10[0m
    [37m+[0m
    [37m+[0m
    [37m+[0m
    [37m+# Send internal metrics to Graphite[0m
    [37m+[metrics.graphite][0m
    [37m+# Enable by setting the address setting (ex localhost:2003)[0m
    [37m+;address =[0m
    [37m+;prefix = prod.grafana.%(instance_name)s.[0m
    [37m+[0m
    [37m+#################################### Distributed tracing ############[0m
    [37m+[tracing.jaeger][0m
    [37m+# Enable by setting the address sending traces to jaeger (ex localhost:6831)[0m
    [37m+;address = localhost:6831[0m
    [37m+# Tag that will always be included in when creating new spans. ex (tag1:value1,tag2:value2)[0m
    [37m+;always_included_tag = tag1:value1[0m
    [37m+# Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote[0m
    [37m+;sampler_type = const[0m
    [37m+# jaeger samplerconfig param[0m
    [37m+# for "const" sampler, 0 or 1 for always false/true respectively[0m
    [37m+# for "probabilistic" sampler, a probability between 0 and 1[0m
    [37m+# for "rateLimiting" sampler, the number of spans per second[0m
    [37m+# for "remote" sampler, param is the same as for "probabilistic"[0m
    [37m+# and indicates the initial sampling rate before the actual one[0m
    [37m+# is received from the mothership[0m
    [37m+;sampler_param = 1[0m
    [37m+[0m
    [37m+#################################### Grafana.com integration  ##########################[0m
    [37m+# Url used to import dashboards directly from Grafana.com[0m
    [37m+[grafana_com][0m
    [37m+;url = https://grafana.com[0m
    [37m+[0m
    [37m+#################################### External image storage ##########################[0m
    [37m+[external_image_storage][0m
    [37m+# Used for uploading images to public servers so they can be included in slack/email messages.[0m
    [37m+# you can choose between (s3, webdav, gcs, azure_blob, local)[0m
    [37m+;provider =[0m
    [37m+[0m
    [37m+[external_image_storage.s3][0m
    [37m+;bucket =[0m
    [37m+;region =[0m
    [37m+;path =[0m
    [37m+;access_key =[0m
    [37m+;secret_key =[0m
    [37m+[0m
    [37m+[external_image_storage.webdav][0m
    [37m+;url =[0m
    [37m+;public_url =[0m
    [37m+;username =[0m
    [37m+;password =[0m
    [37m+[0m
    [37m+[external_image_storage.gcs][0m
    [37m+;key_file =[0m
    [37m+;bucket =[0m
    [37m+;path =[0m
    [37m+[0m
    [37m+[external_image_storage.azure_blob][0m
    [37m+;account_name =[0m
    [37m+;account_key =[0m
    [37m+;container_name =[0m
    [37m+[0m
    [37m+[external_image_storage.local][0m
    [37m+# does not require any configuration[0m
    [37m+[0m
    [37m+[rendering][0m
    [37m+# Options to configure external image rendering server like https://github.com/grafana/grafana-image-renderer[0m
    [37m+;server_url =[0m
    [37m+;callback_url =[0m
    [37m+[0m
    [37m+[enterprise][0m
    [37m+# Path to a valid Grafana Enterprise license.jwt file[0m
    [37m+;license_path =[0m
    [37m+[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * file[/var/opt/gitlab/grafana/provisioning/dashboards/gitlab_dashboards.yml] action create
    [32m- create new file /var/opt/gitlab/grafana/provisioning/dashboards/gitlab_dashboards.yml[0m
    [32m- update content in file /var/opt/gitlab/grafana/provisioning/dashboards/gitlab_dashboards.yml from none to aa31a1[0m
    [37m--- /var/opt/gitlab/grafana/provisioning/dashboards/gitlab_dashboards.yml	2022-05-01 19:54:12.954037871 +0000[0m
    [37m+++ /var/opt/gitlab/grafana/provisioning/dashboards/.chef-gitlab_dashboards20220501-32-yodxo4.yml	2022-05-01 19:54:12.954037871 +0000[0m
    [37m@@ -1,11 +1,22 @@[0m
    [37m+---[0m
    [37m+apiVersion: 1[0m
    [37m+providers:[0m
    [37m+- name: GitLab Omnibus[0m
    [37m+  orgId: 1[0m
    [37m+  folder: GitLab Omnibus[0m
    [37m+  type: file[0m
    [37m+  disableDeletion: true[0m
    [37m+  updateIntervalSeconds: 600[0m
    [37m+  options:[0m
    [37m+    path: "/opt/gitlab/embedded/service/grafana-dashboards"[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * file[/var/opt/gitlab/grafana/provisioning/datasources/gitlab_datasources.yml] action create
    [32m- create new file /var/opt/gitlab/grafana/provisioning/datasources/gitlab_datasources.yml[0m
    [32m- update content in file /var/opt/gitlab/grafana/provisioning/datasources/gitlab_datasources.yml from none to 2041c0[0m
    [37m--- /var/opt/gitlab/grafana/provisioning/datasources/gitlab_datasources.yml	2022-05-01 19:54:12.967038006 +0000[0m
    [37m+++ /var/opt/gitlab/grafana/provisioning/datasources/.chef-gitlab_datasources20220501-32-1o0332n.yml	2022-05-01 19:54:12.967038006 +0000[0m
    [37m@@ -1,8 +1,16 @@[0m
    [37m+---[0m
    [37m+apiVersion: 1[0m
    [37m+datasources:[0m
    [37m+- name: GitLab Omnibus[0m
    [37m+  type: prometheus[0m
    [37m+  access: proxy[0m
    [37m+  url: http://localhost:9090[0m
    [37m+  isDefault: true[0m
    [32m- change mode from '' to '0644'[0m
    [32m- change owner from '' to 'gitlab-prometheus'[0m
[0m  * service[grafana] action nothing (skipped due to action :nothing)
  * runit_service[grafana] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/grafana] action create
      [32m- create new directory /opt/gitlab/sv/grafana[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/grafana/run] action create
      [32m- create new file /opt/gitlab/sv/grafana/run[0m
      [32m- update content in file /opt/gitlab/sv/grafana/run from none to b54d7b[0m
      [37m--- /opt/gitlab/sv/grafana/run	2022-05-01 19:54:12.985038194 +0000[0m
      [37m+++ /opt/gitlab/sv/grafana/.chef-run20220501-32-1u2zj9q	2022-05-01 19:54:12.985038194 +0000[0m
      [37m@@ -1,11 +1,22 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+[0m
      [37m+cd '/var/opt/gitlab/grafana'[0m
      [37m+[0m
      [37m+umask 077[0m
      [37m+exec chpst -P -e /opt/gitlab/etc/grafana/env \[0m
      [37m+  -U gitlab-prometheus:gitlab-prometheus \[0m
      [37m+  -u gitlab-prometheus:gitlab-prometheus \[0m
      [37m+  /opt/gitlab/embedded/bin/grafana-server -config '/var/opt/gitlab/grafana/grafana.ini'[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/grafana/log] action create
      [32m- create new directory /opt/gitlab/sv/grafana/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/grafana/log/main] action create
      [32m- create new directory /opt/gitlab/sv/grafana/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/grafana/log/config] action create
      [32m- create new file /opt/gitlab/sv/grafana/log/config[0m
      [32m- update content in file /opt/gitlab/sv/grafana/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/grafana/log/config	2022-05-01 19:54:12.997038319 +0000[0m
      [37m+++ /opt/gitlab/sv/grafana/log/.chef-config20220501-32-2i5hjm	2022-05-01 19:54:12.997038319 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_grafana] action create
      [32m- execute the ruby block verify_chown_persisted_on_grafana[0m
[0m    * ruby_block[verify_chown_persisted_on_grafana] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/grafana/config] action create
      [32m- create symlink at /var/log/gitlab/grafana/config to /opt/gitlab/sv/grafana/log/config[0m
[0m    * template[/opt/gitlab/sv/grafana/log/run] action create
      [32m- create new file /opt/gitlab/sv/grafana/log/run[0m
      [32m- update content in file /opt/gitlab/sv/grafana/log/run from none to 49180c[0m
      [37m--- /opt/gitlab/sv/grafana/log/run	2022-05-01 19:54:13.012038475 +0000[0m
      [37m+++ /opt/gitlab/sv/grafana/log/.chef-run20220501-32-e7ziy4	2022-05-01 19:54:13.012038475 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/grafana[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/grafana/env] action create
      [32m- create new directory /opt/gitlab/sv/grafana/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for grafana service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/grafana/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/grafana/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/grafana/control] action create
      [32m- create new directory /opt/gitlab/sv/grafana/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/grafana] action create
      [32m- create symlink at /opt/gitlab/init/grafana to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/grafana/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/grafana] action create (up to date)
      * template[/opt/gitlab/sv/grafana/run] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/log] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/log/main] action create (up to date)
      * template[/opt/gitlab/sv/grafana/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_grafana] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/grafana/config] action create (up to date)
      * template[/opt/gitlab/sv/grafana/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for grafana service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/grafana/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/grafana/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/grafana/control] action create (up to date)
      * link[/opt/gitlab/init/grafana] action create (up to date)
      * file[/opt/gitlab/sv/grafana/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/grafana] action create
        [32m- create symlink at /opt/gitlab/service/grafana to /opt/gitlab/sv/grafana[0m
[0m      * ruby_block[wait for grafana service socket] action run
        [32m- execute the ruby block wait for grafana service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/grafana] action create (up to date)
      * template[/opt/gitlab/sv/grafana/run] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/log] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/log/main] action create (up to date)
      * template[/opt/gitlab/sv/grafana/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_grafana] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/grafana/config] action create (up to date)
      * template[/opt/gitlab/sv/grafana/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/grafana/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for grafana service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/grafana/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/grafana/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/grafana/control] action create (up to date)
      * link[/opt/gitlab/init/grafana] action create (up to date)
      * file[/opt/gitlab/sv/grafana/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/grafana] action create (up to date)
      * ruby_block[wait for grafana service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/grafana] action create (up to date)
    * ruby_block[wait for grafana service socket] action run (skipped due to not_if)
  
[0m  * execute[/opt/gitlab/bin/gitlab-ctl start grafana] action run
    [execute] ok: run: grafana: (pid 1520) 2s
    [32m- execute /opt/gitlab/bin/gitlab-ctl start grafana[0m
[0mRecipe: letsencrypt::enable[0m
  * ruby_block[http external-url] action run (skipped due to only_if)
  * directory[/etc/gitlab/ssl] action create
    [32m- create new directory /etc/gitlab/ssl[0m
    [32m- change mode from '' to '0755'[0m
    [32m- change owner from '' to 'root'[0m
    [32m- change group from '' to 'root'[0m
[0m  * acme_selfsigned[jenkins.local] action create
    * file[jenkins.local SSL selfsigned key] action create_if_missing
      [32m- create new file /etc/gitlab/ssl/jenkins.local.key[0m
      [32m- update content in file /etc/gitlab/ssl/jenkins.local.key from none to eb24da[0m
      [32m- suppressed sensitive resource[0m
      [32m- change mode from '' to '0400'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * file[jenkins.local SSL selfsigned crt] action create_if_missing
      [32m- create new file /etc/gitlab/ssl/jenkins.local.crt[0m
      [32m- update content in file /etc/gitlab/ssl/jenkins.local.crt from none to 728cca[0m
      [37m--- /etc/gitlab/ssl/jenkins.local.crt	2022-05-01 19:54:17.883089258 +0000[0m
      [37m+++ /etc/gitlab/ssl/.chef-jenkins20220501-32-m1g5fj.local.crt	2022-05-01 19:54:17.883089258 +0000[0m
      [37m@@ -1,18 +1,36 @@[0m
      [37m+-----BEGIN CERTIFICATE-----[0m
      [37m+MIIC2jCCAcKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1qZW5r[0m
      [37m+aW5zLmxvY2FsMB4XDTIyMDUwMTE5NTQxN1oXDTIyMDUzMTE5NTQxN1owGDEWMBQG[0m
      [37m+A1UEAwwNamVua2lucy5sb2NhbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC[0m
      [37m+ggEBAMXlB2NkuZdBytxFEWi96BQmLsb71TL3CYzw8Nkfb0XlMdOPQhV0YY29ZOtZ[0m
      [37m+cG5uMltI2N7Zks1x9LTnV+Ev+jZ8i/p9+0Pq8ckdkuzZvCtgNzcY4CNJp8qTUpJV[0m
      [37m+C+8+ILYvxSQCFaoh7Vffvnur7OCKcOw0pQK7b7g0IsLdF+UI15VyvaWS5aIWnlc2[0m
      [37m+LFVHFJTAA8Kcgd7agp53CX9Z3lAsvgQp8TalKyX6wK2YeCI5tZTVnFe4EAw7pyF1[0m
      [37m+SpW3IwilURx//mHmJDZyF0jvKPGb3whZeEwcxutBBFLFnRa25rHiityMTpI6YjzA[0m
      [37m+w2V6FOlDSQq3mDJdsJpqdyzEyIMCAwEAAaMvMC0wDAYDVR0TAQH/BAIwADAdBgNV[0m
      [37m+HQ4EFgQUqe5rgy5oBYakXaIlfwSwibgsE8gwDQYJKoZIhvcNAQELBQADggEBAFYZ[0m
      [37m+f/bju9F3HY3dRhtWAw0kEWoTAEey4KCnxcZaJJfjEXjNiR9kLhft0Q5YMi/263YQ[0m
      [37m+VGXhwkNT6TlpHk4ZNLg8NLr2SGOBXh672y2qmV3ObRHclULEPXrDVX5PcXc+m9ju[0m
      [37m+L1JTJ6pOeQDbA/kiHUu/dYfKM3ENvIyhGixjh0x1/kW3v4ilChq4M7H67wdUaY6R[0m
      [37m+miwHWo7rIX493nLW2oFmv/e7uieQUUFqZpQvK8ipSNmkAmKeD4sej5gy5iXtRbp6[0m
      [37m+F/913UafkNAYDsUDxXmadOfbSoduZw/swKN9XeV2ClkOro/hlIpErBmjVDTSoWjr[0m
      [37m+r1/atBdYI4xrDo3U7Fw=[0m
      [37m+-----END CERTIFICATE-----[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * file[jenkins.local SSL selfsigned chain] action create_if_missing (skipped due to not_if)
  
[0mRecipe: nginx::enable[0m
  * runit_service[nginx] action restart (up to date)
Recipe: letsencrypt::http_authorization[0m
  * letsencrypt_certificate[jenkins.local] action create
    * acme_certificate[staging] action create
      * file[jenkins.local SSL key] action create_if_missing
        [32m- create new file /etc/gitlab/ssl/jenkins.local.key-staging[0m
        [32m- update content in file /etc/gitlab/ssl/jenkins.local.key-staging from none to f15420[0m
        [32m- suppressed sensitive resource[0m
        [32m- change mode from '' to '0400'[0m
        [32m- change owner from '' to 'root'[0m
        [32m- change group from '' to 'root'[0m
[0m      [0m
      ================================================================================[0m
      [31mError executing action `create` on resource 'acme_certificate[staging]'[0m
      ================================================================================[0m
      
[0m      Acme::Client::Error::RejectedIdentifier[0m
      ---------------------------------------[0m
      Error creating new order :: Cannot issue for "jenkins.local": Domain name does not end with a valid public suffix (TLD)[0m
      
[0m      Cookbook Trace:[0m
      ---------------[0m
      /opt/gitlab/embedded/cookbooks/cache/cookbooks/acme/libraries/acme.rb:47:in `acme_order_certs_for'
[0m      /opt/gitlab/embedded/cookbooks/cache/cookbooks/acme/resources/certificate.rb:76:in `block in class_from_file'[0m
      
[0m      Resource Declaration:[0m
      ---------------------[0m
      suppressed sensitive resource output[0m
      
[0m      Compiled Resource:[0m
      ------------------[0m
      suppressed sensitive resource output[0m
      
[0m      System Info:[0m
      ------------[0m
      chef_version=15.12.22
[0m      platform=ubuntu
[0m      platform_version=16.04
[0m      ruby=ruby 2.6.6p146 (2020-03-31 revision 67876) [x86_64-linux]
[0m      program_name=/opt/gitlab/embedded/bin/chef-client
[0m      executable=/opt/gitlab/embedded/bin/chef-client[0m
      
[0m    [0m
    ================================================================================[0m
    [31mError executing action `create` on resource 'letsencrypt_certificate[jenkins.local]'[0m
    ================================================================================[0m
    
[0m    Acme::Client::Error::RejectedIdentifier[0m
    ---------------------------------------[0m
    acme_certificate[staging] (/opt/gitlab/embedded/cookbooks/cache/cookbooks/letsencrypt/resources/certificate.rb line 25) had an error: Acme::Client::Error::RejectedIdentifier: Error creating new order :: Cannot issue for "jenkins.local": Domain name does not end with a valid public suffix (TLD)[0m
    
[0m    Cookbook Trace:[0m
    ---------------[0m
    /opt/gitlab/embedded/cookbooks/cache/cookbooks/acme/libraries/acme.rb:47:in `acme_order_certs_for'
[0m    /opt/gitlab/embedded/cookbooks/cache/cookbooks/acme/resources/certificate.rb:76:in `block in class_from_file'[0m
    
[0m    Resource Declaration:[0m
    ---------------------[0m
    # In /opt/gitlab/embedded/cookbooks/cache/cookbooks/letsencrypt/recipes/http_authorization.rb
[0m    
[0m      5: letsencrypt_certificate site do
[0m      6:   crt node['gitlab']['nginx']['ssl_certificate']
[0m      7:   key node['gitlab']['nginx']['ssl_certificate_key']
[0m      8:   notifies :run, "execute[reload nginx]", :immediate
[0m      9:   notifies :run, 'ruby_block[display_le_message]'
[0m     10:   only_if { omnibus_helper.service_up?('nginx') }
[0m     11: end
[0m    
[0m    Compiled Resource:[0m
    ------------------[0m
    # Declared in /opt/gitlab/embedded/cookbooks/cache/cookbooks/letsencrypt/recipes/http_authorization.rb:5:in `from_file'
[0m    
[0m    letsencrypt_certificate("jenkins.local") do
[0m      action [:create]
[0m      updated true
[0m      updated_by_last_action true
[0m      default_guard_interpreter :default
[0m      declared_type :letsencrypt_certificate
[0m      cookbook_name "letsencrypt"
[0m      recipe_name "http_authorization"
[0m      crt "/etc/gitlab/ssl/jenkins.local.crt"
[0m      key "/etc/gitlab/ssl/jenkins.local.key"
[0m      alt_names []
[0m      cn "jenkins.local"
[0m      only_if { #code block }
[0m    end
[0m    
[0m    System Info:[0m
    ------------[0m
    chef_version=15.12.22
[0m    platform=ubuntu
[0m    platform_version=16.04
[0m    ruby=ruby 2.6.6p146 (2020-03-31 revision 67876) [x86_64-linux]
[0m    program_name=/opt/gitlab/embedded/bin/chef-client
[0m    executable=/opt/gitlab/embedded/bin/chef-client[0m
    
[0mRecipe: gitlab::gitlab-rails[0m
  * execute[clear the gitlab-rails cache] action run
    [32m- execute /opt/gitlab/bin/gitlab-rake cache:clear[0m
[0mRecipe: gitaly::enable[0m
  * runit_service[gitaly] action hup
    [32m- send hup to runit_service[gitaly][0m
[0mRecipe: package::sysctl[0m
  * execute[reload all sysctl conf] action run
    [execute] * Applying /etc/sysctl.d/10-console-messages.conf ...
              * Applying /etc/sysctl.d/10-ipv6-privacy.conf ...
              * Applying /etc/sysctl.d/10-kernel-hardening.conf ...
              * Applying /etc/sysctl.d/10-link-restrictions.conf ...
              * Applying /etc/sysctl.d/10-magic-sysrq.conf ...
              * Applying /etc/sysctl.d/10-network-security.conf ...
              sysctl: setting key "kernel.printk": Read-only file system
              sysctl: setting key "net.ipv6.conf.all.use_tempaddr": Read-only file system
              sysctl: setting key "net.ipv6.conf.default.use_tempaddr": Read-only file system
              sysctl: setting key "kernel.kptr_restrict": Read-only file system
              sysctl: setting key "fs.protected_hardlinks": Read-only file system
              sysctl: setting key "fs.protected_symlinks": Read-only file system
              sysctl: setting key "kernel.sysrq": Read-only file system
              sysctl: setting key "net.ipv4.conf.default.rp_filter": Read-only file system
              sysctl: setting key "net.ipv4.conf.all.rp_filter": Read-only file system
              sysctl: setting key "net.ipv4.tcp_syncookies": Read-only file system
              sysctl: setting key "kernel.yama.ptrace_scope": Read-only file system
              sysctl: setting key "vm.mmap_min_addr": Read-only file system
              sysctl: setting key "kernel.sem": Read-only file system
              sysctl: setting key "kernel.shmall": Read-only file system
              sysctl: setting key "kernel.shmmax": Read-only file system
              * Applying /etc/sysctl.d/10-ptrace.conf ...
              * Applying /etc/sysctl.d/10-zeropage.conf ...
              * Applying /etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf ...
              * Applying /etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf ...
              * Applying /etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf ...
              * Applying /etc/sysctl.d/99-sysctl.conf ...
              * Applying /etc/sysctl.conf ...
    [32m- execute sysctl -e --system[0m
[0mRecipe: gitlab::gitlab-workhorse[0m
  * runit_service[gitlab-workhorse] action restart (up to date)
Recipe: registry::enable[0m
  * runit_service[registry] action restart (up to date)
Recipe: monitoring::gitlab-exporter[0m
  * runit_service[gitlab-exporter] action restart (up to date)
Recipe: monitoring::redis-exporter[0m
  * runit_service[redis-exporter] action restart (up to date)
Recipe: monitoring::prometheus[0m
  * runit_service[prometheus] action restart (up to date)
  * execute[reload prometheus] action run
    [32m- execute /opt/gitlab/bin/gitlab-ctl hup prometheus[0m
[0mRecipe: monitoring::alertmanager[0m
  * runit_service[alertmanager] action restart (up to date)
Recipe: monitoring::postgres-exporter[0m
  * runit_service[postgres-exporter] action restart (up to date)
Recipe: monitoring::grafana[0m
  * runit_service[grafana] action restart (up to date)
[0m
Running handlers:[0m
Running handlers complete
[0mChef Infra Client failed. 555 resources updated in 03 minutes 09 seconds[0m
Thank you for using GitLab Docker Image!
Current version: gitlab-ce=13.4.1-ce.0

Configure GitLab for your system by editing /etc/gitlab/gitlab.rb file
And restart this container to reload settings.
To do it use docker exec:

  docker exec -it gitlab vim /etc/gitlab/gitlab.rb
  docker restart gitlab

For a comprehensive list of configuration options please see the Omnibus GitLab readme
https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md

If this container fails to start due to permission problems try to fix it by executing:

  docker exec -it gitlab update-permissions
  docker restart gitlab

Cleaning stale PIDs & sockets
Preparing services...
Starting services...
Configuring GitLab...
Starting Chef Infra Client, version 15.12.22[0m
resolving cookbooks for run list: ["gitlab"][0m
Synchronizing Cookbooks:[0m
  - gitlab (0.0.1)[0m
  - package (0.1.0)[0m
  - postgresql (0.1.0)[0m
  - redis (0.1.0)[0m
  - monitoring (0.1.0)[0m
  - registry (0.1.0)[0m
  - mattermost (0.1.0)[0m
  - consul (0.1.0)[0m
  - gitaly (0.1.0)[0m
  - praefect (0.1.0)[0m
  - letsencrypt (0.1.0)[0m
  - nginx (0.1.0)[0m
  - runit (5.1.3)[0m
  - acme (4.1.1)[0m
  - crond (0.1.0)[0m
Installing Cookbook Gems:[0m
Compiling Cookbooks...[0m
Recipe: gitlab::default[0m
  * directory[/etc/gitlab] action create (up to date)
  Converging 273 resources[0m
  * directory[/etc/gitlab] action create (up to date)
  * directory[Create /var/opt/gitlab] action create (up to date)
  * directory[Create /var/log/gitlab] action create (up to date)
  * directory[/opt/gitlab/embedded/etc] action create (up to date)
  * template[/opt/gitlab/embedded/etc/gitconfig] action create (up to date)
Recipe: gitlab::web-server[0m
  * account[Webserver user and group] action create (up to date)
Recipe: gitlab::users[0m
  * directory[/var/opt/gitlab] action create (up to date)
  * account[GitLab user and group] action create (up to date)
  * template[/var/opt/gitlab/.gitconfig] action create (up to date)
  * directory[/var/opt/gitlab/.bundle] action create (up to date)
Recipe: gitlab::gitlab-shell[0m
  * storage_directory[/var/opt/gitlab/.ssh] action create
    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run (skipped due to not_if)
     (up to date)
  * directory[/var/log/gitlab/gitlab-shell/] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-shell] action create (up to date)
  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create (up to date)
  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing (up to date)
Recipe: gitlab::gitlab-rails[0m
  * storage_directory[/var/opt/gitlab/git-data] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/git-data/repositories] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run (skipped due to not_if)
     (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create (up to date)
  * directory[create /opt/gitlab/etc/gitlab-rails] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/working] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create (up to date)
  * directory[create /var/log/gitlab/gitlab-rails] action create (up to date)
  * storage_directory[/var/opt/gitlab/backups] action create
    * ruby_block[directory resource: /var/opt/gitlab/backups] action run (skipped due to not_if)
     (up to date)
  * directory[/var/opt/gitlab/gitlab-rails] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-ci] action create (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create (up to date)
  * template[/opt/gitlab/etc/gitlab-rails/gitlab-rails-rc] action create (up to date)
  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)
  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)
  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)
  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action create (skipped due to not_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)
  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)
     (up to date)
  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create
    * directory[/opt/gitlab/etc/gitlab-rails/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/LD_PRELOAD] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create (up to date)
  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete (skipped due to only_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create (up to date)
  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create (up to date)
  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create (up to date)
  * version_file[Create version file for Rails] action create
    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create (up to date)
     (up to date)
  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)
  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)
Recipe: gitlab::selinux[0m
  * bash[Set proper security context on ssh files for selinux] action run (skipped due to only_if)
Recipe: gitlab::add_trusted_certs[0m
  * directory[/etc/gitlab/trusted-certs] action create (up to date)
  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)
  * file[/opt/gitlab/embedded/ssl/certs/README] action create (up to date)
  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run (skipped due to only_if)
Recipe: gitlab::default[0m
  * service[create a temporary unicorn service] action nothing (skipped due to action :nothing)
  * service[create a temporary puma service] action nothing (skipped due to action :nothing)
  * service[create a temporary actioncable service] action nothing (skipped due to action :nothing)
  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)
  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)
Recipe: package::sysctl[0m
  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)
Recipe: postgresql::bin[0m
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run (skipped due to only_if)
Recipe: redis::enable[0m
  * redis_service[redis] action create
    * account[user and group for redis] action create (up to date)
    * group[Socket group] action create (up to date)
    * directory[/var/opt/gitlab/redis] action create (up to date)
    * directory[/var/log/gitlab/redis] action create (up to date)
    * template[/var/opt/gitlab/redis/redis.conf] action create (up to date)
  Recipe: <Dynamically Defined Resource>[0m
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis] action create (up to date)
      * template[/opt/gitlab/sv/redis/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis/config] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis/control] action create (up to date)
      * link[/opt/gitlab/init/redis] action create (up to date)
      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis] action create
        [32m- create symlink at /opt/gitlab/service/redis to /opt/gitlab/sv/redis[0m
[0m      * ruby_block[wait for redis service socket] action run (skipped due to not_if)
    
[0m    * ruby_block[warn pending redis restart] action run (skipped due to only_if)
  
[0mRecipe: redis::enable[0m
  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create (up to date)
Recipe: gitaly::enable[0m
  * directory[/var/opt/gitlab/gitaly] action create (up to date)
  * directory[/var/log/gitlab/gitaly] action create (up to date)
  * directory[/var/opt/gitlab/gitaly/internal_sockets] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitaly/env] action create
    * directory[/opt/gitlab/etc/gitaly/env] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create (up to date)
     (up to date)
  * template[Create Gitaly config.toml] action create (up to date)
  * service[gitaly] action nothing (skipped due to action :nothing)
  * runit_service[gitaly] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitaly] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitaly/config] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
    * link[/opt/gitlab/init/gitaly] action create (up to date)
    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitaly] action create
      [32m- create symlink at /opt/gitlab/service/gitaly to /opt/gitlab/sv/gitaly[0m
[0m    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)
  
[0m  * version_file[Create version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/VERSION] action create (up to date)
     (up to date)
  * consul_service[gitaly] action delete
    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)
     (up to date)
Recipe: praefect::disable[0m
  * service[praefect] action nothing (skipped due to action :nothing)
  * runit_service[praefect] action disable
    * ruby_block[disable praefect] action run (skipped due to only_if)
     (up to date)
  * consul_service[praefect] action delete
    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)
     (up to date)
Recipe: postgresql::user[0m
  * account[Postgresql user and group] action create (up to date)
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * file[/var/opt/gitlab/postgresql/.profile] action create (up to date)
Recipe: postgresql::enable[0m
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/log/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * link[/var/opt/gitlab/postgresql/data] action create (skipped due to not_if)
  * gitlab_sysctl[kernel.shmmax] action create
    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.shmall] action create
    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.sem] action create
    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)
    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)
     (up to date)
  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run (skipped due to not_if)
  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)
  * file[/var/opt/gitlab/postgresql/data/server.crt] action create (up to date)
  * file[/var/opt/gitlab/postgresql/data/server.key] action create (up to date)
  * postgresql_config[gitlab] action create
    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create (up to date)
     (up to date)
  * service[postgresql] action nothing (skipped due to action :nothing)
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgresql] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgresql/config] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
    * link[/opt/gitlab/init/postgresql] action create (up to date)
    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgresql] action create
      [32m- create symlink at /opt/gitlab/service/postgresql to /opt/gitlab/sv/postgresql[0m
[0m    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)
  
[0m  * database_objects[postgresql] action create
    * postgresql_user[gitlab] action create
      * execute[create gitlab postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_user[gitlab_replicator] action create
      * execute[create gitlab_replicator postgresql user] action run (skipped due to not_if)
      * execute[set options for gitlab_replicator postgresql user] action run (skipped due to not_if)
       (up to date)
    * execute[create gitlabhq_production database] action run (skipped due to only_if)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)
       (up to date)
     (up to date)
  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)
  * execute[reload postgresql] action nothing (skipped due to action :nothing)
  * execute[start postgresql] action nothing (skipped due to action :nothing)
Recipe: gitlab::database_migrations[0m
  * bash[migrate gitlab-rails database] action run (skipped due to not_if)
Recipe: gitlab::logrotate_folders_and_configs[0m
  * directory[/var/opt/gitlab/logrotate] action create (up to date)
  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create (up to date)
  * directory[/var/log/gitlab/logrotate] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/actioncable] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/unicorn] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create (up to date)
Recipe: gitlab::unicorn_disable[0m
  * unicorn_service[unicorn] action disable
  Recipe: <Dynamically Defined Resource>[0m
    * service[unicorn] action nothing (skipped due to action :nothing)
    * runit_service[unicorn] action disable
      * ruby_block[disable unicorn] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: gitlab::unicorn_disable[0m
  * consul_service[rails] action delete (skipped due to not_if)
Recipe: gitlab::puma[0m
  * directory[/var/log/gitlab/puma] action create (up to date)
  * directory[/opt/gitlab/var/puma] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create (up to date)
  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)
    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create (up to date)
     (up to date)
  * service[puma] action nothing (skipped due to action :nothing)
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create
      [32m- Would create symlink at /opt/gitlab/service/puma to /opt/gitlab/sv/puma[0m
[0m    * ruby_block[wait for puma service socket] action run (skipped due to not_if)
  
[0mRecipe: gitlab::unicorn_disable[0m
  * unicorn_service[unicorn] action stop
  Recipe: <Dynamically Defined Resource>[0m
    * service[unicorn] action nothing (skipped due to action :nothing)
    * runit_service[unicorn] action stop (up to date)
     (up to date)
Recipe: gitlab::puma[0m
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create
      [32m- create symlink at /opt/gitlab/service/puma to /opt/gitlab/sv/puma[0m
[0m    * ruby_block[wait for puma service socket] action run (skipped due to not_if)
  
[0m  * consul_service[rails] action delete
    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab::sidekiq-cluster[0m
  * sidekiq_service[sidekiq] action enable
    * directory[/var/log/gitlab/sidekiq] action create (up to date)
  Recipe: <Dynamically Defined Resource>[0m
    * service[sidekiq] action nothing (skipped due to action :nothing)
    * runit_service[sidekiq] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/sidekiq/config] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
      * link[/opt/gitlab/init/sidekiq] action create (up to date)
      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/sidekiq] action create
        [32m- create symlink at /opt/gitlab/service/sidekiq to /opt/gitlab/sv/sidekiq[0m
[0m      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)
    
[0m  
[0mRecipe: gitlab::sidekiq-cluster[0m
  * consul_service[sidekiq] action delete
    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)
     (up to date)
  * service[sidekiq-cluster] action nothing (skipped due to action :nothing)
  * runit_service[sidekiq-cluster] action disable
    * ruby_block[disable sidekiq-cluster] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::gitlab-workhorse[0m
  * directory[/var/opt/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/var/log/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/opt/gitlab/etc/gitlab-workhorse] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create
    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-workhorse] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-workhorse] action create
      [32m- create symlink at /opt/gitlab/service/gitlab-workhorse to /opt/gitlab/sv/gitlab-workhorse[0m
[0m    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
  
[0m  * consul_service[workhorse] action delete
    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)
     (up to date)
  * version_file[Create version file for Workhorse] action create
    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create (up to date)
Recipe: gitlab::mailroom_disable[0m
  * service[mailroom] action nothing (skipped due to action :nothing)
  * runit_service[mailroom] action disable
    * ruby_block[disable mailroom] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::nginx[0m
  * directory[/var/opt/gitlab/nginx] action create (up to date)
  * directory[/var/opt/gitlab/nginx/conf] action create (up to date)
  * directory[/var/log/gitlab/nginx] action create (up to date)
  * link[/var/opt/gitlab/nginx/logs] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create (up to date)
  * consul_service[nginx] action delete
    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create (up to date)
Recipe: nginx::enable[0m
  * service[nginx] action nothing (skipped due to action :nothing)
  * runit_service[nginx] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/nginx] action create (up to date)
    * template[/opt/gitlab/sv/nginx/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/nginx/config] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
    * link[/opt/gitlab/init/nginx] action create (up to date)
    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/nginx] action create
      [32m- create symlink at /opt/gitlab/service/nginx to /opt/gitlab/sv/nginx[0m
[0m    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)
  
[0m  * execute[reload nginx] action nothing (skipped due to action :nothing)
Recipe: gitlab::remote-syslog_disable[0m
  * service[remote-syslog] action nothing (skipped due to action :nothing)
  * runit_service[remote-syslog] action disable
    * ruby_block[disable remote-syslog] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::logrotate[0m
  * service[logrotate] action nothing (skipped due to action :nothing)
  * runit_service[logrotate] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/logrotate] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/logrotate/config] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
    * link[/opt/gitlab/init/logrotate] action create (up to date)
    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/logrotate] action create
      [32m- create symlink at /opt/gitlab/service/logrotate to /opt/gitlab/sv/logrotate[0m
[0m    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)
  
[0mRecipe: gitlab::gitlab-pages_disable[0m
  * service[gitlab-pages] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-pages] action disable
    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::storage-check_disable[0m
  * service[storage-check] action nothing (skipped due to action :nothing)
  * runit_service[storage-check] action disable
    * ruby_block[disable storage-check] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::actioncable_disable[0m
  * service[actioncable] action nothing (skipped due to action :nothing)
  * runit_service[actioncable] action disable
    * ruby_block[disable actioncable] action run (skipped due to only_if)
     (up to date)
  * consul_service[actioncable] action delete
    * file[/var/opt/gitlab/consul/config.d/actioncable-service.json] action delete (up to date)
     (up to date)
Recipe: registry::enable[0m
  * directory[create /var/opt/gitlab/registry] action create (up to date)
  * account[Docker registry user and group] action create (up to date)
  * directory[create /var/opt/gitlab/registry and set the owner] action create (up to date)
  * directory[create /var/log/gitlab/registry and set the owner] action create (up to date)
  * env_dir[/opt/gitlab/etc/registry/env] action create
    * directory[/opt/gitlab/etc/registry/env] action create (up to date)
    * file[/opt/gitlab/etc/registry/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/gitlab-rails/shared/registry] action create (up to date)
  * file[/var/opt/gitlab/registry/gitlab-registry.crt] action create (up to date)
  * template[/var/opt/gitlab/registry/config.yml] action create (up to date)
  * service[registry] action nothing (skipped due to action :nothing)
  * runit_service[registry] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/registry] action create (up to date)
    * template[/opt/gitlab/sv/registry/run] action create (up to date)
    * directory[/opt/gitlab/sv/registry/log] action create (up to date)
    * directory[/opt/gitlab/sv/registry/log/main] action create (up to date)
    * template[/opt/gitlab/sv/registry/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_registry] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/registry/config] action create (up to date)
    * template[/opt/gitlab/sv/registry/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/registry/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for registry service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/registry/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/registry/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/registry/control] action create (up to date)
    * link[/opt/gitlab/init/registry] action create (up to date)
    * file[/opt/gitlab/sv/registry/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/registry] action create
      [32m- create symlink at /opt/gitlab/service/registry to /opt/gitlab/sv/registry[0m
[0m    * ruby_block[wait for registry service socket] action run (skipped due to not_if)
  
[0m  * version_file[Create version file for Registry] action create
    * file[/var/opt/gitlab/registry/VERSION] action create (up to date)
     (up to date)
Recipe: mattermost::disable[0m
  * service[mattermost] action nothing (skipped due to action :nothing)
  * runit_service[mattermost] action disable
    * ruby_block[disable mattermost] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::gitlab-healthcheck[0m
  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create (up to date)
Recipe: monitoring::node-exporter_disable[0m
  * service[node-exporter] action nothing (skipped due to action :nothing)
  * runit_service[node-exporter] action disable
    * ruby_block[disable node-exporter] action run (skipped due to only_if)
     (up to date)
  * consul_service[node-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::gitlab-exporter[0m
  * directory[/var/opt/gitlab/gitlab-exporter] action create (up to date)
  * directory[/var/log/gitlab/gitlab-exporter] action create (up to date)
  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create (up to date)
  * version_file[Create version file for GitLab-Exporter] action create
    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create (up to date)
     (up to date)
  * service[gitlab-exporter] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-exporter] action create
      [32m- create symlink at /opt/gitlab/service/gitlab-exporter to /opt/gitlab/sv/gitlab-exporter[0m
[0m    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)
  
[0mRecipe: monitoring::redis-exporter[0m
  * directory[/var/log/gitlab/redis-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create
    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[redis-exporter] action nothing (skipped due to action :nothing)
  * runit_service[redis-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/redis-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/redis-exporter] action create (up to date)
    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/redis-exporter] action create
      [32m- create symlink at /opt/gitlab/service/redis-exporter to /opt/gitlab/sv/redis-exporter[0m
[0m    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)
  
[0m  * consul_service[redis-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::user[0m
  * account[Prometheus user and group] action create (up to date)
Recipe: monitoring::prometheus[0m
  * directory[/var/opt/gitlab/prometheus] action create (up to date)
  * directory[/var/opt/gitlab/prometheus/rules] action create (up to date)
  * directory[/var/log/gitlab/prometheus] action create (up to date)
  * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/prometheus/env] action create
    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * execute[reload prometheus] action nothing (skipped due to action :nothing)
  * file[Prometheus config] action create (up to date)
  * service[prometheus] action nothing (skipped due to action :nothing)
  * runit_service[prometheus] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/prometheus] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/prometheus/config] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
    * link[/opt/gitlab/init/prometheus] action create (up to date)
    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/prometheus] action create
      [32m- create symlink at /opt/gitlab/service/prometheus to /opt/gitlab/sv/prometheus[0m
[0m    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)
  
[0m  * consul_service[prometheus] action delete
    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create (up to date)
  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create (up to date)
Recipe: monitoring::alertmanager[0m
  * directory[/var/opt/gitlab/alertmanager] action create (up to date)
  * directory[/var/log/gitlab/alertmanager] action create (up to date)
  * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/alertmanager/env] action create
    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * file[Alertmanager config] action create (up to date)
  * service[alertmanager] action nothing (skipped due to action :nothing)
  * runit_service[alertmanager] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/alertmanager/config] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
    * link[/opt/gitlab/init/alertmanager] action create (up to date)
    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/alertmanager] action create
      [32m- create symlink at /opt/gitlab/service/alertmanager to /opt/gitlab/sv/alertmanager[0m
[0m    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)
  
[0mRecipe: monitoring::postgres-exporter[0m
  * directory[/var/log/gitlab/postgres-exporter] action create (up to date)
  * directory[/var/opt/gitlab/postgres-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create
    * directory[/opt/gitlab/etc/postgres-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create (up to date)
     (up to date)
  * service[postgres-exporter] action nothing (skipped due to action :nothing)
  * runit_service[postgres-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgres-exporter] action create
      [32m- create symlink at /opt/gitlab/service/postgres-exporter to /opt/gitlab/sv/postgres-exporter[0m
[0m    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)
  
[0m  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create (up to date)
  * consul_service[postgres-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::grafana[0m
  * directory[/var/log/gitlab/grafana] action create (up to date)
  * directory[/var/opt/gitlab/grafana] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/dashboards] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/datasources] action create (up to date)
  * directory[/var/opt/gitlab/grafana/provisioning/notifiers] action create (up to date)
  * file[/var/opt/gitlab/grafana/CVE_reset_status] action delete (up to date)
  * link[/var/opt/gitlab/grafana/conf] action create (up to date)
  * link[/var/opt/gitlab/grafana/public] action create (up to date)
  * directory[/opt/gitlab/etc/grafana/env] action create (up to date)
  * ruby_block[populate Grafana configuration options] action run
    [32m- execute the ruby block populate Grafana configuration options[0m
[0m  * env_dir[/opt/gitlab/etc/grafana/env] action create
    * directory[/opt/gitlab/etc/grafana/env] action create (up to date)
    * file[/opt/gitlab/etc/grafana/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/grafana/grafana.ini] action create (up to date)
  * file[/var/opt/gitlab/grafana/provisioning/dashboards/gitlab_dashboards.yml] action create (up to date)
  * file[/var/opt/gitlab/grafana/provisioning/datasources/gitlab_datasources.yml] action create (up to date)
  * service[grafana] action nothing (skipped due to action :nothing)
  * runit_service[grafana] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/grafana] action create (up to date)
    * template[/opt/gitlab/sv/grafana/run] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/log] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/log/main] action create (up to date)
    * template[/opt/gitlab/sv/grafana/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_grafana] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/grafana/config] action create (up to date)
    * template[/opt/gitlab/sv/grafana/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/grafana/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for grafana service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/grafana/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/grafana/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/grafana/control] action create (up to date)
    * link[/opt/gitlab/init/grafana] action create (up to date)
    * file[/opt/gitlab/sv/grafana/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/grafana] action create
      [32m- create symlink at /opt/gitlab/service/grafana to /opt/gitlab/sv/grafana[0m
[0m    * ruby_block[wait for grafana service socket] action run (skipped due to not_if)
  
[0mRecipe: letsencrypt::enable[0m
  * ruby_block[http external-url] action run (skipped due to only_if)
  * directory[/etc/gitlab/ssl] action create (up to date)
  * acme_selfsigned[jenkins.local] action create
    * file[jenkins.local SSL selfsigned key] action create_if_missing (up to date)
    * file[jenkins.local SSL selfsigned crt] action create_if_missing (up to date)
    * file[jenkins.local SSL selfsigned chain] action create_if_missing (skipped due to not_if)
     (up to date)
Recipe: letsencrypt::http_authorization[0m
  * letsencrypt_certificate[jenkins.local] action create (skipped due to only_if)
Recipe: crond::enable[0m
  * directory[/var/log/gitlab/crond] action create
    [32m- create new directory /var/log/gitlab/crond[0m
    [32m- change mode from '' to '0750'[0m
    [32m- change owner from '' to 'root'[0m
[0m  * directory[/var/opt/gitlab/crond] action create
    [32m- create new directory /var/opt/gitlab/crond[0m
    [32m- change owner from '' to 'root'[0m
[0m  * service[crond] action nothing (skipped due to action :nothing)
  * runit_service[crond] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/crond] action create
      [32m- create new directory /opt/gitlab/sv/crond[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/crond/run] action create
      [32m- create new file /opt/gitlab/sv/crond/run[0m
      [32m- update content in file /opt/gitlab/sv/crond/run from none to a621d3[0m
      [37m--- /opt/gitlab/sv/crond/run	2022-05-01 19:54:46.481387429 +0000[0m
      [37m+++ /opt/gitlab/sv/crond/.chef-run20220501-29-1c2u6xs	2022-05-01 19:54:46.481387429 +0000[0m
      [37m@@ -1,9 +1,18 @@[0m
      [37m+#!/bin/bash[0m
      [37m+set -e # fail on errors[0m
      [37m+[0m
      [37m+# Redirect stderr -> stdout[0m
      [37m+exec 2>&1[0m
      [37m+[0m
      [37m+exec chpst -P \[0m
      [37m+  /opt/gitlab/embedded/bin/go-crond \[0m
      [37m+    --include=/var/opt/gitlab/crond[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/crond/log] action create
      [32m- create new directory /opt/gitlab/sv/crond/log[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/crond/log/main] action create
      [32m- create new directory /opt/gitlab/sv/crond/log/main[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * template[/opt/gitlab/sv/crond/log/config] action create
      [32m- create new file /opt/gitlab/sv/crond/log/config[0m
      [32m- update content in file /opt/gitlab/sv/crond/log/config from none to 623c00[0m
      [37m--- /opt/gitlab/sv/crond/log/config	2022-05-01 19:54:46.493387554 +0000[0m
      [37m+++ /opt/gitlab/sv/crond/log/.chef-config20220501-29-14w19ek	2022-05-01 19:54:46.493387554 +0000[0m
      [37m@@ -1,6 +1,12 @@[0m
      [37m+s209715200[0m
      [37m+n30[0m
      [37m+t86400[0m
      [37m+!gzip[0m
      [37m+[0m
      [37m+[0m
      [32m- change mode from '' to '0644'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[verify_chown_persisted_on_crond] action create
      [32m- execute the ruby block verify_chown_persisted_on_crond[0m
[0m    * ruby_block[verify_chown_persisted_on_crond] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/crond/config] action create
      [32m- create symlink at /var/log/gitlab/crond/config to /opt/gitlab/sv/crond/log/config[0m
[0m    * template[/opt/gitlab/sv/crond/log/run] action create
      [32m- create new file /opt/gitlab/sv/crond/log/run[0m
      [32m- update content in file /opt/gitlab/sv/crond/log/run from none to 72eb33[0m
      [37m--- /opt/gitlab/sv/crond/log/run	2022-05-01 19:54:46.509387721 +0000[0m
      [37m+++ /opt/gitlab/sv/crond/log/.chef-run20220501-29-fol7q4	2022-05-01 19:54:46.509387721 +0000[0m
      [37m@@ -1,2 +1,4 @@[0m
      [37m+#!/bin/sh[0m
      [37m+exec svlogd -tt /var/log/gitlab/crond[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * directory[/opt/gitlab/sv/crond/env] action create
      [32m- create new directory /opt/gitlab/sv/crond/env[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * ruby_block[Delete unmanaged env files for crond service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/crond/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/crond/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/crond/control] action create
      [32m- create new directory /opt/gitlab/sv/crond/control[0m
      [32m- change mode from '' to '0755'[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m    * link[/opt/gitlab/init/crond] action create
      [32m- create symlink at /opt/gitlab/init/crond to /opt/gitlab/embedded/bin/sv[0m
[0m    * file[/opt/gitlab/sv/crond/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run (skipped due to only_if)
    * ruby_block[reload_log_service] action create
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/crond] action create (up to date)
      * template[/opt/gitlab/sv/crond/run] action create (up to date)
      * directory[/opt/gitlab/sv/crond/log] action create (up to date)
      * directory[/opt/gitlab/sv/crond/log/main] action create (up to date)
      * template[/opt/gitlab/sv/crond/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_crond] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/crond/config] action create (up to date)
      * template[/opt/gitlab/sv/crond/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/crond/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for crond service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/crond/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/crond/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/crond/control] action create (up to date)
      * link[/opt/gitlab/init/crond] action create (up to date)
      * file[/opt/gitlab/sv/crond/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/crond] action create
        [32m- create symlink at /opt/gitlab/service/crond to /opt/gitlab/sv/crond[0m
[0m      * ruby_block[wait for crond service socket] action run
        [32m- execute the ruby block wait for crond service socket[0m
[0m      [32m- execute the ruby block reload_log_service[0m
[0m    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/crond] action create (up to date)
      * template[/opt/gitlab/sv/crond/run] action create (up to date)
      * directory[/opt/gitlab/sv/crond/log] action create (up to date)
      * directory[/opt/gitlab/sv/crond/log/main] action create (up to date)
      * template[/opt/gitlab/sv/crond/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_crond] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/crond/config] action create (up to date)
      * template[/opt/gitlab/sv/crond/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/crond/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for crond service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/crond/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/crond/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/crond/control] action create (up to date)
      * link[/opt/gitlab/init/crond] action create (up to date)
      * file[/opt/gitlab/sv/crond/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/crond] action create (up to date)
      * ruby_block[wait for crond service socket] action run (skipped due to not_if)
      [32m- execute the ruby block restart_log_service[0m
[0m    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/crond] action create (up to date)
    * ruby_block[wait for crond service socket] action run (skipped due to not_if)
  
[0mRecipe: letsencrypt::enable[0m
  * crond_job[letsencrypt-renew] action create
    * file[/var/opt/gitlab/crond/letsencrypt-renew] action create
      [32m- create new file /var/opt/gitlab/crond/letsencrypt-renew[0m
      [32m- update content in file /var/opt/gitlab/crond/letsencrypt-renew from none to 0fd4e4[0m
      [37m--- /var/opt/gitlab/crond/letsencrypt-renew	2022-05-01 19:54:48.905412703 +0000[0m
      [37m+++ /var/opt/gitlab/crond/.chef-letsencrypt-renew20220501-29-10j1a60	2022-05-01 19:54:48.905412703 +0000[0m
      [37m@@ -1 +1,2 @@[0m
      [37m+29 0 */4 * * root /opt/gitlab/bin/gitlab-ctl renew-le-certs[0m
      [32m- change owner from '' to 'root'[0m
      [32m- change group from '' to 'root'[0m
[0m  
[0m  * ruby_block[display_le_message] action nothing (skipped due to action :nothing)
  * ruby_block[save_auto_enabled] action run
    [32m- execute the ruby block save_auto_enabled[0m
[0mRecipe: crond::enable[0m
  * runit_service[crond] action restart (up to date)
[0m
Running handlers:[0m
Running handlers complete
[0mChef Infra Client finished, 56/840 resources updated in 09 seconds[0m
gitlab Reconfigured!
Checking for an omnibus managed postgresql:Checking for an omnibus managed postgresql: [32mOK[0m
Checking if postgresql['version'] is set:Checking if postgresql['version'] is set: [32mOK[0m
Checking if we already upgraded:Checking if we already upgraded: [32mOK[0m
==> /var/log/gitlab/sshd/current <==
2022-05-01_19:54:40.58666 Server listening on 0.0.0.0 port 22.
2022-05-01_19:54:40.58669 Server listening on :: port 22.

==> /var/log/gitlab/gitlab-rails/gitlab-rails-db-migrate-2022-05-01-19-51-50.log <==
login:    root
password: You'll be prompted to create one on your first visit.


== Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/010_settings.rb

== Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/998_gitlab_instance_administration_project.rb
Successfully created self monitoring project.

== Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/999_common_metrics.rb

==> /var/log/gitlab/gitlab-rails/production.log <==
Creating scope :with_api_entity_associations. Overwriting existing method Issue.with_api_entity_associations.
Creating scope :of_projects. Overwriting existing method MergeRequest.of_projects.
Creating scope :join_project. Overwriting existing method MergeRequest.join_project.
Creating scope :references_project. Overwriting existing method MergeRequest.references_project.
Creating scope :system. Overwriting existing method Note.system.
Creating scope :order_created_desc. Overwriting existing method Packages::Package.order_created_desc.
Creating scope :order_name_desc. Overwriting existing method Packages::Package.order_name_desc.
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:54:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 15ms (Views: 3.8ms | ActiveRecord: 0.5ms | Elasticsearch: 0.0ms | Allocations: 3925)

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:52:47.899Z: ActiveRecord connection established
2022-05-01T19:52:47.904Z: ActiveRecord connection established
2022-05-01T19:52:47.916Z: ActiveRecord connection established
2022-05-01T19:52:47.918Z: ActiveRecord connection established
2022-05-01T19:52:47.931Z: ActiveRecord connection established
2022-05-01T19:52:47.999Z: ActiveRecord connection established
2022-05-01T19:54:01.130Z: ActiveRecord connection established
2022-05-01T19:54:01.634Z: Checking state of dynamic postgres partitions
2022-05-01T19:54:28.903Z: ActiveRecord connection established
2022-05-01T19:54:29.477Z: Checking state of dynamic postgres partitions

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:52:47.904Z","correlation_id":null,"message":"ActiveRecord connection established"}
{"severity":"DEBUG","time":"2022-05-01T19:52:47.883Z","correlation_id":null,"message":"ActiveRecord connection established"}
{"severity":"DEBUG","time":"2022-05-01T19:52:47.916Z","correlation_id":null,"message":"ActiveRecord connection established"}
{"severity":"DEBUG","time":"2022-05-01T19:52:47.919Z","correlation_id":null,"message":"ActiveRecord connection established"}
{"severity":"DEBUG","time":"2022-05-01T19:52:47.931Z","correlation_id":null,"message":"ActiveRecord connection established"}
{"severity":"DEBUG","time":"2022-05-01T19:52:47.999Z","correlation_id":null,"message":"ActiveRecord connection established"}
{":severity":"DEBUG",":time":"2022-05-01T19:54:01.130Z","correlation_id":null,":message":"ActiveRecord connection established"}
{"severity":"INFO","time":"2022-05-01T19:54:01.634Z","correlation_id":null,"message":"Checking state of dynamic postgres partitions"}
{":severity":"DEBUG",":time":"2022-05-01T19:54:28.903Z","correlation_id":null,":message":"ActiveRecord connection established"}
{"severity":"INFO","time":"2022-05-01T19:54:29.477Z","correlation_id":null,"message":"Checking state of dynamic postgres partitions"}

==> /var/log/gitlab/gitlab-rails/grpc.log <==
# Logfile created on 2022-05-01 19:51:58 +0000 by logger.rb/66358

==> /var/log/gitlab/gitlab-rails/production_json.log <==
# Logfile created on 2022-05-01 19:51:58 +0000 by logger.rb/66358
{"method":"GET","path":"/","format":"html","controller":"RootController","action":"index","status":302,"location":"http://example.org/users/sign_in","time":"2022-05-01T19:52:47.475Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"75fcb3b7-9760-4523-b322-83da386bddbe","meta.caller_id":"RootController#index","redis_calls":12,"redis_duration_s":0.001609,"redis_read_bytes":12,"redis_write_bytes":1893,"redis_cache_calls":12,"redis_cache_duration_s":0.001609,"redis_cache_read_bytes":12,"redis_cache_write_bytes":1893,"cpu_s":1.55,"db_duration_s":0.00544,"view_duration_s":0.0,"duration_s":0.02579,"db_count":6,"db_write_count":0,"db_cached_count":0}
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:53:46.711Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":1,"redis_duration_s":0.000458,"redis_read_bytes":201,"redis_write_bytes":74,"redis_cache_calls":1,"redis_cache_duration_s":0.000458,"redis_cache_read_bytes":201,"redis_cache_write_bytes":74,"correlation_id":"127046c6-343e-499a-b0e9-5c32c03441c1","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00263,"duration_s":0.01015,"db_count":0,"db_write_count":0,"db_cached_count":0}
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:54:01.720Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":1,"redis_duration_s":0.000564,"redis_read_bytes":201,"redis_write_bytes":74,"redis_cache_calls":1,"redis_cache_duration_s":0.000564,"redis_cache_read_bytes":201,"redis_cache_write_bytes":74,"correlation_id":"6b382b84-314d-45ab-8938-2282410ae646","cpu_s":0.03,"db_duration_s":0.0,"view_duration_s":0.00335,"duration_s":0.01595,"db_count":0,"db_write_count":0,"db_cached_count":0}
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:54:16.712Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":1,"redis_duration_s":0.000532,"redis_read_bytes":201,"redis_write_bytes":74,"redis_cache_calls":1,"redis_cache_duration_s":0.000532,"redis_cache_read_bytes":201,"redis_cache_write_bytes":74,"correlation_id":"75786ffa-3137-40f2-883a-6fcd6c009b91","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00268,"duration_s":0.01211,"db_count":0,"db_write_count":0,"db_cached_count":0}
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T19:54:21.448Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"xYFIRoYK8k6","meta.caller_id":"HelpController#index","redis_calls":16,"redis_duration_s":0.002462,"redis_read_bytes":941,"redis_write_bytes":1880,"redis_cache_calls":16,"redis_cache_duration_s":0.002462,"redis_cache_read_bytes":941,"redis_cache_write_bytes":1880,"queue_duration_s":0.01502,"cpu_s":0.39,"db_duration_s":0.01111,"view_duration_s":0.36656,"duration_s":0.38331,"db_count":8,"db_write_count":0,"db_cached_count":2}
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:54:31.716Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":2,"redis_duration_s":0.0006,"redis_read_bytes":2,"redis_write_bytes":360,"redis_cache_calls":2,"redis_cache_duration_s":0.0006,"redis_cache_read_bytes":2,"redis_cache_write_bytes":360,"correlation_id":"ec2e6451-9f4d-411d-b21f-0f55a8da9d12","cpu_s":0.03,"db_duration_s":0.00052,"view_duration_s":0.00385,"duration_s":0.01481,"db_count":1,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/service_measurement.log <==
# Logfile created on 2022-05-01 19:51:58 +0000 by logger.rb/66358

==> /var/log/gitlab/gitlab-rails/sidekiq_client.log <==
# Logfile created on 2022-05-01 19:51:58 +0000 by logger.rb/66358

==> /var/log/gitlab/gitlab-rails/api_json.log <==
# Logfile created on 2022-05-01 19:51:58 +0000 by logger.rb/66358

==> /var/log/gitlab/gitlab-rails/exceptions_json.log <==
# Logfile created on 2022-05-01 19:52:11 +0000 by logger.rb/66358
{"severity":"ERROR","time":"2022-05-01T19:52:11.425Z","correlation_id":"65478979851d7bf0e50214de77844482","exception.class":"Gitlab::Git::PreReceiveError","exception.message":"Internal API unreachable","exception.backtrace":["lib/gitlab/gitaly_client/operation_service.rb:344:in `user_commit_files'","lib/gitlab/git/repository.rb:883:in `block in multi_action'","lib/gitlab/git/wraps_gitaly_errors.rb:7:in `wrapped_gitaly_errors'","lib/gitlab/git/repository.rb:882:in `multi_action'","app/models/repository.rb:850:in `block in multi_action'","app/models/repository.rb:833:in `with_cache_hooks'","app/models/repository.rb:850:in `multi_action'","app/models/repository.rb:814:in `create_file'","app/services/files/create_service.rb:16:in `create_transformed_commit'","app/services/files/create_service.rb:10:in `create_commit!'","app/services/commits/create_service.rb:30:in `execute'","app/services/projects/create_service.rb:152:in `create_readme'","app/services/projects/create_service.rb:109:in `after_create_actions'","app/services/projects/create_service.rb:59:in `block in execute'","lib/gitlab/application_context.rb:52:in `block in use'","lib/gitlab/application_context.rb:52:in `use'","lib/gitlab/application_context.rb:20:in `with_context'","app/services/projects/create_service.rb:58:in `execute'","app/services/concerns/measurable.rb:35:in `execute'","lib/gitlab/database_importers/self_monitoring/project/create_service.rb:59:in `create_project'","app/models/concerns/stepable.rb:14:in `call'","app/models/concerns/stepable.rb:14:in `block in execute_steps'","app/models/concerns/stepable.rb:13:in `each'","app/models/concerns/stepable.rb:13:in `inject'","app/models/concerns/stepable.rb:13:in `execute_steps'","lib/gitlab/database_importers/self_monitoring/project/create_service.rb:27:in `execute'","(eval):3:in `block (2 levels) in run_file'","lib/tasks/gitlab/db.rake:59:in `block (3 levels) in \u003ctop (required)\u003e'"]}

==> /var/log/gitlab/redis/current <==
2022-05-01_19:54:46.61773 350:C 01 May 2022 19:54:46.617 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
2022-05-01_19:54:46.61781 350:C 01 May 2022 19:54:46.617 # Redis version=5.0.9, bits=64, commit=ce878b6e, modified=0, pid=350, just started
2022-05-01_19:54:46.61781 350:C 01 May 2022 19:54:46.617 # Configuration loaded
2022-05-01_19:54:46.61861 350:M 01 May 2022 19:54:46.618 * Running mode=standalone, port=0.
2022-05-01_19:54:46.61862 350:M 01 May 2022 19:54:46.618 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
2022-05-01_19:54:46.61863 350:M 01 May 2022 19:54:46.618 # Server initialized
2022-05-01_19:54:46.61863 350:M 01 May 2022 19:54:46.618 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
2022-05-01_19:54:46.61865 350:M 01 May 2022 19:54:46.618 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
2022-05-01_19:54:46.61897 350:M 01 May 2022 19:54:46.618 * The server is now ready to accept connections at /var/opt/gitlab/redis/redis.socket

==> /var/log/gitlab/gitaly/gitaly_hooks.log <==

==> /var/log/gitlab/gitaly/current <==
{"level":"info","msg":"finished tempdir cleaner walk","storage":"default","time":"2022-05-01T19:54:47.168Z","time_ms":0}
{"address":"/var/opt/gitlab/gitaly/gitaly.socket","level":"info","msg":"listening at unix address","time":"2022-05-01T19:54:47.168Z"}
{"address":"/var/opt/gitlab/gitaly/internal_sockets/internal.sock","level":"info","msg":"listening at unix address","time":"2022-05-01T19:54:47.168Z"}
{"address":"localhost:9236","level":"info","msg":"starting prometheus listener","time":"2022-05-01T19:54:47.169Z"}
{"level":"info","msg":"starting RSS monitor","supervisor.name":"gitaly-ruby.0","supervisor.rss_threshold":209715200,"time":"2022-05-01T19:54:47.170Z"}
{"level":"info","msg":"starting RSS monitor","supervisor.name":"gitaly-ruby.1","supervisor.rss_threshold":209715200,"time":"2022-05-01T19:54:47.170Z"}
{"level":"warning","msg":"spawned","supervisor.args":["bundle","exec","bin/ruby-cd","/var/opt/gitlab/gitaly","/opt/gitlab/embedded/service/gitaly-ruby/bin/gitaly-ruby","372","/var/opt/gitlab/gitaly/internal_sockets/ruby.1"],"supervisor.name":"gitaly-ruby.1","supervisor.pid":450,"time":"2022-05-01T19:54:47.182Z"}
{"level":"warning","msg":"spawned","supervisor.args":["bundle","exec","bin/ruby-cd","/var/opt/gitlab/gitaly","/opt/gitlab/embedded/service/gitaly-ruby/bin/gitaly-ruby","372","/var/opt/gitlab/gitaly/internal_sockets/ruby.0"],"supervisor.name":"gitaly-ruby.0","supervisor.pid":449,"time":"2022-05-01T19:54:47.184Z"}
{"level":"info","msg":"PID 449 BUNDLE_GEMFILE=/opt/gitlab/embedded/service/gitaly-ruby/Gemfile","supervisor.args":["bundle","exec","bin/ruby-cd","/var/opt/gitlab/gitaly","/opt/gitlab/embedded/service/gitaly-ruby/bin/gitaly-ruby","372","/var/opt/gitlab/gitaly/internal_sockets/ruby.0"],"supervisor.name":"gitaly-ruby.0","time":"2022-05-01T19:54:47.426Z"}
{"level":"info","msg":"PID 450 BUNDLE_GEMFILE=/opt/gitlab/embedded/service/gitaly-ruby/Gemfile","supervisor.args":["bundle","exec","bin/ruby-cd","/var/opt/gitlab/gitaly","/opt/gitlab/embedded/service/gitaly-ruby/bin/gitaly-ruby","372","/var/opt/gitlab/gitaly/internal_sockets/ruby.1"],"supervisor.name":"gitaly-ruby.1","time":"2022-05-01T19:54:47.435Z"}

==> /var/log/gitlab/postgresql/current <==
2022-05-01_19:54:46.64784 LOG:  listening on Unix socket "/var/opt/gitlab/postgresql/.s.PGSQL.5432"
2022-05-01_19:54:46.67842 LOG:  database system was interrupted; last known up at 2022-05-01 19:51:49 GMT
2022-05-01_19:54:46.98577 LOG:  database system was not properly shut down; automatic recovery in progress
2022-05-01_19:54:46.98842 LOG:  redo starts at 0/15DF038
2022-05-01_19:54:47.22617 LOG:  invalid record length at 0/2D9F0A0: wanted 24, got 0
2022-05-01_19:54:47.22618 LOG:  redo done at 0/2D9F078
2022-05-01_19:54:47.22618 LOG:  last completed transaction was at log time 2022-05-01 19:54:12.867613+00
2022-05-01_19:54:47.63169 FATAL:  the database system is starting up
2022-05-01_19:54:47.77444 LOG:  database system is ready to accept connections

==> /var/log/gitlab/logrotate/current <==

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:52:47.924Z","pid":768,"message":"- Worker 1 (pid: 899) booted, phase: 0"}
{"timestamp":"2022-05-01T19:52:47.930Z","pid":768,"message":"- Worker 5 (pid: 907) booted, phase: 0"}
{"timestamp":"2022-05-01T19:52:47.931Z","pid":768,"message":"- Worker 4 (pid: 905) booted, phase: 0"}
{"timestamp":"2022-05-01T19:52:47.942Z","pid":768,"message":"- Worker 6 (pid: 909) booted, phase: 0"}
{"timestamp":"2022-05-01T19:52:48.009Z","pid":768,"message":"- Worker 7 (pid: 910) booted, phase: 0"}
{"timestamp":"2022-05-01T19:53:07.608Z","pid":768,"message":"PumaWorkerKiller: Consuming 5565.48046875 mb with master and 8 workers."}
{"timestamp":"2022-05-01T19:53:27.609Z","pid":768,"message":"PumaWorkerKiller: Consuming 5557.359375 mb with master and 8 workers."}
{"timestamp":"2022-05-01T19:53:47.610Z","pid":768,"message":"PumaWorkerKiller: Consuming 5563.03125 mb with master and 8 workers."}
{"timestamp":"2022-05-01T19:54:07.610Z","pid":768,"message":"PumaWorkerKiller: Consuming 5568.9296875 mb with master and 8 workers."}
{"timestamp":"2022-05-01T19:54:27.611Z","pid":768,"message":"PumaWorkerKiller: Consuming 5614.8125 mb with master and 8 workers."}

==> /var/log/gitlab/puma/puma_stderr.log <==
=== puma startup: 2022-05-01 19:52:47 +0000 ===

==> /var/log/gitlab/puma/current <==
2022-05-01_19:54:47.20326 {"timestamp":"2022-05-01T19:54:47.203Z","pid":318,"message":"Puma starting in cluster mode..."}
2022-05-01_19:54:47.20330 {"timestamp":"2022-05-01T19:54:47.203Z","pid":318,"message":"* Version 4.3.5.gitlab.3 (ruby 2.6.6-p146), codename: Mysterious Traveller"}
2022-05-01_19:54:47.20330 {"timestamp":"2022-05-01T19:54:47.203Z","pid":318,"message":"* Min threads: 4, max threads: 4"}
2022-05-01_19:54:47.20330 {"timestamp":"2022-05-01T19:54:47.203Z","pid":318,"message":"* Environment: production"}
2022-05-01_19:54:47.20330 {"timestamp":"2022-05-01T19:54:47.203Z","pid":318,"message":"* Process workers: 8"}
2022-05-01_19:54:47.20330 {"timestamp":"2022-05-01T19:54:47.203Z","pid":318,"message":"* Preloading application"}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T19:54:46.787Z","message":"Starting cluster with 1 processes"}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"build_time":"20200920.201041","level":"info","msg":"Starting","time":"2022-05-01T19:54:46Z","version":"v8.46.0"}
{"level":"info","msg":"keywatcher: starting process loop","time":"2022-05-01T19:54:46Z"}
{"address":"/var/opt/gitlab/redis/redis.socket","level":"info","msg":"redis: dialing","network":"unix","time":"2022-05-01T19:54:46Z"}

==> /var/log/gitlab/nginx/error.log <==
2022/05/01 19:54:08 [emerg] 1497#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:09 [emerg] 1498#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:10 [emerg] 1500#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:11 [emerg] 1505#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:12 [emerg] 1508#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:13 [emerg] 1511#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:14 [emerg] 1516#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:15 [emerg] 1517#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:16 [emerg] 1537#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)
2022/05/01 19:54:17 [emerg] 1545#0: cannot load certificate "/etc/gitlab/ssl/jenkins.local.crt": BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/etc/gitlab/ssl/jenkins.local.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:19:54:21 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/nginx/gitlab_error.log <==

==> /var/log/gitlab/nginx/gitlab_registry_access.log <==

==> /var/log/gitlab/nginx/gitlab_registry_error.log <==

==> /var/log/gitlab/nginx/access.log <==

==> /var/log/gitlab/nginx/current <==

==> /var/log/gitlab/registry/current <==
2022-05-01_19:54:46.64784 time="2022-05-01T19:54:46.643898749Z" level=info msg="redis not configured" environment=production go.version=go1.14.7 instance.id=35dc8d75-47eb-4604-b013-9ca17955518d service=registry version=v2.10.1-gitlab
2022-05-01_19:54:46.64789 time="2022-05-01T19:54:46.643945674Z" level=info msg="Starting upload purge in 39m0s" environment=production go.version=go1.14.7 instance.id=35dc8d75-47eb-4604-b013-9ca17955518d service=registry version=v2.10.1-gitlab
2022-05-01_19:54:46.65263 time="2022-05-01T19:54:46.652595317Z" level=info msg="using inmemory blob descriptor cache" environment=production go.version=go1.14.7 instance.id=35dc8d75-47eb-4604-b013-9ca17955518d service=registry version=v2.10.1-gitlab
2022-05-01_19:54:46.65321 time="2022-05-01T19:54:46.653147253Z" level=info msg="listening on 127.0.0.1:5000" environment=production go.version=go1.14.7 instance.id=35dc8d75-47eb-4604-b013-9ca17955518d service=registry version=v2.10.1-gitlab

==> /var/log/gitlab/gitlab-exporter/current <==
2022-05-01_19:54:47.02040 == Sinatra (v2.0.8.1) has taken the stage on 9168 for development with backup from Puma
2022-05-01_19:54:47.02059 Puma starting in single mode...
2022-05-01_19:54:47.02059 * Version 4.3.5.gitlab.3 (ruby 2.6.6-p146), codename: Mysterious Traveller
2022-05-01_19:54:47.02059 * Min threads: 0, max threads: 16
2022-05-01_19:54:47.02060 * Environment: development
2022-05-01_19:54:47.02083 * Listening on tcp://127.0.0.1:9168
2022-05-01_19:54:47.02087 Use Ctrl-C to stop

==> /var/log/gitlab/redis-exporter/current <==
2022-05-01_19:54:46.61468 time="2022-05-01T19:54:46Z" level=info msg="Redis Metrics Exporter 1.6.1    build date:     sha1:     Go: go1.14.7    GOOS: linux    GOARCH: amd64"
2022-05-01_19:54:46.61529 time="2022-05-01T19:54:46Z" level=info msg="Providing metrics at localhost:9121/metrics"

==> /var/log/gitlab/prometheus/current <==
2022-05-01_19:54:46.76540 level=info ts=2022-05-01T19:54:46.765Z caller=head.go:713 component=tsdb msg="WAL segment loaded" segment=2 maxSegment=2
2022-05-01_19:54:46.76540 level=info ts=2022-05-01T19:54:46.765Z caller=head.go:716 component=tsdb msg="WAL replay completed" checkpoint_replay_duration=25.846µs wal_replay_duration=58.884692ms total_replay_duration=58.928175ms
2022-05-01_19:54:46.77360 level=info ts=2022-05-01T19:54:46.773Z caller=main.go:700 fs_type=XFS_SUPER_MAGIC
2022-05-01_19:54:46.77362 level=info ts=2022-05-01T19:54:46.773Z caller=main.go:701 msg="TSDB started"
2022-05-01_19:54:46.77363 level=info ts=2022-05-01T19:54:46.773Z caller=main.go:805 msg="Loading configuration file" filename=/var/opt/gitlab/prometheus/prometheus.yml
2022-05-01_19:54:46.77434 level=error ts=2022-05-01T19:54:46.774Z caller=manager.go:344 component="discovery manager scrape" msg="Cannot create service discovery" err="unable to load specified CA cert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: open /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: no such file or directory" type=*kubernetes.SDConfig
2022-05-01_19:54:46.77436 level=error ts=2022-05-01T19:54:46.774Z caller=manager.go:344 component="discovery manager scrape" msg="Cannot create service discovery" err="unable to load specified CA cert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: open /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: no such file or directory" type=*kubernetes.SDConfig
2022-05-01_19:54:46.77439 level=error ts=2022-05-01T19:54:46.774Z caller=manager.go:344 component="discovery manager scrape" msg="Cannot create service discovery" err="unable to load specified CA cert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: open /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: no such file or directory" type=*kubernetes.SDConfig
2022-05-01_19:54:46.77988 level=info ts=2022-05-01T19:54:46.779Z caller=main.go:833 msg="Completed loading of configuration file" filename=/var/opt/gitlab/prometheus/prometheus.yml
2022-05-01_19:54:46.77990 level=info ts=2022-05-01T19:54:46.779Z caller=main.go:652 msg="Server is ready to receive web requests."

==> /var/log/gitlab/alertmanager/current <==
2022-05-01_19:54:46.72780 level=info ts=2022-05-01T19:54:46.727Z caller=main.go:216 msg="Starting Alertmanager" version="(version=0.21.0, branch=master, revision=)"
2022-05-01_19:54:46.72786 level=info ts=2022-05-01T19:54:46.727Z caller=main.go:217 build_context="(go=go1.14.7, user=GitLab-Omnibus, date=)"
2022-05-01_19:54:46.72826 level=info ts=2022-05-01T19:54:46.728Z caller=cluster.go:161 component=cluster msg="setting advertise address explicitly" addr=172.18.0.2 port=9094
2022-05-01_19:54:46.73084 level=info ts=2022-05-01T19:54:46.729Z caller=cluster.go:623 component=cluster msg="Waiting for gossip to settle..." interval=2s
2022-05-01_19:54:46.75122 level=info ts=2022-05-01T19:54:46.751Z caller=coordinator.go:119 component=configuration msg="Loading configuration file" file=/var/opt/gitlab/alertmanager/alertmanager.yml
2022-05-01_19:54:46.75134 level=info ts=2022-05-01T19:54:46.751Z caller=coordinator.go:131 component=configuration msg="Completed loading of configuration file" file=/var/opt/gitlab/alertmanager/alertmanager.yml
2022-05-01_19:54:46.75363 level=info ts=2022-05-01T19:54:46.753Z caller=main.go:485 msg=Listening address=localhost:9093
2022-05-01_19:54:48.72991 level=info ts=2022-05-01T19:54:48.729Z caller=cluster.go:648 component=cluster msg="gossip not settled" polls=0 before=0 now=1 elapsed=2.000064866s

==> /var/log/gitlab/postgres-exporter/current <==
2022-05-01_19:54:46.63061 time="2022-05-01T19:54:46Z" level=info msg="Established new database connection to \"/var/opt/gitlab/postgresql:5432\"." source="postgres_exporter.go:878"
2022-05-01_19:54:47.63122 time="2022-05-01T19:54:47Z" level=info msg="Established new database connection to \"/var/opt/gitlab/postgresql:5432\"." source="postgres_exporter.go:878"
2022-05-01_19:54:49.63193 time="2022-05-01T19:54:49Z" level=info msg="Established new database connection to \"/var/opt/gitlab/postgresql:5432\"." source="postgres_exporter.go:878"
2022-05-01_19:54:49.63503 time="2022-05-01T19:54:49Z" level=info msg="Semantic Version Changed on \"/var/opt/gitlab/postgresql:5432\": 0.0.0 -> 11.9.0" source="postgres_exporter.go:1405"
2022-05-01_19:54:49.72660 time="2022-05-01T19:54:49Z" level=info msg="Starting Server: localhost:9187" source="postgres_exporter.go:1672"

==> /var/log/gitlab/grafana/current <==
2022-05-01_19:54:46.66285 t=2022-05-01T19:54:46+0000 lvl=info msg="Path Home" logger=settings path=/var/opt/gitlab/grafana
2022-05-01_19:54:46.66286 t=2022-05-01T19:54:46+0000 lvl=info msg="Path Data" logger=settings path=/var/opt/gitlab/grafana/data
2022-05-01_19:54:46.66286 t=2022-05-01T19:54:46+0000 lvl=info msg="Path Logs" logger=settings path=/var/log/gitlab/grafana
2022-05-01_19:54:46.66286 t=2022-05-01T19:54:46+0000 lvl=info msg="Path Plugins" logger=settings path=/var/opt/gitlab/grafana/data/plugins
2022-05-01_19:54:46.66286 t=2022-05-01T19:54:46+0000 lvl=info msg="Path Provisioning" logger=settings path=/var/opt/gitlab/grafana/provisioning
2022-05-01_19:54:46.66286 t=2022-05-01T19:54:46+0000 lvl=info msg="App mode production" logger=settings
2022-05-01_19:54:46.66336 t=2022-05-01T19:54:46+0000 lvl=info msg="Connecting to DB" logger=sqlstore dbtype=sqlite3
2022-05-01_19:54:46.66385 t=2022-05-01T19:54:46+0000 lvl=info msg="Starting DB migration" logger=migrator
2022-05-01_19:54:46.67288 t=2022-05-01T19:54:46+0000 lvl=info msg="Starting plugin search" logger=plugins
2022-05-01_19:54:46.69761 t=2022-05-01T19:54:46+0000 lvl=info msg="HTTP Server Listen" logger=http.server address=127.0.0.1:3000 protocol=http subUrl=/-/grafana socket=

==> /var/log/gitlab/crond/current <==
2022-05-01_19:54:46.63131 time="2022-05-01T19:54:46Z" level=info msg="starting go-crond version 20.7.0 (09eeb85; go1.14.7) "
2022-05-01_19:54:46.63138 time="2022-05-01T19:54:46Z" level=info msg="starting http server on "
2022-05-01_19:54:46.63150 time="2022-05-01T19:54:46Z" level=info msg="start runner with 0 jobs\n"
2022-05-01_19:54:49.90101 time="2022-05-01T19:54:49Z" level=info msg="got signal: terminated"
2022-05-01_19:54:49.90104 time="2022-05-01T19:54:49Z" level=info msg="stop runner"
2022-05-01_19:54:49.90104 time="2022-05-01T19:54:49Z" level=info msg=terminated
2022-05-01_19:54:49.90334 time="2022-05-01T19:54:49Z" level=info msg="starting go-crond version 20.7.0 (09eeb85; go1.14.7) "
2022-05-01_19:54:49.90340 time="2022-05-01T19:54:49Z" level=info msg="starting http server on "
2022-05-01_19:54:49.90348 time="2022-05-01T19:54:49Z" level=info msg="cronjob added" command="/opt/gitlab/bin/gitlab-ctl renew-le-certs" spec="29 0 */4 * *" user=root
2022-05-01_19:54:49.90352 time="2022-05-01T19:54:49Z" level=info msg="start runner with 1 jobs\n"

==> /var/log/gitlab/prometheus/current <==
2022-05-01_19:54:51.78010 level=error ts=2022-05-01T19:54:51.780Z caller=manager.go:188 component="scrape manager" msg="error creating new scrape pool" err="error creating HTTP client: unable to load specified CA cert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: open /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: no such file or directory" scrape_pool=kubernetes-pods
2022-05-01_19:54:51.78014 level=error ts=2022-05-01T19:54:51.780Z caller=manager.go:188 component="scrape manager" msg="error creating new scrape pool" err="error creating HTTP client: unable to load specified CA cert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: open /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: no such file or directory" scrape_pool=kubernetes-nodes
2022-05-01_19:54:51.78027 level=error ts=2022-05-01T19:54:51.780Z caller=manager.go:188 component="scrape manager" msg="error creating new scrape pool" err="error creating HTTP client: unable to load specified CA cert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: open /var/run/secrets/kubernetes.io/serviceaccount/ca.crt: no such file or directory" scrape_pool=kubernetes-cadvisor

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:54:56.566Z: Checking state of dynamic postgres partitions

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"INFO","time":"2022-05-01T19:54:56.566Z","correlation_id":null,"message":"Checking state of dynamic postgres partitions"}

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:54:56.585Z: Checking state of dynamic postgres partitions

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"INFO","time":"2022-05-01T19:54:56.585Z","correlation_id":null,"message":"Checking state of dynamic postgres partitions"}

==> /var/log/gitlab/gitlab-rails/production.log <==
Raven 3.0.4 configured not to capture errors: DSN not set
Raven 3.0.4 configured not to capture errors: DSN not set

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T19:54:56.631Z","message":"Booting Sidekiq 5.2.9 with redis options {:instrumentation_class=\u003eGitlab::Instrumentation::Redis::Queues, :path=\u003e\"/var/opt/gitlab/redis/redis.socket\", :namespace=\u003e\"resque:gitlab\", :id=\u003e\"Sidekiq-server-PID-439\", :url=\u003enil}"}
{"severity":"INFO","time":"2022-05-01T19:54:56.640Z","message":"GitLab reliable fetch activated!"}

==> /var/log/gitlab/alertmanager/current <==
2022-05-01_19:54:56.73028 level=info ts=2022-05-01T19:54:56.730Z caller=cluster.go:640 component=cluster msg="gossip settled; proceeding" elapsed=10.000465329s

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T19:54:56.782Z","message":"Cron Jobs - add job with name: stuck_ci_jobs_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.784Z","message":"Cron Jobs - add job with name: expire_build_artifacts_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.786Z","message":"Cron Jobs - add job with name: environments_auto_stop_cron_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.788Z","message":"Cron Jobs - add job with name: pipeline_schedule_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.792Z","message":"Cron Jobs - add job with name: repository_check_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.794Z","message":"Cron Jobs - add job with name: admin_email_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.797Z","message":"Cron Jobs - add job with name: personal_access_tokens_expiring_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.799Z","message":"Cron Jobs - add job with name: personal_access_tokens_expired_notification_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.800Z","message":"Cron Jobs - add job with name: repository_archive_cache_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.802Z","message":"Cron Jobs - add job with name: ci_archive_traces_cron_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.804Z","message":"Cron Jobs - add job with name: pages_domain_verification_cron_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.806Z","message":"Cron Jobs - add job with name: pages_domain_ssl_renewal_cron_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.807Z","message":"Cron Jobs - add job with name: pages_domain_removal_cron_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.810Z","message":"Cron Jobs - add job with name: schedule_migrate_external_diffs_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.811Z","message":"Cron Jobs - add job with name: ci_platform_metrics_update_cron_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.813Z","message":"Cron Jobs - add job with name: import_export_project_cleanup_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.815Z","message":"Cron Jobs - add job with name: requests_profiles_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.817Z","message":"Cron Jobs - add job with name: remove_expired_members_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.819Z","message":"Cron Jobs - add job with name: remove_expired_group_links_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.821Z","message":"Cron Jobs - add job with name: prune_old_events_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.823Z","message":"Cron Jobs - add job with name: trending_projects_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.825Z","message":"Cron Jobs - add job with name: remove_unreferenced_lfs_objects_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.828Z","message":"Cron Jobs - add job with name: import_stuck_project_import_jobs"}
{"severity":"INFO","time":"2022-05-01T19:54:56.830Z","message":"Cron Jobs - add job with name: jira_import_stuck_jira_import_jobs"}
{"severity":"INFO","time":"2022-05-01T19:54:56.832Z","message":"Cron Jobs - add job with name: stuck_export_jobs_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.834Z","message":"Cron Jobs - add job with name: gitlab_usage_ping_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.836Z","message":"Cron Jobs - add job with name: stuck_merge_jobs_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.838Z","message":"Cron Jobs - add job with name: issue_due_scheduler_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.840Z","message":"Cron Jobs - add job with name: prune_web_hook_logs_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.842Z","message":"Cron Jobs - add job with name: metrics_dashboard_schedule_annotations_prune_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.844Z","message":"Cron Jobs - add job with name: namespaces_prune_aggregation_schedules_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.846Z","message":"Cron Jobs - add job with name: container_expiration_policy_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.848Z","message":"Cron Jobs - add job with name: x509_issuer_crl_check_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.850Z","message":"Cron Jobs - add job with name: users_create_statistics_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.852Z","message":"Cron Jobs - add job with name: authorized_project_update_periodic_recalculate_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.854Z","message":"Cron Jobs - add job with name: update_container_registry_info_worker"}
{"severity":"INFO","time":"2022-05-01T19:54:56.856Z","message":"Cron Jobs - add job with name: postgres_dynamic_partitions_creator"}
{"severity":"INFO","time":"2022-05-01T19:54:56.859Z","message":"Cron Jobs - add job with name: analytics_instance_statistics_count_job_trigger_worker"}

==> /var/log/gitlab/gitlab-rails/production.log <==
Creating scope :with_api_entity_associations. Overwriting existing method Issue.with_api_entity_associations.
Creating scope :of_projects. Overwriting existing method MergeRequest.of_projects.
Creating scope :join_project. Overwriting existing method MergeRequest.join_project.
Creating scope :references_project. Overwriting existing method MergeRequest.references_project.
Creating scope :system. Overwriting existing method Note.system.
Creating scope :with_api_entity_associations. Overwriting existing method Issue.with_api_entity_associations.
Creating scope :of_projects. Overwriting existing method MergeRequest.of_projects.
Creating scope :join_project. Overwriting existing method MergeRequest.join_project.
Creating scope :references_project. Overwriting existing method MergeRequest.references_project.
Creating scope :system. Overwriting existing method Note.system.
Creating scope :without_statuses. Overwriting existing method CommitStatus.without_statuses.
An enum element in Ci::Runner uses the prefix 'not_'. This will cause a conflict with auto generated negative scopes.
Creating scope :without_statuses. Overwriting existing method CommitStatus.without_statuses.
An enum element in Ci::Runner uses the prefix 'not_'. This will cause a conflict with auto generated negative scopes.
Creating scope :order_created_desc. Overwriting existing method Packages::Package.order_created_desc.
Creating scope :order_name_desc. Overwriting existing method Packages::Package.order_name_desc.
Creating scope :order_created_desc. Overwriting existing method Packages::Package.order_created_desc.
Creating scope :order_name_desc. Overwriting existing method Packages::Package.order_name_desc.
Creating scope :without_statuses. Overwriting existing method Ci::Pipeline.without_statuses.
Creating scope :without_statuses. Overwriting existing method Ci::Pipeline.without_statuses.
Creating scope :open. Overwriting existing method AlertManagement::Alert.open.
Creating scope :open. Overwriting existing method AlertManagement::Alert.open.
Creating scope :order_name_asc. Overwriting existing method Label.order_name_asc.
Creating scope :order_name_desc. Overwriting existing method Label.order_name_desc.
Creating scope :order_name_asc. Overwriting existing method Label.order_name_asc.
Creating scope :order_name_desc. Overwriting existing method Label.order_name_desc.
Creating scope :without_statuses. Overwriting existing method Ci::Stage.without_statuses.
Creating scope :created. Overwriting existing method Ci::Stage.created.
Creating scope :pending. Overwriting existing method Ci::Stage.pending.
Creating scope :running. Overwriting existing method Ci::Stage.running.
Creating scope :success. Overwriting existing method Ci::Stage.success.
Creating scope :failed. Overwriting existing method Ci::Stage.failed.
Creating scope :canceled. Overwriting existing method Ci::Stage.canceled.
Creating scope :skipped. Overwriting existing method Ci::Stage.skipped.
Creating scope :manual. Overwriting existing method Ci::Stage.manual.
Creating scope :scheduled. Overwriting existing method Ci::Stage.scheduled.
Creating scope :preparing. Overwriting existing method Ci::Stage.preparing.
Creating scope :waiting_for_resource. Overwriting existing method Ci::Stage.waiting_for_resource.
Creating scope :open. Overwriting existing method ExternalPullRequest.open.
Creating scope :without_statuses. Overwriting existing method Ci::Stage.without_statuses.
Creating scope :created. Overwriting existing method Ci::Stage.created.
Creating scope :pending. Overwriting existing method Ci::Stage.pending.
Creating scope :running. Overwriting existing method Ci::Stage.running.
Creating scope :success. Overwriting existing method Ci::Stage.success.
Creating scope :failed. Overwriting existing method Ci::Stage.failed.
Creating scope :canceled. Overwriting existing method Ci::Stage.canceled.
Creating scope :skipped. Overwriting existing method Ci::Stage.skipped.
Creating scope :manual. Overwriting existing method Ci::Stage.manual.
Creating scope :scheduled. Overwriting existing method Ci::Stage.scheduled.
Creating scope :preparing. Overwriting existing method Ci::Stage.preparing.
Creating scope :waiting_for_resource. Overwriting existing method Ci::Stage.waiting_for_resource.
Creating scope :order_name_asc. Overwriting existing method Member.order_name_asc.
Creating scope :order_name_desc. Overwriting existing method Member.order_name_desc.
Creating scope :open. Overwriting existing method ExternalPullRequest.open.
Creating scope :order_name_asc. Overwriting existing method Member.order_name_asc.
Creating scope :order_name_desc. Overwriting existing method Member.order_name_desc.
Creating scope :system. Overwriting existing method PrometheusMetric.system.
Creating scope :system. Overwriting existing method PrometheusMetric.system.
Creating scope :system. Overwriting existing method Gitlab::DatabaseImporters::CommonMetrics::PrometheusMetric.system.
Creating scope :system. Overwriting existing method Gitlab::DatabaseImporters::CommonMetrics::PrometheusMetric.system.
Started GET "/" for  at 2022-05-01 19:55:10 +0000

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T19:55:10.640Z","message":"Running in ruby 2.6.6p146 (2020-03-31 revision 67876) [x86_64-linux]"}
{"severity":"INFO","time":"2022-05-01T19:55:10.640Z","message":"See LICENSE and the LGPL-3.0 for licensing details."}
{"severity":"INFO","time":"2022-05-01T19:55:10.640Z","message":"Upgrade to Sidekiq Pro for more features and support: http://sidekiq.org"}
{"severity":"INFO","time":"2022-05-01T19:55:10.657Z","message":"Starting processing, hit Ctrl-C to stop"}
{"severity":"INFO","time":"2022-05-01T19:55:10.658Z","class":"Gitlab::SidekiqDaemon::MemoryKiller","action":"start","pid":439,"message":"Starting Gitlab::SidekiqDaemon::MemoryKiller Daemon","retry":0}
{"severity":"INFO","time":"2022-05-01T19:55:10.667Z","message":"Listening on queues [\"analytics_instance_statistics_counter_job\", \"authorized_keys\", \"authorized_project_update:authorized_project_update_project_create\", \"authorized_project_update:authorized_project_update_project_group_link_create\", \"authorized_project_update:authorized_project_update_user_refresh_over_user_range\", \"authorized_project_update:authorized_project_update_user_refresh_with_low_urgency\", \"authorized_projects\", \"auto_devops:auto_devops_disable\", \"auto_merge:auto_merge_process\", \"background_migration\", \"chaos:chaos_cpu_spin\", \"chaos:chaos_db_spin\", \"chaos:chaos_kill\", \"chaos:chaos_leak_mem\", \"chaos:chaos_sleep\", \"chat_notification\", \"container_repository:cleanup_container_repository\", \"container_repository:delete_container_repository\", \"create_commit_signature\", \"create_evidence\", \"create_note_diff_file\", \"cronjob:admin_email\", \"cronjob:analytics_instance_statistics_count_job_trigger\", \"cronjob:authorized_project_update_periodic_recalculate\", \"cronjob:ci_archive_traces_cron\", \"cronjob:ci_platform_metrics_update_cron\", \"cronjob:container_expiration_policy\", \"cronjob:environments_auto_stop_cron\", \"cronjob:expire_build_artifacts\", \"cronjob:gitlab_usage_ping\", \"cronjob:import_export_project_cleanup\", \"cronjob:import_stuck_project_import_jobs\", \"cronjob:issue_due_scheduler\", \"cronjob:jira_import_stuck_jira_import_jobs\", \"cronjob:metrics_dashboard_schedule_annotations_prune\", \"cronjob:namespaces_prune_aggregation_schedules\", \"cronjob:pages_domain_removal_cron\", \"cronjob:pages_domain_ssl_renewal_cron\", \"cronjob:pages_domain_verification_cron\", \"cronjob:partition_creation\", \"cronjob:personal_access_tokens_expired_notification\", \"cronjob:personal_access_tokens_expiring\", \"cronjob:pipeline_schedule\", \"cronjob:prune_old_events\", \"cronjob:prune_web_hook_logs\", \"cronjob:remove_expired_group_links\", \"cronjob:remove_expired_members\", \"cronjob:remove_unreferenced_lfs_objects\", \"cronjob:repository_archive_cache\", \"cronjob:repository_check_dispatch\", \"cronjob:requests_profiles\", \"cronjob:schedule_migrate_external_diffs\", \"cronjob:stuck_ci_jobs\", \"cronjob:stuck_export_jobs\", \"cronjob:stuck_merge_jobs\", \"cronjob:trending_projects\", \"cronjob:update_container_registry_info\", \"cronjob:users_create_statistics\", \"cronjob:x509_issuer_crl_check\", \"default\", \"delete_diff_files\", \"delete_merged_branches\", \"delete_stored_files\", \"delete_user\", \"deployment:deployments_finished\", \"deployment:deployments_forward_deployment\", \"deployment:deployments_success\", \"design_management_new_version\", \"detect_repository_languages\", \"email_receiver\", \"emails_on_push\", \"error_tracking_issue_link\", \"expire_build_instance_artifacts\", \"export_csv\", \"external_service_reactive_caching\", \"file_hook\", \"flush_counter_increments\", \"gcp_cluster:cluster_configure_istio\", \"gcp_cluster:cluster_install_app\", \"gcp_cluster:cluster_patch_app\", \"gcp_cluster:cluster_provision\", \"gcp_cluster:cluster_update_app\", \"gcp_cluster:cluster_upgrade_app\", \"gcp_cluster:cluster_wait_for_app_installation\", \"gcp_cluster:cluster_wait_for_app_update\", \"gcp_cluster:cluster_wait_for_ingress_ip_address\", \"gcp_cluster:clusters_applications_activate_service\", \"gcp_cluster:clusters_applications_deactivate_service\", \"gcp_cluster:clusters_applications_uninstall\", \"gcp_cluster:clusters_applications_wait_for_uninstall_app\", \"gcp_cluster:clusters_cleanup_app\", \"gcp_cluster:clusters_cleanup_project_namespace\", \"gcp_cluster:clusters_cleanup_service_account\", \"gcp_cluster:wait_for_cluster_creation\", \"git_garbage_collect\", \"github_import_advance_stage\", \"github_importer:github_import_import_diff_note\", \"github_importer:github_import_import_issue\", \"github_importer:github_import_import_lfs_object\", \"github_importer:github_import_import_note\", \"github_importer:github_import_import_pull_request\", \"github_importer:github_import_refresh_import_jid\", \"github_importer:github_import_stage_finish_import\", \"github_importer:github_import_stage_import_base_data\", \"github_importer:github_import_stage_import_issues_and_diff_notes\", \"github_importer:github_import_stage_import_lfs_objects\", \"github_importer:github_import_stage_import_notes\", \"github_importer:github_import_stage_import_pull_requests\", \"github_importer:github_import_stage_import_repository\", \"gitlab_shell\", \"group_destroy\", \"group_export\", \"group_import\", \"hashed_storage:hashed_storage_migrator\", \"hashed_storage:hashed_storage_project_migrate\", \"hashed_storage:hashed_storage_project_rollback\", \"hashed_storage:hashed_storage_rollbacker\", \"import_issues_csv\", \"incident_management:clusters_applications_check_prometheus_health\", \"incident_management:incident_management_pager_duty_process_incident\", \"incident_management:incident_management_process_alert\", \"incident_management:incident_management_process_prometheus_alert\", \"invalid_gpg_signature_update\", \"irker\", \"issue_placement\", \"issue_rebalancing\", \"jira_connect:jira_connect_sync_branch\", \"jira_connect:jira_connect_sync_merge_request\", \"jira_importer:jira_import_advance_stage\", \"jira_importer:jira_import_import_issue\", \"jira_importer:jira_import_stage_finish_import\", \"jira_importer:jira_import_stage_import_attachments\", \"jira_importer:jira_import_stage_import_issues\", \"jira_importer:jira_import_stage_import_labels\", \"jira_importer:jira_import_stage_import_notes\", \"jira_importer:jira_import_stage_start_import\", \"mail_scheduler:mail_scheduler_issue_due\", \"mail_scheduler:mail_scheduler_notification_service\", \"mailers\", \"merge\", \"merge_request_cleanup_refs\", \"merge_request_mergeability_check\", \"metrics_dashboard_prune_old_annotations\", \"migrate_external_diffs\", \"namespaceless_project_destroy\", \"new_issue\", \"new_merge_request\", \"new_note\", \"object_pool:object_pool_create\", \"object_pool:object_pool_destroy\", \"object_pool:object_pool_join\", \"object_pool:object_pool_schedule_join\", \"object_storage:object_storage_background_move\", \"object_storage:object_storage_migrate_uploads\", \"package_repositories:packages_nuget_extraction\", \"pages\", \"pages_domain_ssl_renewal\", \"pages_domain_verification\", \"pages_remove\", \"pages_transfer\", \"pages_update_configuration\", \"phabricator_import_import_tasks\", \"pipeline_background:archive_trace\", \"pipeline_background:ci_build_report_result\", \"pipeline_background:ci_build_trace_chunk_flush\", \"pipeline_background:ci_daily_build_group_report_results\", \"pipeline_background:ci_pipeline_success_unlock_artifacts\", \"pipeline_background:ci_pipelines_create_artifact\", \"pipeline_background:ci_ref_delete_unlock_artifacts\", \"pipeline_cache:expire_job_cache\", \"pipeline_cache:expire_pipeline_cache\", \"pipeline_creation:create_pipeline\", \"pipeline_creation:run_pipeline_schedule\", \"pipeline_default:build_coverage\", \"pipeline_default:build_trace_sections\", \"pipeline_default:ci_create_cross_project_pipeline\", \"pipeline_default:ci_pipeline_bridge_status\", \"pipeline_default:pipeline_metrics\", \"pipeline_default:pipeline_notification\", \"pipeline_hooks:build_hooks\", \"pipeline_hooks:pipeline_hooks\", \"pipeline_processing:build_finished\", \"pipeline_processing:build_queue\", \"pipeline_processing:build_success\", \"pipeline_processing:ci_build_prepare\", \"pipeline_processing:ci_build_schedule\", \"pipeline_processing:ci_resource_groups_assign_resource_from_resource_group\", \"pipeline_processing:pipeline_process\", \"pipeline_processing:pipeline_update\", \"pipeline_processing:stage_update\", \"pipeline_processing:update_head_pipeline_for_merge_request\", \"post_receive\", \"process_commit\", \"project_cache\", \"project_daily_statistics\", \"project_destroy\", \"project_export\", \"project_service\", \"project_update_repository_storage\", \"prometheus_create_default_alerts\", \"propagate_integration\", \"propagate_service_template\", \"reactive_caching\", \"rebase\", \"remote_mirror_notification\", \"repository_check:repository_check_batch\", \"repository_check:repository_check_clear\", \"repository_check:repository_check_single_repository\", \"repository_cleanup\", \"repository_fork\", \"repository_import\", \"repository_remove_remote\", \"repository_update_remote_mirror\", \"self_monitoring_project_create\", \"self_monitoring_project_delete\", \"service_desk_email_receiver\", \"system_hook_push\", \"todos_destroyer:todos_destroyer_confidential_issue\", \"todos_destroyer:todos_destroyer_entity_leave\", \"todos_destroyer:todos_destroyer_group_private\", \"todos_destroyer:todos_destroyer_private_features\", \"todos_destroyer:todos_destroyer_project_private\", \"unassign_issuables:members_destroyer_unassign_issuables\", \"update_external_pull_requests\", \"update_highest_role\", \"update_merge_requests\", \"update_namespace_statistics:namespaces_root_statistics\", \"update_namespace_statistics:namespaces_schedule_aggregation\", \"update_project_statistics\", \"upload_checksum\", \"web_hook\", \"x509_certificate_revoke\"]"}
{"severity":"INFO","time":"2022-05-01T19:55:10.708Z","message":"Cleaning working queues"}

==> /var/log/gitlab/gitlab-rails/production.log <==
Processing by RootController#index as HTML
Redirected to http://example.org/users/sign_in
Filter chain halted as :redirect_unlogged_user rendered or redirected
Completed 302 Found in 25ms (ActiveRecord: 6.0ms | Elasticsearch: 0.0ms | Allocations: 16859)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/","format":"html","controller":"RootController","action":"index","status":302,"location":"http://example.org/users/sign_in","time":"2022-05-01T19:55:12.186Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"f026f5e1-b3de-4b0b-bdf2-7697189dde85","meta.caller_id":"RootController#index","redis_calls":12,"redis_duration_s":0.001361,"redis_read_bytes":12,"redis_write_bytes":1892,"redis_cache_calls":12,"redis_cache_duration_s":0.001361,"redis_cache_read_bytes":12,"redis_cache_write_bytes":1892,"cpu_s":1.8,"db_duration_s":0.00604,"view_duration_s":0.0,"duration_s":0.02547,"db_count":6,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/current <==
2022-05-01_19:55:12.18915 {"timestamp":"2022-05-01T19:55:12.189Z","pid":318,"message":"* Listening on unix:///var/opt/gitlab/gitlab-rails/sockets/gitlab.socket"}
2022-05-01_19:55:12.18931 {"timestamp":"2022-05-01T19:55:12.189Z","pid":318,"message":"* Listening on tcp://127.0.0.1:8080"}
2022-05-01_19:55:12.18936 {"timestamp":"2022-05-01T19:55:12.189Z","pid":318,"message":"! WARNING: Detected 3 Thread(s) started in app boot:"}
2022-05-01_19:55:12.18943 {"timestamp":"2022-05-01T19:55:12.189Z","pid":318,"message":"! #\u003cThread:0x00007fb74159e700@/opt/gitlab/embedded/lib/ruby/gems/2.6.0/gems/concurrent-ruby-1.1.6/lib/concurrent-ruby/concurrent/atomic/ruby_thread_local_var.rb:38 sleep_forever\u003e - /opt/gitlab/embedded/lib/ruby/gems/2.6.0/gems/concurrent-ruby-1.1.6/lib/concurrent-ruby/concurrent/atomic/ruby_thread_local_var.rb:40:in `pop'"}
2022-05-01_19:55:12.18949 {"timestamp":"2022-05-01T19:55:12.189Z","pid":318,"message":"! #\u003cThread:0x00007fb733e495e8@/opt/gitlab/embedded/lib/ruby/gems/2.6.0/gems/activerecord-6.0.3.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:334 sleep\u003e - /opt/gitlab/embedded/lib/ruby/gems/2.6.0/gems/activerecord-6.0.3.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:337:in `sleep'"}
2022-05-01_19:55:12.18956 {"timestamp":"2022-05-01T19:55:12.189Z","pid":318,"message":"! #\u003cThread:0x00007fb718814cb0@/opt/gitlab/embedded/lib/ruby/gems/2.6.0/gems/rack-timeout-0.5.2/lib/rack/timeout/support/scheduler.rb:73 sleep\u003e - /opt/gitlab/embedded/lib/ruby/gems/2.6.0/gems/rack-timeout-0.5.2/lib/rack/timeout/support/scheduler.rb:91:in `sleep'"}
2022-05-01_19:55:12.18962 {"timestamp":"2022-05-01T19:55:12.189Z","pid":318,"message":"Use Ctrl-C to stop"}

==> /var/log/gitlab/puma/puma_stdout.log <==
=== puma startup: 2022-05-01 19:55:12 +0000 ===

==> /var/log/gitlab/puma/puma_stderr.log <==
=== puma startup: 2022-05-01 19:55:12 +0000 ===

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:55:12.396Z: ActiveRecord connection disconnected

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:55:12.396Z","correlation_id":null,"message":"ActiveRecord connection disconnected"}

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:55:12.599Z: ActiveRecord connection established
2022-05-01T19:55:12.605Z: ActiveRecord connection established

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:55:12.599Z","correlation_id":null,"message":"ActiveRecord connection established"}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:12.618Z","pid":318,"message":"- Worker 1 (pid: 686) booted, phase: 0"}

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:55:12.622Z: ActiveRecord connection established

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:55:12.605Z","correlation_id":null,"message":"ActiveRecord connection established"}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:12.623Z","pid":318,"message":"- Worker 0 (pid: 684) booted, phase: 0"}

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:55:12.630Z: ActiveRecord connection established
2022-05-01T19:55:12.630Z: ActiveRecord connection established
2022-05-01T19:55:12.636Z: ActiveRecord connection established

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:55:12.622Z","correlation_id":null,"message":"ActiveRecord connection established"}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:12.637Z","pid":318,"message":"- Worker 3 (pid: 690) booted, phase: 0"}

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:55:12.630Z","correlation_id":null,"message":"ActiveRecord connection established"}
{"severity":"DEBUG","time":"2022-05-01T19:55:12.630Z","correlation_id":null,"message":"ActiveRecord connection established"}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:12.644Z","pid":318,"message":"- Worker 4 (pid: 692) booted, phase: 0"}
{"timestamp":"2022-05-01T19:55:12.644Z","pid":318,"message":"- Worker 2 (pid: 688) booted, phase: 0"}

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:55:12.644Z: ActiveRecord connection established

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:55:12.637Z","correlation_id":null,"message":"ActiveRecord connection established"}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:12.649Z","pid":318,"message":"- Worker 5 (pid: 694) booted, phase: 0"}

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T19:55:12.653Z: ActiveRecord connection established

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:55:12.645Z","correlation_id":null,"message":"ActiveRecord connection established"}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:12.657Z","pid":318,"message":"- Worker 6 (pid: 696) booted, phase: 0"}

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"DEBUG","time":"2022-05-01T19:55:12.653Z","correlation_id":null,"message":"ActiveRecord connection established"}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:12.664Z","pid":318,"message":"- Worker 7 (pid: 698) booted, phase: 0"}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:55:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 18ms (Views: 8.2ms | ActiveRecord: 4.1ms | Elasticsearch: 0.0ms | Allocations: 8375)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:55:16.705Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":2,"redis_duration_s":0.000688,"redis_read_bytes":2,"redis_write_bytes":359,"redis_cache_calls":2,"redis_cache_duration_s":0.000688,"redis_cache_read_bytes":2,"redis_cache_write_bytes":359,"correlation_id":"2ed9990c-6704-4472-8e19-5690336897de","cpu_s":0.02,"db_duration_s":0.00413,"view_duration_s":0.00821,"duration_s":0.0182,"db_count":1,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:55:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 22ms (Views: 9.3ms | ActiveRecord: 3.8ms | Elasticsearch: 0.0ms | Allocations: 7474)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:55:31.709Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":1,"redis_duration_s":0.000698,"redis_read_bytes":202,"redis_write_bytes":74,"redis_cache_calls":1,"redis_cache_duration_s":0.000698,"redis_cache_read_bytes":202,"redis_cache_write_bytes":74,"correlation_id":"8304e20c-a24a-425f-adb7-6c450d523102","cpu_s":0.02,"db_duration_s":0.00384,"view_duration_s":0.00928,"duration_s":0.02213,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:32.314Z","pid":318,"message":"PumaWorkerKiller: Consuming 5543.74609375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 19:55:36 +0000
Processing by HelpController#index as */*
Completed 200 OK in 427ms (Views: 402.8ms | ActiveRecord: 15.4ms | Elasticsearch: 0.0ms | Allocations: 618712)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T19:55:36.671Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"NdLge5mbPw1","meta.caller_id":"HelpController#index","redis_calls":14,"redis_duration_s":0.002105,"redis_read_bytes":214,"redis_write_bytes":2032,"redis_cache_calls":14,"redis_cache_duration_s":0.002105,"redis_cache_read_bytes":214,"redis_cache_write_bytes":2032,"queue_duration_s":0.003314,"cpu_s":0.42,"db_duration_s":0.01538,"view_duration_s":0.4028,"duration_s":0.42757,"db_count":9,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"NdLge5mbPw1","duration_ms":441,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T19:55:36Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:19:55:36 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T19:55:38Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T19:55:39Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:55:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 18ms (Views: 6.7ms | ActiveRecord: 3.8ms | Elasticsearch: 0.0ms | Allocations: 7503)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:55:46.705Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":1,"redis_duration_s":0.000475,"redis_read_bytes":202,"redis_write_bytes":74,"redis_cache_calls":1,"redis_cache_duration_s":0.000475,"redis_cache_read_bytes":202,"redis_cache_write_bytes":74,"correlation_id":"70a286e3-00e3-4861-80f9-ed029400d5f2","cpu_s":0.02,"db_duration_s":0.00379,"view_duration_s":0.00668,"duration_s":0.01785,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:55:52.315Z","pid":318,"message":"PumaWorkerKiller: Consuming 5564.66015625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:56:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1349)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:56:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"ee740de5-53c8-4e1b-b1a7-515a34bd4111","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00738,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:56:12.316Z","pid":318,"message":"PumaWorkerKiller: Consuming 5552.49609375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:56:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 12ms (Views: 2.7ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 3062)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:56:16.712Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":1,"redis_duration_s":0.000458,"redis_read_bytes":202,"redis_write_bytes":74,"redis_cache_calls":1,"redis_cache_duration_s":0.000458,"redis_cache_read_bytes":202,"redis_cache_write_bytes":74,"correlation_id":"366d7429-0c47-43cc-a5bf-e967fb7b7fa7","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.0027,"duration_s":0.01201,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:56:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1350)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:56:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"48f7748e-80e7-4602-86bb-27c5f8c59600","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00031,"duration_s":0.0097,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:56:32.316Z","pid":318,"message":"PumaWorkerKiller: Consuming 5559.43359375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 19:56:36 +0000
Processing by HelpController#index as */*
Completed 200 OK in 382ms (Views: 368.3ms | ActiveRecord: 8.8ms | Elasticsearch: 0.0ms | Allocations: 610653)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T19:56:37.133Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"TjWU7wbAgX8","meta.caller_id":"HelpController#index","redis_calls":10,"redis_duration_s":0.001518,"redis_read_bytes":1573,"redis_write_bytes":582,"redis_cache_calls":10,"redis_cache_duration_s":0.001518,"redis_cache_read_bytes":1573,"redis_cache_write_bytes":582,"queue_duration_s":0.002041,"cpu_s":0.38,"db_duration_s":0.00878,"view_duration_s":0.36835,"duration_s":0.38248,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"TjWU7wbAgX8","duration_ms":392,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T19:56:37Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:19:56:37 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:56:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1378)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:56:46.701Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d89687d5-008c-4132-8496-d3e1c8507785","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00967,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:56:52.317Z","pid":318,"message":"PumaWorkerKiller: Consuming 5590.91015625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:57:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1380)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:57:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"e5849804-1acc-41ae-b24a-95b38c2e328c","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.00977,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:57:12.318Z","pid":318,"message":"PumaWorkerKiller: Consuming 5583.0 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:57:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 13ms (Views: 2.7ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 3091)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:57:16.713Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":1,"redis_duration_s":0.000488,"redis_read_bytes":202,"redis_write_bytes":74,"redis_cache_calls":1,"redis_cache_duration_s":0.000488,"redis_cache_read_bytes":202,"redis_cache_write_bytes":74,"correlation_id":"fa7421cb-5e89-40c5-9847-2c29a82f576c","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00273,"duration_s":0.01284,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:57:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1379)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:57:31.696Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"45298151-798a-4d7c-b5b1-d3e244575a3d","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00034,"duration_s":0.01033,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:57:32.319Z","pid":318,"message":"PumaWorkerKiller: Consuming 5589.703125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 19:57:37 +0000
Processing by HelpController#index as */*
Completed 200 OK in 387ms (Views: 372.0ms | ActiveRecord: 9.8ms | Elasticsearch: 0.0ms | Allocations: 610710)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T19:57:37.618Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"pCVx4gomfo","meta.caller_id":"HelpController#index","redis_calls":10,"redis_duration_s":0.001845,"redis_read_bytes":1573,"redis_write_bytes":637,"redis_cache_calls":10,"redis_cache_duration_s":0.001845,"redis_cache_read_bytes":1573,"redis_cache_write_bytes":637,"queue_duration_s":0.005708,"cpu_s":0.39,"db_duration_s":0.00977,"view_duration_s":0.37203,"duration_s":0.38726,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"pCVx4gomfo","duration_ms":400,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T19:57:37Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:19:57:37 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:57:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 13ms (Views: 2.9ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 3120)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:57:46.714Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"redis_calls":1,"redis_duration_s":0.000517,"redis_read_bytes":202,"redis_write_bytes":74,"redis_cache_calls":1,"redis_cache_duration_s":0.000517,"redis_cache_read_bytes":202,"redis_cache_write_bytes":74,"correlation_id":"6890a3b5-43d0-4743-a6fe-f79312a19002","cpu_s":0.03,"db_duration_s":0.0,"view_duration_s":0.00289,"duration_s":0.01319,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:57:52.319Z","pid":318,"message":"PumaWorkerKiller: Consuming 5633.45703125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:58:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1407)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:58:01.700Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"2e0fbfef-9bd4-4553-b734-b2bedf990d37","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00983,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:58:12.320Z","pid":318,"message":"PumaWorkerKiller: Consuming 5624.63671875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:58:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.6ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1847)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:58:16.700Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"a01c2bf1-63b6-4b8d-a0ab-564f440773b9","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00061,"duration_s":0.01022,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:58:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1407)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:58:31.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"7c1243db-fb2a-485e-8bbe-5a2fe15bfdc3","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.00989,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:58:32.321Z","pid":318,"message":"PumaWorkerKiller: Consuming 5617.51171875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 19:58:37 +0000
Processing by HelpController#index as */*
Completed 200 OK in 211ms (Views: 208.1ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366243)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T19:58:37.916Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"OOZzNVEdata","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001119,"redis_read_bytes":1168,"redis_write_bytes":408,"redis_cache_calls":8,"redis_cache_duration_s":0.001119,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":408,"queue_duration_s":0.005731,"cpu_s":0.22,"db_duration_s":0.00037,"view_duration_s":0.20812,"duration_s":0.2115,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"OOZzNVEdata","duration_ms":221,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T19:58:37Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:19:58:37 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T19:58:38Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:58:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1408)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:58:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"14c96c34-82b2-4986-9231-4a127ff2879b","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00996,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:58:52.322Z","pid":318,"message":"PumaWorkerKiller: Consuming 5619.46484375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:59:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1408)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:59:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"edb5a05d-223a-4985-bb05-0f74223a0746","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.00979,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:59:12.322Z","pid":318,"message":"PumaWorkerKiller: Consuming 5620.65234375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:59:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1405)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:59:16.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d6eb7d06-c195-493f-8a31-675078759a16","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00955,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:59:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1407)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:59:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"34e1814a-0b04-4ded-b2e0-9c4ff8360d7f","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00965,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:59:32.323Z","pid":318,"message":"PumaWorkerKiller: Consuming 5622.375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 19:59:37 +0000
Processing by HelpController#index as */*
Completed 200 OK in 392ms (Views: 377.8ms | ActiveRecord: 8.3ms | Elasticsearch: 0.0ms | Allocations: 611499)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T19:59:38.397Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"ymWey8kAGi9","meta.caller_id":"HelpController#index","redis_calls":11,"redis_duration_s":0.001988,"redis_read_bytes":1775,"redis_write_bytes":656,"redis_cache_calls":11,"redis_cache_duration_s":0.001988,"redis_cache_read_bytes":1775,"redis_cache_write_bytes":656,"queue_duration_s":0.015353,"cpu_s":0.4,"db_duration_s":0.00827,"view_duration_s":0.37781,"duration_s":0.39222,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"ymWey8kAGi9","duration_ms":416,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T19:59:38Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:19:59:38 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 19:59:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1436)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T19:59:46.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c60ec0a7-e9f1-41e5-aee3-20b4d4bb52ce","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00976,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/redis/current <==
2022-05-01_19:59:47.02449 350:M 01 May 2022 19:59:47.024 * 10 changes in 300 seconds. Saving...
2022-05-01_19:59:47.02478 350:M 01 May 2022 19:59:47.024 * Background saving started by pid 1488
2022-05-01_19:59:47.03183 1488:C 01 May 2022 19:59:47.031 * DB saved on disk
2022-05-01_19:59:47.03216 1488:C 01 May 2022 19:59:47.032 * RDB: 0 MB of memory used by copy-on-write
2022-05-01_19:59:47.12523 350:M 01 May 2022 19:59:47.125 * Background saving terminated with success

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T19:59:52.324Z","pid":318,"message":"PumaWorkerKiller: Consuming 5657.45703125 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T19:59:56Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:00:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1436)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:00:01.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"5801464e-69e4-4a79-8412-de6f891fd9ab","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.00973,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:00:05.432Z","queue":"cronjob:stuck_ci_jobs","class":"StuckCiJobsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"fc7800a84db8bf661a9c7466","created_at":"2022-05-01T20:00:05.420Z","meta.caller_id":"Cronjob","correlation_id":"c367c5b427389ba3f8f1352bd968c852","enqueued_at":"2022-05-01T20:00:05.432Z","pid":439,"message":"StuckCiJobsWorker JID-fc7800a84db8bf661a9c7466: start","job_status":"start","scheduling_latency_s":0.000715}
{"severity":"INFO","time":"2022-05-01T20:00:05.441Z","queue":"cronjob:stuck_merge_jobs","class":"StuckMergeJobsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"547fbf0833b45f032403a411","created_at":"2022-05-01T20:00:05.439Z","meta.caller_id":"Cronjob","correlation_id":"0ab1c742de5789e908dd228e6f1ffe67","enqueued_at":"2022-05-01T20:00:05.439Z","pid":439,"message":"StuckMergeJobsWorker JID-547fbf0833b45f032403a411: start","job_status":"start","scheduling_latency_s":0.001763}
{"severity":"INFO","time":"2022-05-01T20:00:05.446Z","queue":"cronjob:pages_domain_verification_cron","class":"PagesDomainVerificationCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"2a87da54d49c987cac9afb03","created_at":"2022-05-01T20:00:05.444Z","meta.caller_id":"Cronjob","correlation_id":"1598834e7d5b4d1553e5f17a026ea221","enqueued_at":"2022-05-01T20:00:05.445Z","pid":439,"message":"PagesDomainVerificationCronWorker JID-2a87da54d49c987cac9afb03: start","job_status":"start","scheduling_latency_s":0.000666}
{"severity":"INFO","time":"2022-05-01T20:00:05.460Z","queue":"cronjob:prune_web_hook_logs","class":"PruneWebHookLogsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"2c4f1af268f55bc2c6f2f0f0","created_at":"2022-05-01T20:00:05.459Z","meta.caller_id":"Cronjob","correlation_id":"8750c9c667deb6294dee11f71aa56f6f","enqueued_at":"2022-05-01T20:00:05.459Z","pid":439,"message":"PruneWebHookLogsWorker JID-2c4f1af268f55bc2c6f2f0f0: start","job_status":"start","scheduling_latency_s":0.000842}
{"severity":"INFO","time":"2022-05-01T20:00:05.468Z","queue":"cronjob:pages_domain_ssl_renewal_cron","class":"PagesDomainSslRenewalCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"27ba0bbd9fd30fcee1fcb75c","created_at":"2022-05-01T20:00:05.466Z","meta.caller_id":"Cronjob","correlation_id":"f4e5733801661e38103e258fc0275d99","enqueued_at":"2022-05-01T20:00:05.467Z","pid":439,"message":"PagesDomainSslRenewalCronWorker JID-27ba0bbd9fd30fcee1fcb75c: start","job_status":"start","scheduling_latency_s":0.001108}
{"severity":"INFO","time":"2022-05-01T20:00:05.480Z","queue":"cronjob:repository_archive_cache","class":"RepositoryArchiveCacheWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"164755e281f415d76915376a","created_at":"2022-05-01T20:00:05.471Z","meta.caller_id":"Cronjob","correlation_id":"0285590425e5b2471e9d4bd84fd9c312","enqueued_at":"2022-05-01T20:00:05.473Z","pid":439,"message":"RepositoryArchiveCacheWorker JID-164755e281f415d76915376a: start","job_status":"start","scheduling_latency_s":0.007366}
{"severity":"INFO","time":"2022-05-01T20:00:05.486Z","queue":"cronjob:import_export_project_cleanup","class":"ImportExportProjectCleanupWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"15ea0cd9d17b13be82f8d3af","created_at":"2022-05-01T20:00:05.480Z","meta.caller_id":"Cronjob","correlation_id":"3a065b83ccdd19099849013f85f5de76","enqueued_at":"2022-05-01T20:00:05.481Z","pid":439,"message":"ImportExportProjectCleanupWorker JID-15ea0cd9d17b13be82f8d3af: start","job_status":"start","scheduling_latency_s":0.005455}

==> /var/log/gitlab/gitlab-rails/application.log <==
2022-05-01T20:00:05.522Z: StuckCiJobsWorker: Cleaning stuck builds

==> /var/log/gitlab/gitlab-rails/application_json.log <==
{"severity":"INFO","time":"2022-05-01T20:00:05.526Z","correlation_id":"c367c5b427389ba3f8f1352bd968c852","message":"StuckCiJobsWorker: Cleaning stuck builds"}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:00:05.531Z","queue":"cronjob:stuck_merge_jobs","class":"StuckMergeJobsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"547fbf0833b45f032403a411","created_at":"2022-05-01T20:00:05.439Z","meta.caller_id":"Cronjob","correlation_id":"0ab1c742de5789e908dd228e6f1ffe67","enqueued_at":"2022-05-01T20:00:05.439Z","pid":439,"message":"StuckMergeJobsWorker JID-547fbf0833b45f032403a411: done: 0.09038 sec","job_status":"done","scheduling_latency_s":0.001763,"redis_calls":2,"redis_duration_s":0.002797,"redis_read_bytes":2,"redis_write_bytes":193,"redis_queues_calls":2,"redis_queues_duration_s":0.002797,"redis_queues_read_bytes":2,"redis_queues_write_bytes":193,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.09038,"cpu_s":0.012257,"completed_at":"2022-05-01T20:00:05.531Z","db_duration_s":0.013984}
{"severity":"INFO","time":"2022-05-01T20:00:05.537Z","queue":"cronjob:pages_domain_verification_cron","class":"PagesDomainVerificationCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"2a87da54d49c987cac9afb03","created_at":"2022-05-01T20:00:05.444Z","meta.caller_id":"Cronjob","correlation_id":"1598834e7d5b4d1553e5f17a026ea221","enqueued_at":"2022-05-01T20:00:05.445Z","pid":439,"message":"PagesDomainVerificationCronWorker JID-2a87da54d49c987cac9afb03: done: 0.091592 sec","job_status":"done","scheduling_latency_s":0.000666,"redis_calls":2,"redis_duration_s":0.003319,"redis_read_bytes":2,"redis_write_bytes":207,"redis_queues_calls":2,"redis_queues_duration_s":0.003319,"redis_queues_read_bytes":2,"redis_queues_write_bytes":207,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.091592,"cpu_s":0.011628,"completed_at":"2022-05-01T20:00:05.537Z","db_duration_s":0.02096}
{"severity":"INFO","time":"2022-05-01T20:00:05.549Z","queue":"cronjob:pages_domain_ssl_renewal_cron","class":"PagesDomainSslRenewalCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"27ba0bbd9fd30fcee1fcb75c","created_at":"2022-05-01T20:00:05.466Z","meta.caller_id":"Cronjob","correlation_id":"f4e5733801661e38103e258fc0275d99","enqueued_at":"2022-05-01T20:00:05.467Z","pid":439,"message":"PagesDomainSslRenewalCronWorker JID-27ba0bbd9fd30fcee1fcb75c: done: 0.081443 sec","job_status":"done","scheduling_latency_s":0.001108,"redis_calls":2,"redis_duration_s":0.001328,"redis_read_bytes":2,"redis_write_bytes":206,"redis_queues_calls":2,"redis_queues_duration_s":0.001328,"redis_queues_read_bytes":2,"redis_queues_write_bytes":206,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.081443,"cpu_s":0.014371,"completed_at":"2022-05-01T20:00:05.549Z","db_duration_s":0.031649}
{"severity":"INFO","time":"2022-05-01T20:00:05.555Z","queue":"cronjob:repository_archive_cache","class":"RepositoryArchiveCacheWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"164755e281f415d76915376a","created_at":"2022-05-01T20:00:05.471Z","meta.caller_id":"Cronjob","correlation_id":"0285590425e5b2471e9d4bd84fd9c312","enqueued_at":"2022-05-01T20:00:05.473Z","pid":439,"message":"RepositoryArchiveCacheWorker JID-164755e281f415d76915376a: done: 0.075267 sec","job_status":"done","scheduling_latency_s":0.007366,"redis_calls":4,"redis_duration_s":0.008034,"redis_read_bytes":4,"redis_write_bytes":617,"redis_cache_calls":2,"redis_cache_duration_s":0.001667,"redis_cache_read_bytes":2,"redis_cache_write_bytes":416,"redis_queues_calls":2,"redis_queues_duration_s":0.006367,"redis_queues_read_bytes":2,"redis_queues_write_bytes":201,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.075267,"cpu_s":0.011505,"completed_at":"2022-05-01T20:00:05.555Z","db_duration_s":0.028819}
{"severity":"INFO","time":"2022-05-01T20:00:05.566Z","queue":"cronjob:import_export_project_cleanup","class":"ImportExportProjectCleanupWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"15ea0cd9d17b13be82f8d3af","created_at":"2022-05-01T20:00:05.480Z","meta.caller_id":"Cronjob","correlation_id":"3a065b83ccdd19099849013f85f5de76","enqueued_at":"2022-05-01T20:00:05.481Z","pid":439,"message":"ImportExportProjectCleanupWorker JID-15ea0cd9d17b13be82f8d3af: done: 0.079593 sec","job_status":"done","scheduling_latency_s":0.005455,"redis_calls":4,"redis_duration_s":0.001137,"redis_read_bytes":4,"redis_write_bytes":611,"redis_cache_calls":2,"redis_cache_duration_s":0.000975,"redis_cache_read_bytes":2,"redis_cache_write_bytes":405,"redis_queues_calls":2,"redis_queues_duration_s":0.000162,"redis_queues_read_bytes":2,"redis_queues_write_bytes":206,"db_count":2,"db_write_count":0,"db_cached_count":0,"duration_s":0.079593,"cpu_s":0.013565,"completed_at":"2022-05-01T20:00:05.566Z","db_duration_s":0.051007}
{"severity":"INFO","time":"2022-05-01T20:00:05.572Z","queue":"cronjob:prune_web_hook_logs","class":"PruneWebHookLogsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"2c4f1af268f55bc2c6f2f0f0","created_at":"2022-05-01T20:00:05.459Z","meta.caller_id":"Cronjob","correlation_id":"8750c9c667deb6294dee11f71aa56f6f","enqueued_at":"2022-05-01T20:00:05.459Z","pid":439,"message":"PruneWebHookLogsWorker JID-2c4f1af268f55bc2c6f2f0f0: done: 0.112009 sec","job_status":"done","scheduling_latency_s":0.000842,"redis_calls":2,"redis_duration_s":0.002509,"redis_read_bytes":2,"redis_write_bytes":196,"redis_queues_calls":2,"redis_queues_duration_s":0.002509,"redis_queues_read_bytes":2,"redis_queues_write_bytes":196,"db_count":1,"db_write_count":1,"db_cached_count":0,"duration_s":0.112009,"cpu_s":0.012651,"completed_at":"2022-05-01T20:00:05.572Z","db_duration_s":0.058758}
{"severity":"INFO","time":"2022-05-01T20:00:05.578Z","queue":"cronjob:stuck_ci_jobs","class":"StuckCiJobsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"fc7800a84db8bf661a9c7466","created_at":"2022-05-01T20:00:05.420Z","meta.caller_id":"Cronjob","correlation_id":"c367c5b427389ba3f8f1352bd968c852","enqueued_at":"2022-05-01T20:00:05.432Z","pid":439,"message":"StuckCiJobsWorker JID-fc7800a84db8bf661a9c7466: done: 0.14573 sec","job_status":"done","scheduling_latency_s":0.000715,"redis_calls":5,"redis_duration_s":0.002635,"redis_read_bytes":125,"redis_write_bytes":518,"redis_cache_calls":1,"redis_cache_duration_s":0.000114,"redis_cache_read_bytes":121,"redis_cache_write_bytes":35,"redis_queues_calls":2,"redis_queues_duration_s":0.000213,"redis_queues_read_bytes":2,"redis_queues_write_bytes":190,"redis_shared_state_calls":2,"redis_shared_state_duration_s":0.002308,"redis_shared_state_read_bytes":2,"redis_shared_state_write_bytes":293,"db_count":4,"db_write_count":0,"db_cached_count":0,"duration_s":0.14573,"cpu_s":0.023873,"completed_at":"2022-05-01T20:00:05.578Z","db_duration_s":0.043893}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:00:12.324Z","pid":318,"message":"PumaWorkerKiller: Consuming 5657.5234375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:00:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1437)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:00:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"827bbab2-4849-451f-97f1-c248241d2e96","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00988,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:00:28Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:00:29Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:00:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.6ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1877)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:00:31.696Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"5f1713f1-8d4e-4a3f-bab4-949d5d0c199c","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00061,"duration_s":0.01042,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:00:32.325Z","pid":318,"message":"PumaWorkerKiller: Consuming 5659.984375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:00:38 +0000
Processing by HelpController#index as */*
Completed 200 OK in 211ms (Views: 207.7ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366277)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:00:38.705Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"XwDrFTN4hc1","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001208,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001208,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.00492,"cpu_s":0.22,"db_duration_s":0.00033,"view_duration_s":0.20766,"duration_s":0.21117,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"XwDrFTN4hc1","duration_ms":220,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:00:38Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:00:38 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:00:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1433)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:00:46.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c71930ab-ffef-4e7a-9909-ced7ffb5a85d","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00949,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:00:52.326Z","pid":318,"message":"PumaWorkerKiller: Consuming 5657.140625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:01:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1436)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:01:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"503edece-43e0-451d-b1bd-2e7a1e7671fc","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00969,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:01:12.327Z","pid":318,"message":"PumaWorkerKiller: Consuming 5658.09375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:01:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1433)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:01:16.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"9c0eab59-37f0-485e-842b-fe494dd5c35c","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00962,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:01:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1433)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:01:31.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d98776a2-3d79-460a-9152-96d284d3ff17","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00966,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:01:32.327Z","pid":318,"message":"PumaWorkerKiller: Consuming 5658.87890625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:01:38 +0000
Processing by HelpController#index as */*
Completed 200 OK in 200ms (Views: 196.4ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366075)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:01:38.995Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"cGmIGs5z6K8","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001101,"redis_read_bytes":1168,"redis_write_bytes":408,"redis_cache_calls":8,"redis_cache_duration_s":0.001101,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":408,"queue_duration_s":0.004843,"cpu_s":0.21,"db_duration_s":0.00036,"view_duration_s":0.19644,"duration_s":0.19972,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"cGmIGs5z6K8","duration_ms":208,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:01:38Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:01:38 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:01:39Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:01:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1436)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:01:46.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d9a5f343-0342-40ea-96e7-9ba588820ec7","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00981,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:01:52.328Z","pid":318,"message":"PumaWorkerKiller: Consuming 5666.01953125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:02:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1433)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:02:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"943b1f26-8ad8-4846-b425-faf937578174","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00977,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:02:12.328Z","pid":318,"message":"PumaWorkerKiller: Consuming 5666.8671875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:02:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1433)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:02:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d126fe6a-ffc3-4bbc-97c2-730d6f99c722","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.00971,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:02:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1433)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:02:31.697Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"301949d6-4c0c-4893-a65f-e3de47f84085","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.0095,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:02:32.329Z","pid":318,"message":"PumaWorkerKiller: Consuming 5667.83984375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:02:39 +0000
Processing by HelpController#index as */*
Completed 200 OK in 380ms (Views: 365.2ms | ActiveRecord: 9.0ms | Elasticsearch: 0.0ms | Allocations: 610740)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:02:39.463Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"cQ6ijdIb8Ga","meta.caller_id":"HelpController#index","redis_calls":10,"redis_duration_s":0.001716,"redis_read_bytes":1573,"redis_write_bytes":637,"redis_cache_calls":10,"redis_cache_duration_s":0.001716,"redis_cache_read_bytes":1573,"redis_cache_write_bytes":637,"queue_duration_s":0.002027,"cpu_s":0.38,"db_duration_s":0.00903,"view_duration_s":0.36519,"duration_s":0.37979,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"cQ6ijdIb8Ga","duration_ms":389,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:02:39Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:02:39 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:02:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1462)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:02:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"ad0c04e9-544a-4ce0-9670-e655f8c3ceb0","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00972,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:02:52.330Z","pid":318,"message":"PumaWorkerKiller: Consuming 5708.4765625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:03:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1465)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:03:01.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1a4dad4b-724f-46fb-8dd6-2f7c9c392607","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.00996,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:03:12.330Z","pid":318,"message":"PumaWorkerKiller: Consuming 5709.91796875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:03:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1462)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:03:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"19d83b5b-3d86-499e-9fe4-7759c2a51dd7","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00993,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:03:26Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:03:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1465)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:03:31.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"a511069e-38e6-416f-8106-2988f155599e","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.00996,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:03:32.331Z","pid":318,"message":"PumaWorkerKiller: Consuming 5711.5 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:03:39 +0000
Processing by HelpController#index as */*
Completed 200 OK in 376ms (Views: 362.2ms | ActiveRecord: 8.4ms | Elasticsearch: 0.0ms | Allocations: 610833)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:03:39.928Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"K6SyS8pGTQ4","meta.caller_id":"HelpController#index","redis_calls":10,"redis_duration_s":0.001833,"redis_read_bytes":1573,"redis_write_bytes":637,"redis_cache_calls":10,"redis_cache_duration_s":0.001833,"redis_cache_read_bytes":1573,"redis_cache_write_bytes":637,"queue_duration_s":0.001792,"cpu_s":0.37,"db_duration_s":0.00844,"view_duration_s":0.36219,"duration_s":0.37638,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"K6SyS8pGTQ4","duration_ms":385,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:03:39Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:03:39 +0000] "GET /help HTTP/1.1" 200 90911 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:03:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:03:46.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"de7be6dd-2400-4760-89c3-17abc0f6ed6e","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.01017,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:03:52.331Z","pid":318,"message":"PumaWorkerKiller: Consuming 5748.5390625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:04:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:04:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"74038b3b-6ce7-4e6d-9f5e-1d58fcc9c973","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00997,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:04:12.332Z","pid":318,"message":"PumaWorkerKiller: Consuming 5749.0703125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:04:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1494)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:04:16.706Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d73e42d1-9e71-4b86-b41c-1dc077a753bb","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.0099,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:04:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:04:31.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"cf6bbb87-835d-48f7-9402-fb6812c2f3a6","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00996,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:04:32.333Z","pid":318,"message":"PumaWorkerKiller: Consuming 5746.27734375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:04:40 +0000
Processing by HelpController#index as */*
Completed 200 OK in 245ms (Views: 240.9ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366294)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:04:40.256Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"oUHfWFXbAe3","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.00118,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.00118,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005165,"cpu_s":0.25,"db_duration_s":0.0003,"view_duration_s":0.24089,"duration_s":0.24523,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"oUHfWFXbAe3","duration_ms":255,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:04:40Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:04:40 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:04:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:04:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"861cb8bd-d088-487c-a4ed-eb541c3f8c6b","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/redis/current <==
2022-05-01_20:04:48.06744 350:M 01 May 2022 20:04:48.067 * 10 changes in 300 seconds. Saving...
2022-05-01_20:04:48.06762 350:M 01 May 2022 20:04:48.067 * Background saving started by pid 2277
2022-05-01_20:04:48.07474 2277:C 01 May 2022 20:04:48.074 * DB saved on disk
2022-05-01_20:04:48.07504 2277:C 01 May 2022 20:04:48.075 * RDB: 0 MB of memory used by copy-on-write
2022-05-01_20:04:48.16794 350:M 01 May 2022 20:04:48.167 * Background saving terminated with success

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:04:52.333Z","pid":318,"message":"PumaWorkerKiller: Consuming 5743.37890625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:05:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1492)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:05:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"e74399e5-5f23-49d1-be86-7e301777cdc3","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.00993,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:05:12.334Z","pid":318,"message":"PumaWorkerKiller: Consuming 5743.98046875 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:05:13Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:05:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:05:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"09ceab45-3752-43bd-a496-ba85cad60532","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00977,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:05:22Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:05:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:05:31.700Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"9f7d244d-3897-4d31-af7e-80eb000265f1","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.01134,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:05:32.335Z","pid":318,"message":"PumaWorkerKiller: Consuming 5719.1796875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:05:40 +0000
Processing by HelpController#index as */*
Completed 200 OK in 264ms (Views: 259.1ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366130)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:05:40.612Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"fVwwNSuUyl5","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001328,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001328,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.007342,"cpu_s":0.27,"db_duration_s":0.00035,"view_duration_s":0.25913,"duration_s":0.26378,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"fVwwNSuUyl5","duration_ms":276,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:05:40Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:05:40 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:05:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:05:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"84a4b358-6a87-41e3-ba34-35626b912343","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00987,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:05:52.335Z","pid":318,"message":"PumaWorkerKiller: Consuming 5752.0703125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:06:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1492)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:06:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"63785715-42c8-4338-a845-d4d1928bdb1c","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.00978,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:06:12.336Z","pid":318,"message":"PumaWorkerKiller: Consuming 5752.5234375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:06:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1492)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:06:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"587c61a0-6376-4883-97e1-6314958fdf34","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00034,"duration_s":0.00986,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:06:29Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:06:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:06:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"7dcf9e80-4b71-4409-8633-dacc9df8cbd9","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00965,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:06:32.337Z","pid":318,"message":"PumaWorkerKiller: Consuming 5753.45703125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:06:40 +0000
Processing by HelpController#index as */*
Completed 200 OK in 212ms (Views: 208.3ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366303)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:06:40.911Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"Fm1F0I3FVQ2","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.00112,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.00112,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.001584,"cpu_s":0.21,"db_duration_s":0.00034,"view_duration_s":0.20832,"duration_s":0.21192,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"Fm1F0I3FVQ2","duration_ms":217,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:06:40Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:06:40 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:06:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:06:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1c9ad857-4e0b-4e4c-8d1a-9d14cc0b2717","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01035,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:06:52.338Z","pid":318,"message":"PumaWorkerKiller: Consuming 5746.7421875 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:06:59Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:07:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.4ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:07:01.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"a23acc3e-05f3-4b88-a172-56425b62ccfa","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00043,"duration_s":0.01038,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:07:12.338Z","pid":318,"message":"PumaWorkerKiller: Consuming 5747.40625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:07:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:07:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"e80e7987-bc73-4dbb-b2b2-ecb0be936cd0","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.01005,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:07:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:07:31.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"46ad80c2-70d5-4f76-aa27-733db176df53","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00023,"duration_s":0.0097,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:07:32.339Z","pid":318,"message":"PumaWorkerKiller: Consuming 5747.9453125 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:07:37Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:07:40 +0000
Processing by HelpController#index as */*
Completed 200 OK in 240ms (Views: 236.2ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366083)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:07:41.237Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"gqmkGlfhat1","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001109,"redis_read_bytes":1168,"redis_write_bytes":408,"redis_cache_calls":8,"redis_cache_duration_s":0.001109,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":408,"queue_duration_s":0.005406,"cpu_s":0.25,"db_duration_s":0.00035,"view_duration_s":0.23624,"duration_s":0.2396,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"gqmkGlfhat1","duration_ms":249,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:07:41Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:07:41 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:07:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:07:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"9c3d94e3-a420-4630-81b6-19c8239929bc","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01041,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:07:52.340Z","pid":318,"message":"PumaWorkerKiller: Consuming 5777.91796875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:08:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:08:01.708Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"7c3b5aee-0654-4fe1-9fee-7f163f49a854","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.00987,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:08:12.340Z","pid":318,"message":"PumaWorkerKiller: Consuming 5778.71875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:08:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:08:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d58f0569-affd-4e33-b56b-65ad79932f6f","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00974,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:08:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1491)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:08:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"3b90d2af-5767-4e78-be49-a3a57882c910","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00023,"duration_s":0.00985,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:08:32.341Z","pid":318,"message":"PumaWorkerKiller: Consuming 5779.87109375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:08:41 +0000
Processing by HelpController#index as */*
Completed 200 OK in 376ms (Views: 362.3ms | ActiveRecord: 8.7ms | Elasticsearch: 0.0ms | Allocations: 610709)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:08:41.686Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"eupXV1hafY","meta.caller_id":"HelpController#index","redis_calls":10,"redis_duration_s":0.001817,"redis_read_bytes":1573,"redis_write_bytes":637,"redis_cache_calls":10,"redis_cache_duration_s":0.001817,"redis_cache_read_bytes":1573,"redis_cache_write_bytes":637,"queue_duration_s":0.001855,"cpu_s":0.37,"db_duration_s":0.00867,"view_duration_s":0.36232,"duration_s":0.37635,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"eupXV1hafY","duration_ms":385,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:08:41Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:08:41 +0000] "GET /help HTTP/1.1" 200 90911 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:08:41Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:08:41Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:08:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:08:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"28726f72-7f92-434b-88b1-fe28d345f470","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.00974,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:08:52.342Z","pid":318,"message":"PumaWorkerKiller: Consuming 5820.19140625 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:08:59Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:09:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1521)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:09:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d7903a84-7d2b-4719-90b3-c7a590bb46b2","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00032,"duration_s":0.00984,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:09:12.343Z","pid":318,"message":"PumaWorkerKiller: Consuming 5820.27734375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:09:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:09:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"eba1d93e-ac9f-4d9f-8d39-598fc5e99559","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00995,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:09:19Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:09:21Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:09:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:09:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c062e83e-5a62-4aa2-950c-d66329612b62","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00023,"duration_s":0.00992,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:09:32.344Z","pid":318,"message":"PumaWorkerKiller: Consuming 5816.265625 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:09:32Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:09:32Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:09:41 +0000
Processing by HelpController#index as */*
Completed 200 OK in 210ms (Views: 206.5ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366115)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:09:41.972Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"3Bke1NWlSJ2","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001255,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001255,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005474,"cpu_s":0.22,"db_duration_s":0.00034,"view_duration_s":0.20648,"duration_s":0.21002,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"3Bke1NWlSJ2","duration_ms":219,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:09:41Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:09:41 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:09:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:09:46.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"21ed98e6-2ed2-471f-b873-78458d6c2ee0","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.01024,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/redis/current <==
2022-05-01_20:09:49.09181 350:M 01 May 2022 20:09:49.091 * 10 changes in 300 seconds. Saving...
2022-05-01_20:09:49.09212 350:M 01 May 2022 20:09:49.092 * Background saving started by pid 3006
2022-05-01_20:09:49.09873 3006:C 01 May 2022 20:09:49.098 * DB saved on disk
2022-05-01_20:09:49.09908 3006:C 01 May 2022 20:09:49.099 * RDB: 1 MB of memory used by copy-on-write
2022-05-01_20:09:49.19318 350:M 01 May 2022 20:09:49.193 * Background saving terminated with success

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:09:52.344Z","pid":318,"message":"PumaWorkerKiller: Consuming 5826.484375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:10:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:10:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"150fa3b5-87d7-44ba-9e4c-e7755d5d2eaa","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:10:02.966Z","queue":"cronjob:pages_domain_ssl_renewal_cron","class":"PagesDomainSslRenewalCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"1ac968820226f9b8e2333553","created_at":"2022-05-01T20:10:02.965Z","meta.caller_id":"Cronjob","correlation_id":"76a76dbe19ee20ae8fc49158d54b7b3d","enqueued_at":"2022-05-01T20:10:02.966Z","pid":439,"message":"PagesDomainSslRenewalCronWorker JID-1ac968820226f9b8e2333553: start","job_status":"start","scheduling_latency_s":0.000642}
{"severity":"INFO","time":"2022-05-01T20:10:02.991Z","queue":"cronjob:pages_domain_ssl_renewal_cron","class":"PagesDomainSslRenewalCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"1ac968820226f9b8e2333553","created_at":"2022-05-01T20:10:02.965Z","meta.caller_id":"Cronjob","correlation_id":"76a76dbe19ee20ae8fc49158d54b7b3d","enqueued_at":"2022-05-01T20:10:02.966Z","pid":439,"message":"PagesDomainSslRenewalCronWorker JID-1ac968820226f9b8e2333553: done: 0.024454 sec","job_status":"done","scheduling_latency_s":0.000642,"redis_calls":3,"redis_duration_s":0.000511,"redis_read_bytes":205,"redis_write_bytes":316,"redis_cache_calls":1,"redis_cache_duration_s":0.000298,"redis_cache_read_bytes":203,"redis_cache_write_bytes":110,"redis_queues_calls":2,"redis_queues_duration_s":0.000213,"redis_queues_read_bytes":2,"redis_queues_write_bytes":206,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.024454,"cpu_s":0.00844,"completed_at":"2022-05-01T20:10:02.991Z","db_duration_s":0.004962}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:10:12.345Z","pid":318,"message":"PumaWorkerKiller: Consuming 5827.1484375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:10:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1521)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:10:16.738Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"f0c9c793-7cfe-4b94-871a-39b4bb495856","cpu_s":0.05,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.00981,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:10:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:10:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"9a9312ce-9367-49f1-b2ff-aab647eddb8f","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:10:32.346Z","pid":318,"message":"PumaWorkerKiller: Consuming 5826.26953125 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:10:40Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:10:42 +0000
Processing by HelpController#index as */*
Completed 200 OK in 198ms (Views: 194.2ms | ActiveRecord: 0.5ms | Elasticsearch: 0.0ms | Allocations: 366134)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:10:42.267Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"pUp0h8dFni4","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001098,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001098,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.002332,"cpu_s":0.2,"db_duration_s":0.00048,"view_duration_s":0.19422,"duration_s":0.19798,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"pUp0h8dFni4","duration_ms":204,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:10:42Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:10:42 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:10:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:10:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"649e9c2c-90c5-4ffa-baa4-a9c7d8bde99b","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00985,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:10:52.347Z","pid":318,"message":"PumaWorkerKiller: Consuming 5827.1640625 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:10:54Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:11:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:11:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"da4a220a-5864-4b59-a0cf-cc4586b78728","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00976,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:11:02Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:11:02Z","wrapper":353}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:11:12.347Z","pid":318,"message":"PumaWorkerKiller: Consuming 5827.7734375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:11:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:11:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"3e0c4d5a-f2cd-4913-b5c7-c8f4f63fef33","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00979,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:11:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:11:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d77024a1-b453-4578-b228-66ee24763d6b","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00978,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:11:32.348Z","pid":318,"message":"PumaWorkerKiller: Consuming 5828.6484375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:11:42 +0000
Processing by HelpController#index as */*
Completed 200 OK in 214ms (Views: 210.6ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366289)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:11:42.575Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"iPqanN8zyf8","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001148,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001148,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.001974,"cpu_s":0.22,"db_duration_s":0.00042,"view_duration_s":0.21063,"duration_s":0.21443,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"iPqanN8zyf8","duration_ms":220,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:11:42Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:11:42 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:11:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:11:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"9d283274-7f19-4dbd-9dbd-6446ad89e306","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.01008,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:11:46Z","wrapper":353}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:11:52.349Z","pid":318,"message":"PumaWorkerKiller: Consuming 5824.921875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:12:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:12:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"76e68954-5c06-4459-a5dc-8bdcf5804218","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.01015,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:12:12.350Z","pid":318,"message":"PumaWorkerKiller: Consuming 5824.4296875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:12:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:12:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"ec9b43de-bb7d-46d5-a755-a397bcca2cd7","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00023,"duration_s":0.00982,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:12:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:12:31.696Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c9cf7203-0f94-43f2-8418-d071774318a1","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.01121,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:12:32.350Z","pid":318,"message":"PumaWorkerKiller: Consuming 5793.796875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:12:42 +0000
Processing by HelpController#index as */*
Completed 200 OK in 207ms (Views: 203.3ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366134)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:12:42.874Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"a3VGlnStnCa","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001109,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001109,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.004937,"cpu_s":0.21,"db_duration_s":0.00034,"view_duration_s":0.20328,"duration_s":0.20673,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"a3VGlnStnCa","duration_ms":215,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:12:42Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:12:42 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:12:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1523)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:12:46.725Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"a9a857c7-de24-4e5c-ad6d-0ccfd504a82a","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.0099,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:12:52.351Z","pid":318,"message":"PumaWorkerKiller: Consuming 5823.9609375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:13:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:13:01.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"7420f528-a159-490d-a121-b06066993747","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00988,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:13:12.352Z","pid":318,"message":"PumaWorkerKiller: Consuming 5824.1796875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:13:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:13:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1ebb56d1-3910-4986-aa9c-5616fb93fd4f","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:13:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:13:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"7db3077d-0fd1-44a1-869b-ad03b7a1b986","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00974,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:13:32.353Z","pid":318,"message":"PumaWorkerKiller: Consuming 5825.5 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:13:42 +0000
Processing by HelpController#index as */*
Completed 200 OK in 237ms (Views: 233.6ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366151)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:13:43.195Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"4Yrbj5jO0Z5","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001217,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001217,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.001984,"cpu_s":0.24,"db_duration_s":0.0003,"view_duration_s":0.23355,"duration_s":0.23716,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"4Yrbj5jO0Z5","duration_ms":243,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:13:43Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:13:43 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:13:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:13:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"bdb54c78-f074-410f-8f2b-c6443e826c88","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00031,"duration_s":0.00989,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:13:52.353Z","pid":318,"message":"PumaWorkerKiller: Consuming 5853.10546875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:14:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:14:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"aab3ff01-dd81-4c88-9c12-749208a302ee","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00995,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:14:12.354Z","pid":318,"message":"PumaWorkerKiller: Consuming 5853.3828125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:14:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:14:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"e251181c-3402-42e9-9df9-66afa39f297e","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:14:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:14:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"68d3e5ad-527d-4e13-992b-6dfa9ee8f219","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00988,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:14:32.355Z","pid":318,"message":"PumaWorkerKiller: Consuming 5853.9609375 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:14:36Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:14:43 +0000
Processing by HelpController#index as */*
Completed 200 OK in 211ms (Views: 207.3ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366379)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:14:43.499Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"BUqjhPrfbf6","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001122,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001122,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.012757,"cpu_s":0.22,"db_duration_s":0.00041,"view_duration_s":0.20726,"duration_s":0.21095,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"BUqjhPrfbf6","duration_ms":227,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:14:43Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:14:43 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:14:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:14:46.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1558b5c2-1cd5-438a-acdf-177ca29dc391","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00975,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/redis/current <==
2022-05-01_20:14:50.06988 350:M 01 May 2022 20:14:50.069 * 10 changes in 300 seconds. Saving...
2022-05-01_20:14:50.07013 350:M 01 May 2022 20:14:50.070 * Background saving started by pid 3732
2022-05-01_20:14:50.07313 3732:C 01 May 2022 20:14:50.073 * DB saved on disk
2022-05-01_20:14:50.07346 3732:C 01 May 2022 20:14:50.073 * RDB: 0 MB of memory used by copy-on-write
2022-05-01_20:14:50.17072 350:M 01 May 2022 20:14:50.170 * Background saving terminated with success

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:14:52.356Z","pid":318,"message":"PumaWorkerKiller: Consuming 5876.22265625 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:14:59Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:15:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:15:01.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"b04dca98-1923-43ce-b69f-4eaf1922dbe0","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01114,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:15:12.357Z","pid":318,"message":"PumaWorkerKiller: Consuming 5852.80859375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:15:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:15:16.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"bef0c64f-e2d0-441b-bd79-6f8f18ef3da5","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.0103,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:15:26.617Z","queue":"cronjob:pages_domain_verification_cron","class":"PagesDomainVerificationCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"1ef5441cb21bb8dccc765466","created_at":"2022-05-01T20:15:26.615Z","meta.caller_id":"Cronjob","correlation_id":"74b32da8d2e3ce9c66d294c21dac754d","enqueued_at":"2022-05-01T20:15:26.616Z","pid":439,"message":"PagesDomainVerificationCronWorker JID-1ef5441cb21bb8dccc765466: start","job_status":"start","scheduling_latency_s":0.000802}
{"severity":"INFO","time":"2022-05-01T20:15:26.621Z","queue":"cronjob:import_stuck_project_import_jobs","class":"Gitlab::Import::StuckProjectImportJobsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"2b42f75a98f1510ac7d70525","created_at":"2022-05-01T20:15:26.620Z","meta.caller_id":"Cronjob","correlation_id":"c6b4c02af04a9728cf27c7c47e7d2f55","enqueued_at":"2022-05-01T20:15:26.620Z","pid":439,"message":"Gitlab::Import::StuckProjectImportJobsWorker JID-2b42f75a98f1510ac7d70525: start","job_status":"start","scheduling_latency_s":0.000879}
{"severity":"INFO","time":"2022-05-01T20:15:26.644Z","queue":"cronjob:pages_domain_verification_cron","class":"PagesDomainVerificationCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"1ef5441cb21bb8dccc765466","created_at":"2022-05-01T20:15:26.615Z","meta.caller_id":"Cronjob","correlation_id":"74b32da8d2e3ce9c66d294c21dac754d","enqueued_at":"2022-05-01T20:15:26.616Z","pid":439,"message":"PagesDomainVerificationCronWorker JID-1ef5441cb21bb8dccc765466: done: 0.027502 sec","job_status":"done","scheduling_latency_s":0.000802,"redis_calls":3,"redis_duration_s":0.01995,"redis_read_bytes":205,"redis_write_bytes":317,"redis_cache_calls":1,"redis_cache_duration_s":0.00095,"redis_cache_read_bytes":203,"redis_cache_write_bytes":110,"redis_queues_calls":2,"redis_queues_duration_s":0.019,"redis_queues_read_bytes":2,"redis_queues_write_bytes":207,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.027502,"cpu_s":0.003736,"completed_at":"2022-05-01T20:15:26.644Z","db_duration_s":0.001819}
{"severity":"INFO","time":"2022-05-01T20:15:26.646Z","queue":"cronjob:schedule_migrate_external_diffs","class":"ScheduleMigrateExternalDiffsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"b18ba8460e5e1d17b0fd6273","created_at":"2022-05-01T20:15:26.643Z","meta.caller_id":"Cronjob","correlation_id":"a2cb2d6e94b166adafeb5f72275f188e","enqueued_at":"2022-05-01T20:15:26.645Z","pid":439,"message":"ScheduleMigrateExternalDiffsWorker JID-b18ba8460e5e1d17b0fd6273: start","job_status":"start","scheduling_latency_s":0.001115}
{"severity":"INFO","time":"2022-05-01T20:15:26.665Z","queue":"cronjob:schedule_migrate_external_diffs","class":"ScheduleMigrateExternalDiffsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"b18ba8460e5e1d17b0fd6273","created_at":"2022-05-01T20:15:26.643Z","meta.caller_id":"Cronjob","correlation_id":"a2cb2d6e94b166adafeb5f72275f188e","enqueued_at":"2022-05-01T20:15:26.645Z","pid":439,"message":"ScheduleMigrateExternalDiffsWorker JID-b18ba8460e5e1d17b0fd6273: done: 0.01903 sec","job_status":"done","scheduling_latency_s":0.001115,"redis_calls":4,"redis_duration_s":0.001045,"redis_read_bytes":4,"redis_write_bytes":521,"redis_queues_calls":2,"redis_queues_duration_s":0.000626,"redis_queues_read_bytes":2,"redis_queues_write_bytes":208,"redis_shared_state_calls":2,"redis_shared_state_duration_s":0.000419,"redis_shared_state_read_bytes":2,"redis_shared_state_write_bytes":313,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.01903,"cpu_s":0.010974,"completed_at":"2022-05-01T20:15:26.665Z","db_duration_s":0.000622}
{"severity":"INFO","time":"2022-05-01T20:15:26.673Z","queue":"cronjob:import_stuck_project_import_jobs","class":"Gitlab::Import::StuckProjectImportJobsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"2b42f75a98f1510ac7d70525","created_at":"2022-05-01T20:15:26.620Z","meta.caller_id":"Cronjob","correlation_id":"c6b4c02af04a9728cf27c7c47e7d2f55","enqueued_at":"2022-05-01T20:15:26.620Z","pid":439,"message":"Gitlab::Import::StuckProjectImportJobsWorker JID-2b42f75a98f1510ac7d70525: done: 0.051357 sec","job_status":"done","scheduling_latency_s":0.000879,"redis_calls":2,"redis_duration_s":0.004172,"redis_read_bytes":2,"redis_write_bytes":209,"redis_queues_calls":2,"redis_queues_duration_s":0.004172,"redis_queues_read_bytes":2,"redis_queues_write_bytes":209,"db_count":2,"db_write_count":0,"db_cached_count":0,"duration_s":0.051357,"cpu_s":0.011168,"completed_at":"2022-05-01T20:15:26.673Z","db_duration_s":0.00814}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:15:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:15:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"453da430-e408-4f56-8a72-a42344fe7fcf","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.01042,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:15:32.357Z","pid":318,"message":"PumaWorkerKiller: Consuming 5851.85546875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:15:43 +0000
Processing by HelpController#index as */*
Completed 200 OK in 239ms (Views: 235.9ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366091)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:15:43.831Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"Cq6LxHeTKl4","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001007,"redis_read_bytes":1168,"redis_write_bytes":408,"redis_cache_calls":8,"redis_cache_duration_s":0.001007,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":408,"queue_duration_s":0.005696,"cpu_s":0.25,"db_duration_s":0.00032,"view_duration_s":0.23588,"duration_s":0.23905,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"Cq6LxHeTKl4","duration_ms":248,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:15:43Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:15:43 +0000] "GET /help HTTP/1.1" 200 90911 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:15:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:15:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"8c8df94c-c6e0-4563-9ec7-adff31524dde","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00987,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:15:52.358Z","pid":318,"message":"PumaWorkerKiller: Consuming 5881.98046875 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:15:54Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:16:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:16:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"29eb776c-dcb7-4c78-ba97-b825aba5006f","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00973,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:16:12.359Z","pid":318,"message":"PumaWorkerKiller: Consuming 5882.21875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:16:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:16:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"fe6aedfd-1087-420e-b587-343abfafd122","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00977,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:16:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:16:31.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"f69aaa5e-fe2a-4774-827f-e3aba2c8ab27","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00972,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:16:32.359Z","pid":318,"message":"PumaWorkerKiller: Consuming 5883.09765625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:16:43 +0000
Processing by HelpController#index as */*
Completed 200 OK in 205ms (Views: 202.0ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366129)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:16:44.116Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"0goCmruXf1a","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001174,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001174,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005069,"cpu_s":0.21,"db_duration_s":0.00035,"view_duration_s":0.20198,"duration_s":0.20544,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"0goCmruXf1a","duration_ms":214,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:16:44Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:16:44 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:16:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:16:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1818fd5f-624c-4cf3-b881-c0688775edd5","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00994,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:16:52.360Z","pid":318,"message":"PumaWorkerKiller: Consuming 5916.3671875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:17:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:17:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"3afc8afc-1a78-4eef-a7a6-3ee818101758","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00977,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:17:04Z","wrapper":353}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:17:08.667Z","queue":"cronjob:ci_archive_traces_cron","class":"Ci::ArchiveTracesCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"89dd178ae51c85060d4625b3","created_at":"2022-05-01T20:17:08.666Z","meta.caller_id":"Cronjob","correlation_id":"e6be94dfddece654c74dc86be40e3088","enqueued_at":"2022-05-01T20:17:08.667Z","pid":439,"message":"Ci::ArchiveTracesCronWorker JID-89dd178ae51c85060d4625b3: start","job_status":"start","scheduling_latency_s":0.000618}
{"severity":"INFO","time":"2022-05-01T20:17:08.696Z","queue":"cronjob:ci_archive_traces_cron","class":"Ci::ArchiveTracesCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"89dd178ae51c85060d4625b3","created_at":"2022-05-01T20:17:08.666Z","meta.caller_id":"Cronjob","correlation_id":"e6be94dfddece654c74dc86be40e3088","enqueued_at":"2022-05-01T20:17:08.667Z","pid":439,"message":"Ci::ArchiveTracesCronWorker JID-89dd178ae51c85060d4625b3: done: 0.028754 sec","job_status":"done","scheduling_latency_s":0.000618,"redis_calls":3,"redis_duration_s":0.0005239999999999999,"redis_read_bytes":205,"redis_write_bytes":309,"redis_cache_calls":1,"redis_cache_duration_s":0.000273,"redis_cache_read_bytes":203,"redis_cache_write_bytes":110,"redis_queues_calls":2,"redis_queues_duration_s":0.000251,"redis_queues_read_bytes":2,"redis_queues_write_bytes":199,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.028754,"cpu_s":0.008714,"completed_at":"2022-05-01T20:17:08.696Z","db_duration_s":0.008885}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:17:12.361Z","pid":318,"message":"PumaWorkerKiller: Consuming 5916.74609375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:17:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:17:16.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"05f52234-1297-49bb-8ed6-96b8cae53055","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.01061,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:17:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:17:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"988f8760-0032-4c3f-9ef4-f45f696249a0","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.0103,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:17:32.362Z","pid":318,"message":"PumaWorkerKiller: Consuming 5898.7109375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:17:44 +0000
Processing by HelpController#index as */*
Completed 200 OK in 206ms (Views: 202.4ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366126)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:17:44.409Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"OW4VCgO8s61","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.000946,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.000946,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.003211,"cpu_s":0.21,"db_duration_s":0.00029,"view_duration_s":0.20236,"duration_s":0.20596,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"OW4VCgO8s61","duration_ms":213,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:17:44Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:17:44 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:17:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:17:46.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"7b1201b0-38ca-4624-8a6f-42c903b36408","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00988,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:17:52.363Z","pid":318,"message":"PumaWorkerKiller: Consuming 5895.51171875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:18:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:18:01.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"85ec96f7-e6af-457a-8975-bbb982708a0c","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01072,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:18:12.363Z","pid":318,"message":"PumaWorkerKiller: Consuming 5889.77734375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:18:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:18:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c876349f-744e-4327-8666-a95e8bc3772d","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00983,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:18:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:18:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"b1fb2921-b933-4609-9cbb-fbbbc5e243da","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.0097,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:18:32.364Z","pid":318,"message":"PumaWorkerKiller: Consuming 5890.796875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:18:44 +0000
Processing by HelpController#index as */*
Completed 200 OK in 209ms (Views: 205.3ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366114)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:18:44.701Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"zstVW68YKV9","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001261,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001261,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.004921,"cpu_s":0.21,"db_duration_s":0.00037,"view_duration_s":0.20535,"duration_s":0.20883,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"zstVW68YKV9","duration_ms":217,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:18:44Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:18:44 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:18:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:18:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1fb971b0-05de-4ec6-bcce-13834e5b37a8","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.00997,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:18:52.365Z","pid":318,"message":"PumaWorkerKiller: Consuming 5894.20703125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:19:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:19:01.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"599f6314-fb73-4b23-a3da-3bcff7ec988b","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00023,"duration_s":0.00966,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:19:09.453Z","queue":"cronjob:pipeline_schedule","class":"PipelineScheduleWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"8b50199636385c1badbefb9c","created_at":"2022-05-01T20:19:09.452Z","meta.caller_id":"Cronjob","correlation_id":"50e9d12b86aad588b7d9d1ad6f86f202","enqueued_at":"2022-05-01T20:19:09.453Z","pid":439,"message":"PipelineScheduleWorker JID-8b50199636385c1badbefb9c: start","job_status":"start","scheduling_latency_s":0.000662}
{"severity":"INFO","time":"2022-05-01T20:19:09.496Z","queue":"cronjob:pipeline_schedule","class":"PipelineScheduleWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"8b50199636385c1badbefb9c","created_at":"2022-05-01T20:19:09.452Z","meta.caller_id":"Cronjob","correlation_id":"50e9d12b86aad588b7d9d1ad6f86f202","enqueued_at":"2022-05-01T20:19:09.453Z","pid":439,"message":"PipelineScheduleWorker JID-8b50199636385c1badbefb9c: done: 0.042953 sec","job_status":"done","scheduling_latency_s":0.000662,"redis_calls":3,"redis_duration_s":0.000501,"redis_read_bytes":205,"redis_write_bytes":304,"redis_cache_calls":1,"redis_cache_duration_s":0.000211,"redis_cache_read_bytes":203,"redis_cache_write_bytes":110,"redis_queues_calls":2,"redis_queues_duration_s":0.00029,"redis_queues_read_bytes":2,"redis_queues_write_bytes":194,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.042953,"cpu_s":0.009164,"completed_at":"2022-05-01T20:19:09.496Z","db_duration_s":0.008234}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:19:12.366Z","pid":318,"message":"PumaWorkerKiller: Consuming 5894.625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:19:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:19:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"0f7b46d6-13f0-4495-96bb-fd55b7fe1573","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.0097,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:19:16Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:19:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:19:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"722a2cd4-407b-4000-a7b3-22714471c0d9","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00985,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:19:32.366Z","pid":318,"message":"PumaWorkerKiller: Consuming 5895.3046875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:19:44 +0000
Processing by HelpController#index as */*
Completed 200 OK in 210ms (Views: 206.4ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366149)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:19:44.996Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"Ih2NyzpG984","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001143,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001143,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.001636,"cpu_s":0.21,"db_duration_s":0.00035,"view_duration_s":0.20642,"duration_s":0.21013,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"Ih2NyzpG984","duration_ms":216,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:19:44Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:19:44 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:19:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:19:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"48faafe7-7390-461d-83f6-fa9c4774993c","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.01001,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/redis/current <==
2022-05-01_20:19:51.02186 350:M 01 May 2022 20:19:51.021 * 10 changes in 300 seconds. Saving...
2022-05-01_20:19:51.02214 350:M 01 May 2022 20:19:51.022 * Background saving started by pid 4459
2022-05-01_20:19:51.02896 4459:C 01 May 2022 20:19:51.028 * DB saved on disk
2022-05-01_20:19:51.02932 4459:C 01 May 2022 20:19:51.029 * RDB: 1 MB of memory used by copy-on-write
2022-05-01_20:19:51.12324 350:M 01 May 2022 20:19:51.123 * Background saving terminated with success

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:19:52.367Z","pid":318,"message":"PumaWorkerKiller: Consuming 5877.2109375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:20:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:20:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"b70a4047-1372-4599-83e1-c005e0be78c7","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00979,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:20:03Z","wrapper":353}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:20:12.368Z","pid":318,"message":"PumaWorkerKiller: Consuming 5877.765625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:20:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:20:16.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"18444b42-8096-467a-8ea4-3e22ce5edfcd","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00966,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:20:17.549Z","queue":"cronjob:repository_check_dispatch","class":"RepositoryCheck::DispatchWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"9e8d69635c5ec620200f62e9","created_at":"2022-05-01T20:20:17.547Z","meta.caller_id":"Cronjob","correlation_id":"2de5b93fe2c7958f9a395b6a3e57e93e","enqueued_at":"2022-05-01T20:20:17.548Z","pid":439,"message":"RepositoryCheck::DispatchWorker JID-9e8d69635c5ec620200f62e9: start","job_status":"start","scheduling_latency_s":0.000741}
{"severity":"INFO","time":"2022-05-01T20:20:17.558Z","queue":"cronjob:pages_domain_ssl_renewal_cron","class":"PagesDomainSslRenewalCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"fd213a34af5e4485d4f49769","created_at":"2022-05-01T20:20:17.556Z","meta.caller_id":"Cronjob","correlation_id":"a35a5410055195ea0abb74195d8a7919","enqueued_at":"2022-05-01T20:20:17.557Z","pid":439,"message":"PagesDomainSslRenewalCronWorker JID-fd213a34af5e4485d4f49769: start","job_status":"start","scheduling_latency_s":0.00143}
{"severity":"INFO","time":"2022-05-01T20:20:17.579Z","queue":"cronjob:pages_domain_ssl_renewal_cron","class":"PagesDomainSslRenewalCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"fd213a34af5e4485d4f49769","created_at":"2022-05-01T20:20:17.556Z","meta.caller_id":"Cronjob","correlation_id":"a35a5410055195ea0abb74195d8a7919","enqueued_at":"2022-05-01T20:20:17.557Z","pid":439,"message":"PagesDomainSslRenewalCronWorker JID-fd213a34af5e4485d4f49769: done: 0.021072 sec","job_status":"done","scheduling_latency_s":0.00143,"redis_calls":2,"redis_duration_s":0.000318,"redis_read_bytes":2,"redis_write_bytes":206,"redis_queues_calls":2,"redis_queues_duration_s":0.000318,"redis_queues_read_bytes":2,"redis_queues_write_bytes":206,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.021072,"cpu_s":0.005127,"completed_at":"2022-05-01T20:20:17.579Z","db_duration_s":0.002633}

==> /var/log/gitlab/gitaly/current <==
{"correlation_id":"2de5b93fe2c7958f9a395b6a3e57e93e","grpc.code":"OK","grpc.meta.auth_version":"v2","grpc.meta.client_name":"gitlab-sidekiq","grpc.meta.deadline_type":"unknown","grpc.method":"Check","grpc.request.deadline":"2022-05-01T20:20:27Z","grpc.request.fullMethod":"/grpc.health.v1.Health/Check","grpc.service":"grpc.health.v1.Health","grpc.start_time":"2022-05-01T20:20:17Z","grpc.time_ms":0.017,"level":"info","msg":"finished unary call with code OK","peer.address":"@","pid":372,"span.kind":"server","system":"grpc","time":"2022-05-01T20:20:17.583Z"}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:20:17.585Z","class":"RepositoryCheck::BatchWorker","retry":0,"queue":"repository_check:repository_check_batch","version":0,"queue_namespace":"repository_check","jid":"fb492f135ef7564f4cc31b30","created_at":"2022-05-01T20:20:17.583Z","meta.caller_id":"RepositoryCheck::DispatchWorker","correlation_id":"2de5b93fe2c7958f9a395b6a3e57e93e","enqueued_at":"2022-05-01T20:20:17.584Z","pid":439,"message":"RepositoryCheck::BatchWorker JID-fb492f135ef7564f4cc31b30: start","job_status":"start","scheduling_latency_s":0.000578}
{"severity":"INFO","time":"2022-05-01T20:20:17.589Z","queue":"cronjob:repository_check_dispatch","class":"RepositoryCheck::DispatchWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"9e8d69635c5ec620200f62e9","created_at":"2022-05-01T20:20:17.547Z","meta.caller_id":"Cronjob","correlation_id":"2de5b93fe2c7958f9a395b6a3e57e93e","enqueued_at":"2022-05-01T20:20:17.548Z","pid":439,"message":"RepositoryCheck::DispatchWorker JID-9e8d69635c5ec620200f62e9: done: 0.04093 sec","job_status":"done","scheduling_latency_s":0.000741,"gitaly_calls":1,"gitaly_duration_s":0.005258,"redis_calls":9,"redis_duration_s":0.012801,"redis_read_bytes":411,"redis_write_bytes":1996,"redis_cache_calls":4,"redis_cache_duration_s":0.011779,"redis_cache_read_bytes":349,"redis_cache_write_bytes":582,"redis_queues_calls":3,"redis_queues_duration_s":0.000491,"redis_queues_read_bytes":60,"redis_queues_write_bytes":1113,"redis_shared_state_calls":2,"redis_shared_state_duration_s":0.000531,"redis_shared_state_read_bytes":2,"redis_shared_state_write_bytes":301,"db_count":2,"db_write_count":0,"db_cached_count":0,"duration_s":0.04093,"cpu_s":0.016421,"completed_at":"2022-05-01T20:20:17.589Z","db_duration_s":0.001983}
{"severity":"INFO","time":"2022-05-01T20:20:17.605Z","class":"RepositoryCheck::BatchWorker","retry":0,"queue":"repository_check:repository_check_batch","version":0,"queue_namespace":"repository_check","jid":"fb492f135ef7564f4cc31b30","created_at":"2022-05-01T20:20:17.583Z","meta.caller_id":"RepositoryCheck::DispatchWorker","correlation_id":"2de5b93fe2c7958f9a395b6a3e57e93e","enqueued_at":"2022-05-01T20:20:17.584Z","pid":439,"message":"RepositoryCheck::BatchWorker JID-fb492f135ef7564f4cc31b30: done: 0.020409 sec","job_status":"done","scheduling_latency_s":0.000578,"redis_calls":5,"redis_duration_s":0.000469,"redis_read_bytes":5,"redis_write_bytes":556,"redis_cache_calls":1,"redis_cache_duration_s":7.7e-05,"redis_cache_read_bytes":1,"redis_cache_write_bytes":37,"redis_queues_calls":2,"redis_queues_duration_s":0.000141,"redis_queues_read_bytes":2,"redis_queues_write_bytes":208,"redis_shared_state_calls":2,"redis_shared_state_duration_s":0.000251,"redis_shared_state_read_bytes":2,"redis_shared_state_write_bytes":311,"db_count":2,"db_write_count":0,"db_cached_count":0,"duration_s":0.020409,"cpu_s":0.011416,"completed_at":"2022-05-01T20:20:17.605Z","db_duration_s":0.004041}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:20:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:20:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"395d63c5-e5a9-4b0f-bfb7-ef775a16dc5b","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01033,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:20:32.369Z","pid":318,"message":"PumaWorkerKiller: Consuming 5877.734375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:20:45 +0000
Processing by HelpController#index as */*
Completed 200 OK in 205ms (Views: 201.5ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366136)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:20:45.289Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"VfvbTX0h3Q7","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001103,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001103,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.013077,"cpu_s":0.21,"db_duration_s":0.00044,"view_duration_s":0.20152,"duration_s":0.20502,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"VfvbTX0h3Q7","duration_ms":222,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:20:45Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:20:45 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:20:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:20:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"a9c2f755-d83c-4a2f-aad1-8a8eb431eddf","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00985,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:20:52.369Z","pid":318,"message":"PumaWorkerKiller: Consuming 5884.140625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:21:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:21:01.696Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"e803e874-9758-49b3-acc0-07c62a993c73","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01074,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:21:12.370Z","pid":318,"message":"PumaWorkerKiller: Consuming 5871.9140625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:21:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:21:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c225ca9d-36ce-43c3-907a-717e6fd62279","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00978,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:21:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:21:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1ccde5fc-9e37-4152-8f01-8e01c21efbf9","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.00974,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:21:32.370Z","pid":318,"message":"PumaWorkerKiller: Consuming 5872.88671875 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:21:32Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:21:45 +0000
Processing by HelpController#index as */*
Completed 200 OK in 207ms (Views: 203.2ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366114)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:21:45.566Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"uosxERJjEN9","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.00116,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.00116,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005632,"cpu_s":0.21,"db_duration_s":0.00032,"view_duration_s":0.20322,"duration_s":0.20668,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"uosxERJjEN9","duration_ms":217,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:21:45Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:21:45 +0000] "GET /help HTTP/1.1" 200 90911 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:21:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:21:46.696Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"62dfcbab-de10-4225-b418-361b063b742d","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01101,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:21:50Z","wrapper":353}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:21:52.371Z","pid":318,"message":"PumaWorkerKiller: Consuming 5814.90625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:22:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:22:01.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"8f5c2705-105e-4c7d-8fbb-e3d309d9fdd1","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00965,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:22:12.372Z","pid":318,"message":"PumaWorkerKiller: Consuming 5815.484375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:22:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:22:16.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"aad7c893-b068-4820-84d6-be87d267578f","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00985,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:22:17Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:22:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:22:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"ecaa3c5a-d492-4865-83d9-d9e097514458","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.0099,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:22:32.373Z","pid":318,"message":"PumaWorkerKiller: Consuming 5816.16015625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:22:45 +0000
Processing by HelpController#index as */*
Completed 200 OK in 210ms (Views: 206.7ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366277)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:22:45.846Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"dN0TvAKZXd5","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001279,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001279,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.004877,"cpu_s":0.22,"db_duration_s":0.00034,"view_duration_s":0.20668,"duration_s":0.21023,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"dN0TvAKZXd5","duration_ms":219,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:22:45Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:22:45 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:22:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:22:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"e4be5bfa-efec-458d-9945-1a2d217278fc","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00985,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:22:52.373Z","pid":318,"message":"PumaWorkerKiller: Consuming 5837.453125 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:22:55Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:22:55Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:23:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:23:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"5f849b1e-6300-42a4-99d4-de127d6372c0","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00031,"duration_s":0.00986,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:23:12.374Z","pid":318,"message":"PumaWorkerKiller: Consuming 5837.265625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:23:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:23:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"61df8b32-9ba8-4d32-a1c8-f4119c95210c","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00987,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:23:31Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:23:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:23:31.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"0e756a3e-b606-4735-936a-f4a2eee88435","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01053,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:23:32.375Z","pid":318,"message":"PumaWorkerKiller: Consuming 5812.23046875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:23:45 +0000
Processing by HelpController#index as */*
Completed 200 OK in 206ms (Views: 202.3ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366123)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:23:46.145Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"BD14hawoUK","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001202,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001202,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005645,"cpu_s":0.21,"db_duration_s":0.00037,"view_duration_s":0.20226,"duration_s":0.20592,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"BD14hawoUK","duration_ms":215,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:23:46Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:23:46 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:23:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:23:46.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"b18e4b6f-d4ff-4201-8109-8b6bd34e0a0b","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00966,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:23:52.376Z","pid":318,"message":"PumaWorkerKiller: Consuming 5817.87109375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:24:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:24:01.707Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"379cd5ae-b5f9-4cc4-9496-26e60caca4f3","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:24:12.376Z","pid":318,"message":"PumaWorkerKiller: Consuming 5818.04296875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:24:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:24:16.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"3bfac45d-63af-4432-a08e-e45e3241f781","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00023,"duration_s":0.00965,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:24:23.307Z","queue":"cronjob:environments_auto_stop_cron","class":"Environments::AutoStopCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"a6bea1ea89157a496c6dae3d","created_at":"2022-05-01T20:24:23.306Z","meta.caller_id":"Cronjob","correlation_id":"55ec3cd1d2f45ec1e3da8e1b267c001e","enqueued_at":"2022-05-01T20:24:23.306Z","pid":439,"message":"Environments::AutoStopCronWorker JID-a6bea1ea89157a496c6dae3d: start","job_status":"start","scheduling_latency_s":0.000771}
{"severity":"INFO","time":"2022-05-01T20:24:23.338Z","queue":"cronjob:environments_auto_stop_cron","class":"Environments::AutoStopCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"a6bea1ea89157a496c6dae3d","created_at":"2022-05-01T20:24:23.306Z","meta.caller_id":"Cronjob","correlation_id":"55ec3cd1d2f45ec1e3da8e1b267c001e","enqueued_at":"2022-05-01T20:24:23.306Z","pid":439,"message":"Environments::AutoStopCronWorker JID-a6bea1ea89157a496c6dae3d: done: 0.03044 sec","job_status":"done","scheduling_latency_s":0.000771,"redis_calls":5,"redis_duration_s":0.000607,"redis_read_bytes":207,"redis_write_bytes":605,"redis_cache_calls":1,"redis_cache_duration_s":0.000231,"redis_cache_read_bytes":203,"redis_cache_write_bytes":110,"redis_queues_calls":2,"redis_queues_duration_s":0.000146,"redis_queues_read_bytes":2,"redis_queues_write_bytes":204,"redis_shared_state_calls":2,"redis_shared_state_duration_s":0.00023,"redis_shared_state_read_bytes":2,"redis_shared_state_write_bytes":291,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.03044,"cpu_s":0.008082,"completed_at":"2022-05-01T20:24:23.338Z","db_duration_s":0.00057}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:24:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:24:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"2b118577-757e-4237-8a1c-3b97bab0d132","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00976,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:24:32.377Z","pid":318,"message":"PumaWorkerKiller: Consuming 5818.4375 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:24:37Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:24:46 +0000
Processing by HelpController#index as */*
Completed 200 OK in 234ms (Views: 231.2ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366116)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:24:46.459Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"Bs3oVFsfsT7","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001134,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001134,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005021,"cpu_s":0.24,"db_duration_s":0.0003,"view_duration_s":0.23117,"duration_s":0.23456,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"Bs3oVFsfsT7","duration_ms":243,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:24:46Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:24:46 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:24:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:24:46.707Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"570077cb-79fb-49a1-9cca-cd502d883aca","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01014,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/redis/current <==
2022-05-01_20:24:52.04773 350:M 01 May 2022 20:24:52.047 * 10 changes in 300 seconds. Saving...
2022-05-01_20:24:52.04802 350:M 01 May 2022 20:24:52.047 * Background saving started by pid 5194
2022-05-01_20:24:52.05497 5194:C 01 May 2022 20:24:52.054 * DB saved on disk
2022-05-01_20:24:52.05535 5194:C 01 May 2022 20:24:52.055 * RDB: 1 MB of memory used by copy-on-write
2022-05-01_20:24:52.14930 350:M 01 May 2022 20:24:52.149 * Background saving terminated with success

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:24:52.378Z","pid":318,"message":"PumaWorkerKiller: Consuming 5851.125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:25:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:25:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"115307e5-ebb7-408d-90c3-d8b77c125fe3","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00981,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:25:12.378Z","pid":318,"message":"PumaWorkerKiller: Consuming 5851.59375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:25:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:25:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"26b233b5-a89c-40f8-8da0-a5a77a24f9bb","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00988,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:25:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:25:31.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"49dc4b52-bace-418f-89b2-deff3f88cf17","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.01112,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:25:32.379Z","pid":318,"message":"PumaWorkerKiller: Consuming 5834.87890625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:25:46 +0000
Processing by HelpController#index as */*
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:25:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:25:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"da56e098-12c4-41f2-a208-8784051dbabd","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.01006,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Completed 200 OK in 206ms (Views: 202.8ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366135)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:25:46.741Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"OTbR9KVk5O1","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001122,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001122,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.001894,"cpu_s":0.21,"db_duration_s":0.00029,"view_duration_s":0.20284,"duration_s":0.20637,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"OTbR9KVk5O1","duration_ms":212,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:25:46Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:25:46 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:25:52.380Z","pid":318,"message":"PumaWorkerKiller: Consuming 5850.76171875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:26:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:26:01.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"e81a34c2-fb4c-4473-958d-934fe203c9cb","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.01074,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:26:12.381Z","pid":318,"message":"PumaWorkerKiller: Consuming 5838.328125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:26:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:26:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"0b508837-4ec0-4085-855e-d1fc9ce78d0a","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00969,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:26:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:26:31.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"a5dd414c-7515-4e2f-b32b-2c23a2628317","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.01086,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:26:32.382Z","pid":318,"message":"PumaWorkerKiller: Consuming 5829.0 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:26:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:26:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"40e191ce-59c4-4da2-99ed-ce76a60138d0","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.0099,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:26:46 +0000
Processing by HelpController#index as */*
Completed 200 OK in 237ms (Views: 233.8ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366136)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:26:47.071Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"X0cxFOqY8V7","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001138,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001138,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.001603,"cpu_s":0.24,"db_duration_s":0.0003,"view_duration_s":0.23384,"duration_s":0.23743,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"X0cxFOqY8V7","duration_ms":243,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:26:47Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:26:47 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:26:52.382Z","pid":318,"message":"PumaWorkerKiller: Consuming 5861.5625 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:26:57Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:26:58Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:27:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:27:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"07fa5a85-bd47-4c4e-8d89-62312127ceb4","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00974,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:27:12.383Z","pid":318,"message":"PumaWorkerKiller: Consuming 5861.015625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:27:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:27:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"ad12a610-393d-4bae-a4a2-4fb45f2a63bd","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00974,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:27:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:27:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"9c37f9f5-c840-40e9-9e58-c598cb48a8f8","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00968,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:27:32.384Z","pid":318,"message":"PumaWorkerKiller: Consuming 5860.88671875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:27:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:27:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c97ff30c-f964-4ec7-825f-bc90037336c7","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01033,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:27:47 +0000
Processing by HelpController#index as */*
Completed 200 OK in 239ms (Views: 235.3ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366142)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:27:47.391Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"qGzKRQ6slz3","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001284,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001284,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.001633,"cpu_s":0.24,"db_duration_s":0.00034,"view_duration_s":0.23532,"duration_s":0.23895,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"qGzKRQ6slz3","duration_ms":244,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:27:47Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:27:47 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:27:52.385Z","pid":318,"message":"PumaWorkerKiller: Consuming 5890.24609375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:28:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:28:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"ffa16bda-3477-46db-92a2-f62da5ee3014","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.0099,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:28:12.386Z","pid":318,"message":"PumaWorkerKiller: Consuming 5890.58203125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:28:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:28:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c2913b18-9d07-48fb-bb81-1ad2d081b93e","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:28:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:28:31.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"98c7369a-e19c-4b46-b254-5d823994c545","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00975,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:28:32.386Z","pid":318,"message":"PumaWorkerKiller: Consuming 5891.609375 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:28:37Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:28:37Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:28:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:28:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d73fe0cb-5837-42fb-b45e-8721d6aea8fa","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:28:47 +0000
Processing by HelpController#index as */*
Completed 200 OK in 202ms (Views: 198.7ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366114)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:28:47.678Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"Jp1jnpE7xY6","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001179,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001179,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005077,"cpu_s":0.21,"db_duration_s":0.00035,"view_duration_s":0.19874,"duration_s":0.20216,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"Jp1jnpE7xY6","duration_ms":211,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:28:47Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:28:47 +0000] "GET /help HTTP/1.1" 200 90911 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:28:52.387Z","pid":318,"message":"PumaWorkerKiller: Consuming 5890.18359375 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:28:58Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:29:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:29:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"bfa5900e-2b55-464d-9158-7ec60cecea33","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00972,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:29:12.388Z","pid":318,"message":"PumaWorkerKiller: Consuming 5890.90625 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:29:15Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:29:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:29:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"2d33daf8-1162-4a12-a75b-b83ebfb1ef87","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00995,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:29:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:29:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"72145393-ccbd-4e02-9eec-51d1d0c5b51b","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00986,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:29:32.388Z","pid":318,"message":"PumaWorkerKiller: Consuming 5891.51171875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:29:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:29:46.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"0f1fc892-6fad-41d0-9dd8-b5e198949d0f","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01101,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:29:47 +0000
Processing by HelpController#index as */*
Completed 200 OK in 204ms (Views: 199.5ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366198)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:29:47.969Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"RFltNOWoG49","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.000952,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.000952,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.00205,"cpu_s":0.21,"db_duration_s":0.00036,"view_duration_s":0.19952,"duration_s":0.20386,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"RFltNOWoG49","duration_ms":210,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:29:47Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:29:47 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:29:52.389Z","pid":318,"message":"PumaWorkerKiller: Consuming 5863.1640625 mb with master and 8 workers."}

==> /var/log/gitlab/redis/current <==
2022-05-01_20:29:53.03023 350:M 01 May 2022 20:29:53.030 * 10 changes in 300 seconds. Saving...
2022-05-01_20:29:53.03046 350:M 01 May 2022 20:29:53.030 * Background saving started by pid 5921
2022-05-01_20:29:53.03751 5921:C 01 May 2022 20:29:53.037 * DB saved on disk
2022-05-01_20:29:53.03783 5921:C 01 May 2022 20:29:53.037 * RDB: 0 MB of memory used by copy-on-write
2022-05-01_20:29:53.13108 350:M 01 May 2022 20:29:53.131 * Background saving terminated with success

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:30:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:30:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"2e7c84cb-e433-434d-84a6-e7c77bf401f6","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.00992,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/sidekiq/current <==
{"severity":"INFO","time":"2022-05-01T20:30:04.145Z","queue":"cronjob:pages_domain_verification_cron","class":"PagesDomainVerificationCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"3418dd9c91b331e4c68124dc","created_at":"2022-05-01T20:30:04.143Z","meta.caller_id":"Cronjob","correlation_id":"f50b1953a197968c76ec2dae9f8d618d","enqueued_at":"2022-05-01T20:30:04.144Z","pid":439,"message":"PagesDomainVerificationCronWorker JID-3418dd9c91b331e4c68124dc: start","job_status":"start","scheduling_latency_s":0.000768}
{"severity":"INFO","time":"2022-05-01T20:30:04.162Z","queue":"cronjob:pages_domain_ssl_renewal_cron","class":"PagesDomainSslRenewalCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"f9334759913a7866b544cdaa","created_at":"2022-05-01T20:30:04.160Z","meta.caller_id":"Cronjob","correlation_id":"bb11cca288e40a870f35a068be0395a0","enqueued_at":"2022-05-01T20:30:04.160Z","pid":439,"message":"PagesDomainSslRenewalCronWorker JID-f9334759913a7866b544cdaa: start","job_status":"start","scheduling_latency_s":0.001324}
{"severity":"INFO","time":"2022-05-01T20:30:04.175Z","queue":"cronjob:stuck_export_jobs","class":"StuckExportJobsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"de0ba59794c6b3a1f86a9832","created_at":"2022-05-01T20:30:04.163Z","meta.caller_id":"Cronjob","correlation_id":"c90f550c899f3cbd6acd5739d5c7025f","enqueued_at":"2022-05-01T20:30:04.165Z","pid":439,"message":"StuckExportJobsWorker JID-de0ba59794c6b3a1f86a9832: start","job_status":"start","scheduling_latency_s":0.010536}
{"severity":"INFO","time":"2022-05-01T20:30:04.195Z","queue":"cronjob:stuck_export_jobs","class":"StuckExportJobsWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"de0ba59794c6b3a1f86a9832","created_at":"2022-05-01T20:30:04.163Z","meta.caller_id":"Cronjob","correlation_id":"c90f550c899f3cbd6acd5739d5c7025f","enqueued_at":"2022-05-01T20:30:04.165Z","pid":439,"message":"StuckExportJobsWorker JID-de0ba59794c6b3a1f86a9832: done: 0.01988 sec","job_status":"done","scheduling_latency_s":0.010536,"redis_calls":2,"redis_duration_s":0.000399,"redis_read_bytes":2,"redis_write_bytes":194,"redis_queues_calls":2,"redis_queues_duration_s":0.000399,"redis_queues_read_bytes":2,"redis_queues_write_bytes":194,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.01988,"cpu_s":0.010152,"completed_at":"2022-05-01T20:30:04.195Z","db_duration_s":0.008093}
{"severity":"INFO","time":"2022-05-01T20:30:04.196Z","queue":"cronjob:pages_domain_verification_cron","class":"PagesDomainVerificationCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"3418dd9c91b331e4c68124dc","created_at":"2022-05-01T20:30:04.143Z","meta.caller_id":"Cronjob","correlation_id":"f50b1953a197968c76ec2dae9f8d618d","enqueued_at":"2022-05-01T20:30:04.144Z","pid":439,"message":"PagesDomainVerificationCronWorker JID-3418dd9c91b331e4c68124dc: done: 0.051211 sec","job_status":"done","scheduling_latency_s":0.000768,"redis_calls":3,"redis_duration_s":0.004103000000000001,"redis_read_bytes":205,"redis_write_bytes":262,"redis_cache_calls":1,"redis_cache_duration_s":0.000173,"redis_cache_read_bytes":203,"redis_cache_write_bytes":55,"redis_queues_calls":2,"redis_queues_duration_s":0.00393,"redis_queues_read_bytes":2,"redis_queues_write_bytes":207,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.051211,"cpu_s":0.006749,"completed_at":"2022-05-01T20:30:04.196Z","db_duration_s":0.011738}
{"severity":"INFO","time":"2022-05-01T20:30:04.200Z","queue":"cronjob:pages_domain_ssl_renewal_cron","class":"PagesDomainSslRenewalCronWorker","retry":0,"version":0,"queue_namespace":"cronjob","jid":"f9334759913a7866b544cdaa","created_at":"2022-05-01T20:30:04.160Z","meta.caller_id":"Cronjob","correlation_id":"bb11cca288e40a870f35a068be0395a0","enqueued_at":"2022-05-01T20:30:04.160Z","pid":439,"message":"PagesDomainSslRenewalCronWorker JID-f9334759913a7866b544cdaa: done: 0.038406 sec","job_status":"done","scheduling_latency_s":0.001324,"redis_calls":3,"redis_duration_s":0.002249,"redis_read_bytes":205,"redis_write_bytes":316,"redis_cache_calls":1,"redis_cache_duration_s":0.001774,"redis_cache_read_bytes":203,"redis_cache_write_bytes":110,"redis_queues_calls":2,"redis_queues_duration_s":0.000475,"redis_queues_read_bytes":2,"redis_queues_write_bytes":206,"db_count":1,"db_write_count":0,"db_cached_count":0,"duration_s":0.038406,"cpu_s":0.008841,"completed_at":"2022-05-01T20:30:04.200Z","db_duration_s":0.012047}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:30:12.390Z","pid":318,"message":"PumaWorkerKiller: Consuming 5863.59765625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:30:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:30:16.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"6035240f-9a00-434a-bd3e-845c76a20d22","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.0098,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:30:23 +0000] "-  -" 400 0 "" "-" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:30:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:30:31.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"3e11a1c5-caa3-40e1-ac1c-b5be8650141b","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00964,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:30:32.390Z","pid":318,"message":"PumaWorkerKiller: Consuming 5864.03125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:30:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:30:46.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"93cfb5c2-aa3c-4413-bb66-a7b95b527ef8","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01043,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:30:48 +0000
Processing by HelpController#index as */*
Completed 200 OK in 201ms (Views: 197.6ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366114)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:30:48.257Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"ma6RZgfQoo4","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001237,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001237,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.004888,"cpu_s":0.21,"db_duration_s":0.00036,"view_duration_s":0.19763,"duration_s":0.20113,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"ma6RZgfQoo4","duration_ms":210,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:30:48Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:30:48 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:30:52.391Z","pid":318,"message":"PumaWorkerKiller: Consuming 5875.2421875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:31:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:31:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"10006af4-4af2-4903-b1ab-a86f112ed787","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.0097,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:31:12.392Z","pid":318,"message":"PumaWorkerKiller: Consuming 5875.8828125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:31:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:31:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"5bfc772e-b1b9-4c8c-8ad7-3fa29b52f82e","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01006,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:31:26Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:31:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:31:31.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1b6cf1f0-e644-44cc-88a2-3417d67594ed","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.00987,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:31:32.393Z","pid":318,"message":"PumaWorkerKiller: Consuming 5876.03125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:31:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:31:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"6dfd22c1-5490-41a4-88df-c6be1455f0e0","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00026,"duration_s":0.00982,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:31:48 +0000
Processing by HelpController#index as */*
Completed 200 OK in 237ms (Views: 233.5ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366138)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:31:48.576Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"yVeCRDmglV5","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001252,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001252,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.00527,"cpu_s":0.24,"db_duration_s":0.00032,"view_duration_s":0.23352,"duration_s":0.23701,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"yVeCRDmglV5","duration_ms":246,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:31:48Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:31:48 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:31:50Z","wrapper":353}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:31:52.393Z","pid":318,"message":"PumaWorkerKiller: Consuming 5908.12890625 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:31:59Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:32:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:32:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"bda42493-8f2c-4c57-b47c-facab9351da0","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00966,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:32:12.394Z","pid":318,"message":"PumaWorkerKiller: Consuming 5908.2890625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:32:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:32:16.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"b12013f0-90e7-46e0-b4c2-446b7025e4e3","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01077,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:32:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:32:31.694Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"fa0ac086-31e3-423d-91f6-597e2fb2b22e","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.00963,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:32:32.395Z","pid":318,"message":"PumaWorkerKiller: Consuming 5895.0 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:32:44Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:32:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:32:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d60b004f-bc5d-4235-bac1-b665f4082da4","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.01016,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:32:48 +0000
Processing by HelpController#index as */*
Completed 200 OK in 206ms (Views: 202.0ms | ActiveRecord: 0.4ms | Elasticsearch: 0.0ms | Allocations: 366126)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:32:48.862Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"R03UJWa63P6","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001134,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001134,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.003014,"cpu_s":0.21,"db_duration_s":0.00037,"view_duration_s":0.202,"duration_s":0.20566,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"R03UJWa63P6","duration_ms":212,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:32:48Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:32:48 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:32:52.396Z","pid":318,"message":"PumaWorkerKiller: Consuming 5880.265625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:33:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:33:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1aef0d2d-b680-47ed-ba51-bf492f435936","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.00979,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:33:12.397Z","pid":318,"message":"PumaWorkerKiller: Consuming 5880.7421875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/" for 192.168.1.94 at 2022-05-01 20:33:14 +0000
Processing by RootController#index as HTML
Redirected to https://europa:8090/users/sign_in
Filter chain halted as :redirect_unlogged_user rendered or redirected
Completed 302 Found in 6ms (ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 4331)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/","format":"html","controller":"RootController","action":"index","status":302,"location":"https://europa:8090/users/sign_in","time":"2022-05-01T20:33:14.028Z","params":[],"remote_ip":"192.168.1.94","user_id":null,"username":null,"ua":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","correlation_id":"AMhpYSuV7K4","meta.caller_id":"RootController#index","redis_calls":4,"redis_duration_s":0.00033,"redis_read_bytes":811,"redis_write_bytes":210,"redis_cache_calls":4,"redis_cache_duration_s":0.00033,"redis_cache_read_bytes":811,"redis_cache_write_bytes":210,"queue_duration_s":0.001702,"cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.0,"duration_s":0.00574,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"AMhpYSuV7K4","duration_ms":10,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":302,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":99}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET / HTTP/2.0" 302 99 "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/users/sign_in" for 192.168.1.94 at 2022-05-01 20:33:14 +0000
Processing by SessionsController#new as HTML
Redirected to https://europa:8090/users/password/edit?reset_password_token=9ezRzaRgK7tjwyUXpUGf
Filter chain halted as :check_initial_setup rendered or redirected
Completed 302 Found in 132ms (ActiveRecord: 19.3ms | Elasticsearch: 0.0ms | Allocations: 46163)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/users/sign_in","format":"html","controller":"SessionsController","action":"new","status":302,"location":"https://europa:8090/users/password/edit","time":"2022-05-01T20:33:14.180Z","params":[],"remote_ip":"192.168.1.94","user_id":null,"username":null,"ua":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","queue_duration_s":0.001699,"correlation_id":"BHweGlPBrd6","cpu_s":0.12,"db_duration_s":0.01926,"view_duration_s":0.0,"duration_s":0.13165,"db_count":7,"db_write_count":1,"db_cached_count":0}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"BHweGlPBrd6","duration_ms":138,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":302,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/users/sign_in","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":147}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /users/sign_in HTTP/2.0" 302 147 "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/users/password/edit?reset_password_token=[FILTERED]" for 192.168.1.94 at 2022-05-01 20:33:14 +0000
Processing by PasswordsController#edit as HTML
  Parameters: {"reset_password_token"=>"[FILTERED]"}
Completed 200 OK in 112ms (Views: 26.2ms | ActiveRecord: 1.8ms | Elasticsearch: 0.0ms | Allocations: 53581)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/users/password/edit","format":"html","controller":"PasswordsController","action":"edit","status":200,"time":"2022-05-01T20:33:14.304Z","params":[{"key":"reset_password_token","value":"[FILTERED]"}],"remote_ip":"192.168.1.94","user_id":null,"username":null,"ua":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","correlation_id":"XebzcILosf7","meta.caller_id":"PasswordsController#edit","redis_calls":12,"redis_duration_s":0.001588,"redis_read_bytes":1893,"redis_write_bytes":795,"redis_cache_calls":11,"redis_cache_duration_s":0.001196,"redis_cache_read_bytes":1776,"redis_cache_write_bytes":625,"redis_shared_state_calls":1,"redis_shared_state_duration_s":0.000392,"redis_shared_state_read_bytes":117,"redis_shared_state_write_bytes":170,"queue_duration_s":0.001743,"cpu_s":0.11,"db_duration_s":0.00179,"view_duration_s":0.02618,"duration_s":0.11199,"db_count":4,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"XebzcILosf7","duration_ms":118,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/users/password/edit?reset_password_token=[FILTERED]","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":10082}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /users/password/edit?reset_password_token=9ezRzaRgK7tjwyUXpUGf HTTP/2.0" 200 4148 "" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" 2.43

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"CnuGN8qqVX6","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/application-969119f639d0837f445a10ced20d3a82d2ea69d682a4e74f39a48a4e7b443d5e.css","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/application-969119f639d0837f445a10ced20d3a82d2ea69d682a4e74f39a48a4e7b443d5e.css"}
{"correlation_id":"CnuGN8qqVX6","duration_ms":1,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/application-969119f639d0837f445a10ced20d3a82d2ea69d682a4e74f39a48a4e7b443d5e.css","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":179736}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/application-969119f639d0837f445a10ced20d3a82d2ea69d682a4e74f39a48a4e7b443d5e.css HTTP/2.0" 200 179736 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"mzWlyNpeR91","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/highlight/themes/white-0678dba52a34ddc3b009cf294c54cfbddb9bac5991d6377ab811afe156e5a0cb.css","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/highlight/themes/white-0678dba52a34ddc3b009cf294c54cfbddb9bac5991d6377ab811afe156e5a0cb.css"}
{"correlation_id":"mzWlyNpeR91","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/highlight/themes/white-0678dba52a34ddc3b009cf294c54cfbddb9bac5991d6377ab811afe156e5a0cb.css","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":948}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/highlight/themes/white-0678dba52a34ddc3b009cf294c54cfbddb9bac5991d6377ab811afe156e5a0cb.css HTTP/2.0" 200 948 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"XNIlZpY3MT5","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/themes/theme_indigo-1e3c170ae7fd24d137960957cba8221abf63a78f8b108e77f131b0fed6a659c7.css","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/themes/theme_indigo-1e3c170ae7fd24d137960957cba8221abf63a78f8b108e77f131b0fed6a659c7.css"}
{"correlation_id":"XNIlZpY3MT5","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/themes/theme_indigo-1e3c170ae7fd24d137960957cba8221abf63a78f8b108e77f131b0fed6a659c7.css","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":752}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/themes/theme_indigo-1e3c170ae7fd24d137960957cba8221abf63a78f8b108e77f131b0fed6a659c7.css HTTP/2.0" 200 752 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"O0R0b9iJCF5","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/runtime.cf03c281.bundle.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/runtime.cf03c281.bundle.js"}
{"correlation_id":"O0R0b9iJCF5","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/runtime.cf03c281.bundle.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":2878}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/webpack/runtime.cf03c281.bundle.js HTTP/2.0" 200 2878 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"3ygPItbkw9a","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/main.51b8c03b.chunk.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/main.51b8c03b.chunk.js"}
{"correlation_id":"3ygPItbkw9a","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/main.51b8c03b.chunk.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":220440}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/webpack/main.51b8c03b.chunk.js HTTP/2.0" 200 220440 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"Y3GDWwEzHX2","encoding":"","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/default.12b2c5b6.chunk.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/default.12b2c5b6.chunk.js"}
{"correlation_id":"Y3GDWwEzHX2","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/default.12b2c5b6.chunk.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":156}
{"correlation_id":"ZWPxn7gauY3","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/icons-795a2ef2fd636a0538bbef3b8d2787dd90927b42d7617fdda8620930016b333d.svg","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/icons-795a2ef2fd636a0538bbef3b8d2787dd90927b42d7617fdda8620930016b333d.svg"}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/webpack/default.12b2c5b6.chunk.js HTTP/2.0" 200 156 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"ZWPxn7gauY3","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/icons-795a2ef2fd636a0538bbef3b8d2787dd90927b42d7617fdda8620930016b333d.svg","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":30704}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/icons-795a2ef2fd636a0538bbef3b8d2787dd90927b42d7617fdda8620930016b333d.svg HTTP/2.0" 200 30704 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"RQeLCR1dxQ","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/vendors-shortcutsBundle.f2f92312.chunk.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/vendors-shortcutsBundle.f2f92312.chunk.js"}
{"correlation_id":"RQeLCR1dxQ","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/vendors-shortcutsBundle.f2f92312.chunk.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":3684}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/webpack/vendors-shortcutsBundle.f2f92312.chunk.js HTTP/2.0" 200 3684 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"V2t16023Hf8","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/shortcutsBundle.12e3d77f.chunk.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/shortcutsBundle.12e3d77f.chunk.js"}
{"correlation_id":"V2t16023Hf8","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/webpack/shortcutsBundle.12e3d77f.chunk.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":2030}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/webpack/shortcutsBundle.12e3d77f.chunk.js HTTP/2.0" 200 2030 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"e0rW3jEVuk6","encoding":"","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:33:14Z","uri":"/assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png"}
{"correlation_id":"e0rW3jEVuk6","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:14Z","uri":"/assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png","user_agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36","written_bytes":1611}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:33:14 +0000] "GET /assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png HTTP/2.0" 200 1611 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:33:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:33:16.700Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"71ba9c5d-7bf3-4b17-9e27-ab279d9ab2ab","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.0146,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:33:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:33:31.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"2fa73ea0-13e1-484f-87fa-55cd09396076","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00029,"duration_s":0.00996,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:33:32.397Z","pid":318,"message":"PumaWorkerKiller: Consuming 5861.5546875 mb with master and 8 workers."}

==> /var/log/gitlab/registry/current <==
2022-05-01_20:33:46.64439 time="2022-05-01T20:33:46.644347349Z" level=info msg="PurgeUploads starting: olderThan=2022-04-24 20:33:46.644313463 +0000 UTC m=-602459.984945344, actuallyDelete=true"
2022-05-01_20:33:46.64446 time="2022-05-01T20:33:46.644453548Z" level=info msg="Purge uploads finished.  Num deleted=0, num errors=1"
2022-05-01_20:33:46.64447 time="2022-05-01T20:33:46.644462097Z" level=info msg="Starting upload purge in 24h0m0s" environment=production go.version=go1.14.7 instance.id=35dc8d75-47eb-4604-b013-9ca17955518d service=registry version=v2.10.1-gitlab

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:33:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:33:46.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"1d5cbd91-cbea-4078-96ff-588da6657ad3","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01003,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:33:48 +0000
Processing by HelpController#index as */*
Completed 200 OK in 197ms (Views: 194.2ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366122)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:33:49.142Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"ncqwkKLsii6","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001078,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001078,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005263,"cpu_s":0.2,"db_duration_s":0.00029,"view_duration_s":0.19424,"duration_s":0.19753,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"ncqwkKLsii6","duration_ms":206,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:33:49Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:33:49 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:33:52.398Z","pid":318,"message":"PumaWorkerKiller: Consuming 5865.09765625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:34:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:34:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"81f76d44-2174-4bc5-a13e-1b1e416751cc","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.01004,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:34:12.399Z","pid":318,"message":"PumaWorkerKiller: Consuming 5865.44140625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:34:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:34:16.707Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"3b4d0233-7c3d-41ea-8d83-cf1e9fce96d8","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00027,"duration_s":0.0107,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:34:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:34:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"f314052d-00c8-4097-a628-06da8279d9b1","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01025,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:34:32.399Z","pid":318,"message":"PumaWorkerKiller: Consuming 5865.9375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:34:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:34:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"40ab71c5-8876-4379-ae39-5956f64886cd","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01022,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:34:49 +0000
Processing by HelpController#index as */*
Completed 200 OK in 240ms (Views: 236.4ms | ActiveRecord: 0.5ms | Elasticsearch: 0.0ms | Allocations: 366116)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:34:49.473Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"ekda83LGgF3","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001357,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001357,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005031,"cpu_s":0.25,"db_duration_s":0.0005,"view_duration_s":0.23642,"duration_s":0.23996,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"ekda83LGgF3","duration_ms":249,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:34:49Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:34:49 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:34:52.400Z","pid":318,"message":"PumaWorkerKiller: Consuming 5897.73046875 mb with master and 8 workers."}

==> /var/log/gitlab/redis/current <==
2022-05-01_20:34:54.07464 350:M 01 May 2022 20:34:54.074 * 10 changes in 300 seconds. Saving...
2022-05-01_20:34:54.07490 350:M 01 May 2022 20:34:54.074 * Background saving started by pid 6645
2022-05-01_20:34:54.08188 6645:C 01 May 2022 20:34:54.081 * DB saved on disk
2022-05-01_20:34:54.08223 6645:C 01 May 2022 20:34:54.082 * RDB: 0 MB of memory used by copy-on-write
2022-05-01_20:34:54.17549 350:M 01 May 2022 20:34:54.175 * Background saving terminated with success

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:35:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1521)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:35:01.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"caa58141-ea43-4baf-8ce6-f7542245c0d3","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01015,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:35:12.401Z","pid":318,"message":"PumaWorkerKiller: Consuming 5898.01171875 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:35:14Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:35:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:35:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"d532571f-a430-4ca3-a6fc-cf7b5c8f8cf5","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.01002,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:35:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:35:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"b86011b1-7ad4-42f1-a084-8a5887fc8afd","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01003,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:35:32.401Z","pid":318,"message":"PumaWorkerKiller: Consuming 5898.7265625 mb with master and 8 workers."}

==> /var/log/gitlab/gitaly/current <==
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:35:40Z","wrapper":353}
{"gitaly":372,"level":"warning","msg":"forwarding signal","signal":23,"time":"2022-05-01T20:35:40Z","wrapper":353}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:35:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:35:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"c7a52bb3-c0f6-424c-aa22-1d38376b8de1","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00023,"duration_s":0.01009,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:35:49 +0000
Processing by HelpController#index as */*
Completed 200 OK in 205ms (Views: 202.2ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366128)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:35:49.770Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"yYBUIj8VRk2","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001148,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001148,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.005291,"cpu_s":0.21,"db_duration_s":0.0003,"view_duration_s":0.20217,"duration_s":0.20555,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"yYBUIj8VRk2","duration_ms":215,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:35:49Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:35:49 +0000] "GET /help HTTP/1.1" 200 90911 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:35:52.402Z","pid":318,"message":"PumaWorkerKiller: Consuming 5914.046875 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:36:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:36:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"beb9dfba-037b-4133-87ea-52aa61e13b88","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00024,"duration_s":0.0102,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:36:12.403Z","pid":318,"message":"PumaWorkerKiller: Consuming 5914.76953125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:36:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 13ms (Views: 0.4ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:36:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"779585b8-f56e-4503-8ef8-58f1f1cdc17f","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00037,"duration_s":0.01315,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:36:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:36:31.697Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"ff6b28f3-a73d-47ea-80bd-5296bb78845b","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00031,"duration_s":0.01197,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:36:32.403Z","pid":318,"message":"PumaWorkerKiller: Consuming 5882.7109375 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:36:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1520)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:36:46.699Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"83d57f5d-4f6b-40b1-b38c-e4a576b16779","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01077,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:36:49 +0000
Processing by HelpController#index as */*
Completed 200 OK in 235ms (Views: 231.6ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366069)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:36:50.081Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"op8VIxoD8f5","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001058,"redis_read_bytes":1168,"redis_write_bytes":408,"redis_cache_calls":8,"redis_cache_duration_s":0.001058,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":408,"queue_duration_s":0.004948,"cpu_s":0.24,"db_duration_s":0.00027,"view_duration_s":0.23157,"duration_s":0.23468,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"op8VIxoD8f5","duration_ms":243,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:36:50Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:36:50 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:36:52.404Z","pid":318,"message":"PumaWorkerKiller: Consuming 5900.703125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/" for 192.168.1.94 at 2022-05-01 20:36:59 +0000
Processing by RootController#index as HTML
Redirected to https://europa:8090/users/sign_in
Filter chain halted as :redirect_unlogged_user rendered or redirected
Completed 302 Found in 8ms (ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 5168)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/","format":"html","controller":"RootController","action":"index","status":302,"location":"https://europa:8090/users/sign_in","time":"2022-05-01T20:36:59.781Z","params":[],"remote_ip":"192.168.1.94","user_id":null,"username":null,"ua":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","correlation_id":"sVAxjsKBvd8","meta.caller_id":"RootController#index","redis_calls":7,"redis_duration_s":0.000827,"redis_read_bytes":1337,"redis_write_bytes":404,"redis_cache_calls":7,"redis_cache_duration_s":0.000827,"redis_cache_read_bytes":1337,"redis_cache_write_bytes":404,"queue_duration_s":0.005447,"cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.0,"duration_s":0.0076,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"sVAxjsKBvd8","duration_ms":18,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":302,"system":"http","time":"2022-05-01T20:36:59Z","uri":"/","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":99}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:36:59 +0000] "GET / HTTP/2.0" 302 99 "" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/users/sign_in" for 192.168.1.94 at 2022-05-01 20:36:59 +0000
Processing by SessionsController#new as HTML
Redirected to https://europa:8090/users/password/edit?reset_password_token=kHrMsPsmB6Vz7xrYhBy2
Filter chain halted as :check_initial_setup rendered or redirected
Completed 302 Found in 133ms (ActiveRecord: 18.6ms | Elasticsearch: 0.0ms | Allocations: 46086)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/users/sign_in","format":"html","controller":"SessionsController","action":"new","status":302,"location":"https://europa:8090/users/password/edit","time":"2022-05-01T20:37:00.091Z","params":[],"remote_ip":"192.168.1.94","user_id":null,"username":null,"ua":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","queue_duration_s":0.001668,"correlation_id":"CMJxNfHtpb4","cpu_s":0.12,"db_duration_s":0.01859,"view_duration_s":0.0,"duration_s":0.13302,"db_count":7,"db_write_count":1,"db_cached_count":0}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"CMJxNfHtpb4","duration_ms":139,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":302,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/users/sign_in","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":147}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /users/sign_in HTTP/2.0" 302 147 "" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/users/password/edit?reset_password_token=[FILTERED]" for 192.168.1.94 at 2022-05-01 20:37:00 +0000
Processing by PasswordsController#edit as HTML
  Parameters: {"reset_password_token"=>"[FILTERED]"}
Completed 200 OK in 38ms (Views: 26.6ms | ActiveRecord: 0.8ms | Elasticsearch: 0.0ms | Allocations: 53558)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/users/password/edit","format":"html","controller":"PasswordsController","action":"edit","status":200,"time":"2022-05-01T20:37:00.204Z","params":[{"key":"reset_password_token","value":"[FILTERED]"}],"remote_ip":"192.168.1.94","user_id":null,"username":null,"ua":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","correlation_id":"aBtM6fXHsi1","meta.caller_id":"PasswordsController#edit","redis_calls":12,"redis_duration_s":0.001879,"redis_read_bytes":1893,"redis_write_bytes":795,"redis_cache_calls":11,"redis_cache_duration_s":0.001481,"redis_cache_read_bytes":1776,"redis_cache_write_bytes":625,"redis_shared_state_calls":1,"redis_shared_state_duration_s":0.000398,"redis_shared_state_read_bytes":117,"redis_shared_state_write_bytes":170,"queue_duration_s":0.005655,"cpu_s":0.04,"db_duration_s":0.00081,"view_duration_s":0.02655,"duration_s":0.03858,"db_count":4,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"aBtM6fXHsi1","duration_ms":48,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/users/password/edit?reset_password_token=[FILTERED]","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":10084}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /users/password/edit?reset_password_token=kHrMsPsmB6Vz7xrYhBy2 HTTP/2.0" 200 4143 "" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" 2.43

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"Pg4i7Df1Yl4","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/application-969119f639d0837f445a10ced20d3a82d2ea69d682a4e74f39a48a4e7b443d5e.css","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/application-969119f639d0837f445a10ced20d3a82d2ea69d682a4e74f39a48a4e7b443d5e.css"}
{"correlation_id":"StRZgxQMGU5","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/highlight/themes/white-0678dba52a34ddc3b009cf294c54cfbddb9bac5991d6377ab811afe156e5a0cb.css","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/highlight/themes/white-0678dba52a34ddc3b009cf294c54cfbddb9bac5991d6377ab811afe156e5a0cb.css"}
{"correlation_id":"StRZgxQMGU5","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/highlight/themes/white-0678dba52a34ddc3b009cf294c54cfbddb9bac5991d6377ab811afe156e5a0cb.css","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":948}
{"correlation_id":"Pg4i7Df1Yl4","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/application-969119f639d0837f445a10ced20d3a82d2ea69d682a4e74f39a48a4e7b443d5e.css","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":179736}
{"correlation_id":"snavybfwAF1","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/themes/theme_indigo-1e3c170ae7fd24d137960957cba8221abf63a78f8b108e77f131b0fed6a659c7.css","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/themes/theme_indigo-1e3c170ae7fd24d137960957cba8221abf63a78f8b108e77f131b0fed6a659c7.css"}
{"correlation_id":"snavybfwAF1","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/themes/theme_indigo-1e3c170ae7fd24d137960957cba8221abf63a78f8b108e77f131b0fed6a659c7.css","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":752}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/highlight/themes/white-0678dba52a34ddc3b009cf294c54cfbddb9bac5991d6377ab811afe156e5a0cb.css HTTP/2.0" 200 948 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/themes/theme_indigo-1e3c170ae7fd24d137960957cba8221abf63a78f8b108e77f131b0fed6a659c7.css HTTP/2.0" 200 752 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/application-969119f639d0837f445a10ced20d3a82d2ea69d682a4e74f39a48a4e7b443d5e.css HTTP/2.0" 200 179736 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"opqYKGfN5V7","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/runtime.cf03c281.bundle.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/runtime.cf03c281.bundle.js"}
{"correlation_id":"opqYKGfN5V7","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/runtime.cf03c281.bundle.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":2878}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/webpack/runtime.cf03c281.bundle.js HTTP/2.0" 200 2878 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"U5cutnUlbc2","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/main.51b8c03b.chunk.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/main.51b8c03b.chunk.js"}
{"correlation_id":"7VnzrRjmst3","encoding":"","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/default.12b2c5b6.chunk.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/default.12b2c5b6.chunk.js"}
{"correlation_id":"7VnzrRjmst3","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/default.12b2c5b6.chunk.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":156}
{"correlation_id":"U5cutnUlbc2","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/main.51b8c03b.chunk.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":220440}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/webpack/default.12b2c5b6.chunk.js HTTP/2.0" 200 156 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/webpack/main.51b8c03b.chunk.js HTTP/2.0" 200 220440 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"VW1RRX6ASOa","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/icons-795a2ef2fd636a0538bbef3b8d2787dd90927b42d7617fdda8620930016b333d.svg","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/icons-795a2ef2fd636a0538bbef3b8d2787dd90927b42d7617fdda8620930016b333d.svg"}
{"correlation_id":"VW1RRX6ASOa","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/icons-795a2ef2fd636a0538bbef3b8d2787dd90927b42d7617fdda8620930016b333d.svg","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":30704}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/icons-795a2ef2fd636a0538bbef3b8d2787dd90927b42d7617fdda8620930016b333d.svg HTTP/2.0" 200 30704 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"3sX5HfKmqF3","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/vendors-shortcutsBundle.f2f92312.chunk.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/vendors-shortcutsBundle.f2f92312.chunk.js"}
{"correlation_id":"3sX5HfKmqF3","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/vendors-shortcutsBundle.f2f92312.chunk.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":3684}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/webpack/vendors-shortcutsBundle.f2f92312.chunk.js HTTP/2.0" 200 3684 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"aC0LlMHLNi9","encoding":"gzip","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/webpack/shortcutsBundle.12e3d77f.chunk.js","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/shortcutsBundle.12e3d77f.chunk.js"}
{"correlation_id":"aC0LlMHLNi9","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:00Z","uri":"/assets/webpack/shortcutsBundle.12e3d77f.chunk.js","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":2030}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:00 +0000] "GET /assets/webpack/shortcutsBundle.12e3d77f.chunk.js HTTP/2.0" 200 2030 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"VuaBHWf2YR8","encoding":"","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:01Z","uri":"/assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png"}
{"correlation_id":"VuaBHWf2YR8","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:01Z","uri":"/assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":1611}
{"correlation_id":"mNj8NSGJ3s1","encoding":"","file":"/opt/gitlab/embedded/service/gitlab-rails/public/assets/touch-icon-ipad-retina-8ebe416f5313483d9c1bc772b5bbe03ecad52a54eba443e5215a22caed2a16a2.png","level":"info","method":"GET","msg":"Send static file","time":"2022-05-01T20:37:01Z","uri":"/assets/touch-icon-ipad-retina-8ebe416f5313483d9c1bc772b5bbe03ecad52a54eba443e5215a22caed2a16a2.png"}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:01 +0000] "GET /assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png HTTP/2.0" 200 1611 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"mNj8NSGJ3s1","duration_ms":0,"host":"europa:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"https://europa:8090/users/password/edit?reset_password_token=[FILTERED]","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:01Z","uri":"/assets/touch-icon-ipad-retina-8ebe416f5313483d9c1bc772b5bbe03ecad52a54eba443e5215a22caed2a16a2.png","user_agent":"Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0","written_bytes":5662}

==> /var/log/gitlab/nginx/gitlab_access.log <==
192.168.1.94 - - [01/May/2022:20:37:01 +0000] "GET /assets/touch-icon-ipad-retina-8ebe416f5313483d9c1bc772b5bbe03ecad52a54eba443e5215a22caed2a16a2.png HTTP/2.0" 200 5662 "https://europa:8090/users/password/edit" "Mozilla/5.0 (X11; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0" -

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:37:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1549)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:37:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"25a71ff0-8d23-45c5-9494-33e829e9c966","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00025,"duration_s":0.01002,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:37:12.405Z","pid":318,"message":"PumaWorkerKiller: Consuming 5881.1953125 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:37:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1549)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:37:16.706Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"db123d0a-0b52-456f-a2e4-55e2d5dc0876","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00023,"duration_s":0.00997,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:37:31 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1549)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:37:31.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"2ab278d7-fdc4-4f29-a80f-fcaacadbb8f4","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.00032,"duration_s":0.01026,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:37:32.406Z","pid":318,"message":"PumaWorkerKiller: Consuming 5882.00390625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:37:46 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1549)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:37:46.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"eed88189-6080-4456-a935-97192563eafa","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.01015,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/help" for 127.0.0.1 at 2022-05-01 20:37:50 +0000
Processing by HelpController#index as */*
Completed 200 OK in 238ms (Views: 234.6ms | ActiveRecord: 0.3ms | Elasticsearch: 0.0ms | Allocations: 366236)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/help","format":"*/*","controller":"HelpController","action":"index","status":200,"time":"2022-05-01T20:37:50.407Z","params":[],"remote_ip":"127.0.0.1","user_id":null,"username":null,"ua":"curl/7.59.0-DEV","correlation_id":"UpLxXFPzdR","meta.caller_id":"HelpController#index","redis_calls":8,"redis_duration_s":0.001288,"redis_read_bytes":1168,"redis_write_bytes":463,"redis_cache_calls":8,"redis_cache_duration_s":0.001288,"redis_cache_read_bytes":1168,"redis_cache_write_bytes":463,"queue_duration_s":0.00542,"cpu_s":0.24,"db_duration_s":0.00033,"view_duration_s":0.23464,"duration_s":0.23812,"db_count":3,"db_write_count":0,"db_cached_count":2}

==> /var/log/gitlab/gitlab-workhorse/current <==
{"correlation_id":"UpLxXFPzdR","duration_ms":247,"host":"localhost:8090","level":"info","method":"GET","msg":"access","proto":"HTTP/1.1","referrer":"","remote_addr":"127.0.0.1:0","remote_ip":"127.0.0.1","status":200,"system":"http","time":"2022-05-01T20:37:50Z","uri":"/help","user_agent":"curl/7.59.0-DEV","written_bytes":90804}

==> /var/log/gitlab/nginx/gitlab_access.log <==
127.0.0.1 - - [01/May/2022:20:37:50 +0000] "GET /help HTTP/1.1" 200 90896 "" "curl/7.59.0-DEV" -

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:37:52.406Z","pid":318,"message":"PumaWorkerKiller: Consuming 5914.0625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:38:01 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1549)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:38:01.695Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"84b26224-31ee-48fa-906c-4f7e08b7ca38","cpu_s":0.01,"db_duration_s":0.0,"view_duration_s":0.0003,"duration_s":0.01027,"db_count":0,"db_write_count":0,"db_cached_count":0}

==> /var/log/gitlab/puma/puma_stdout.log <==
{"timestamp":"2022-05-01T20:38:12.407Z","pid":318,"message":"PumaWorkerKiller: Consuming 5914.0625 mb with master and 8 workers."}

==> /var/log/gitlab/gitlab-rails/production.log <==
Started GET "/-/metrics" for 127.0.0.1 at 2022-05-01 20:38:16 +0000
Processing by MetricsController#index as HTML
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms | Elasticsearch: 0.0ms | Allocations: 1549)

==> /var/log/gitlab/gitlab-rails/production_json.log <==
{"method":"GET","path":"/-/metrics","format":"html","controller":"MetricsController","action":"index","status":200,"time":"2022-05-01T20:38:16.698Z","params":[],"remote_ip":null,"user_id":null,"username":null,"ua":null,"correlation_id":"93aabb89-29f2-46e6-a4a9-21cb24864645","cpu_s":0.02,"db_duration_s":0.0,"view_duration_s":0.00028,"duration_s":0.01002,"db_count":0,"db_write_count":0,"db_cached_count":0}
