version: '3.8'
services:

        
        db_host:
                # container_name: db        // not supported by 'docker stack deploy'
                image: mysql:8
                environment:
                       - "MYSQL_ROOT_PASSWORD=1234"
                volumes:
                       - mysql-data-8:/var/lib/mysql
                networks:
                       - jenkins-nginx-network
                deploy:
                        replicas: 1
                        placement:
                                constraints: [ node.hostname == raflman-pc ]



        remote_host:
                #container_name: remote-host                 // not supported by 'docker stack deploy'
                #build:
                #       context: centos8
                image: raflman/jenkins-centos8:multiple-host
                networks:
                       - jenkins-nginx-network
                deploy:
                        replicas: 1
                        placement:
                                constraints: [ node.hostname == raflman-pc ]


                  
        jenkins:
                image: jenkins/jenkins:2.249.1-lts-centos
                privileged: true
                user: root
                #environment:
                       #- "JAVA_OPTS=-Xmx256m"
                ports:
                        - "50000:50000"
                          #container_name: jenkins-container
                volumes:
                        - jenkins-log:/var/log/jenkins
                        - jenkins-data:/var/jenkins_home

                          #- certbot-conf:/etc/letsencrypt
                          #- certbot-www:/var/www/certbot
                          #- /var/run/docker.sock:/var/run/docker.sock
                          #- /usr/local/bin/docker:/usr/local/bin/docker
                networks:
                        - jenkins-nginx-network
                deploy:
                        replicas: 1
                        placement:
                                constraints: [node.hostname == raflman-pc]



        nginx:
                # build: ./nginx            // not supported by 'docker stack deploy'
                #build:
                #        context: nginx
                image: raflman/jenkins-nginx:multiple-host
                ports:
                        - "80:80"
                        - "443:443"
                networks:
                        - jenkins-nginx-network
        
                          # certbot:
                          # image: certbot/certbot
                          # restart: unless-stopped
                          # volumes:
                          # - certbot-conf:/etc/letsencrypt
                          # - certbot-www:/var/www/certbot
                          # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
                deploy:
                        replicas: 1
                        placement:
                                constraints: [ node.hostname == raflman-pc ]
                        restart_policy:
                                condition: any
                                delay: 10s







        gitlab_server:
                image: raflman/gitlab-ce:latest
                #restart: always
                hostname: "jenkins.local"
                environment:
                        GITLAB_OMNIBUS_CONFIG: |
                                external_url "https://jenkins.local:8090"
                                gitlab_rails['gitlab_shell_ssh_port'] = 23

                                # Uncomment this if you want to install your certicate
                                # https://docs.gitlab.com/omnibus/settings/ssl.html#details-on-how-gitlab-and-ssl-work
                                letsencrypt['enable'] = false

                ports:
                        - '8090:8090'
                        - '23:22'
                volumes:
                        - gitlab-etc:/etc/gitlab
                        - gitlab-logs:/var/log/gitlab
                        - gitlab-data:/var/opt/gitlab
                networks:
                        - jenkins-nginx-network



                deploy:
                        mode: global
                        #replicas: 1
                        placement:
                                constraints: [ node.hostname == izzetcan-pc ]
                        restart_policy:
                                condition: none
                                delay: 10s
                                window: 300s







volumes:
        jenkins-log:
        jenkins-data:
        mysql-data-8:
        gitlab-etc:
        gitlab-logs:
        gitlab-data:

networks:
        jenkins-nginx-network:

